{"version":3,"sources":["components/Users/Users.module.css","components/elements/Paginator.module.css","assets/images/user.png","components/Users/User.tsx","assets/images/angleRightSolid.svg","assets/images/angleLeftSolid.svg","components/elements/Paginator.tsx","redux/usersSelector.ts","components/Users/UsersSearchForm.tsx","components/Users/Users.tsx","components/Users/UsersPage.tsx"],"names":["module","exports","User","user","follow","unfollow","followingInProgress","className","style","block","s","to","id","userPhoto","src","photos","large","alt","Avatar","container","userName","name","status","button","followed","BigButton","disabled","some","userId","value","click","Paginator","itemsCount","itemsCountOnPage","currentPage","onPageChanged","pageCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","onClick","leftArrow","filter","p","map","rightArrow","getUsers","state","usersPage","users","getUsersCount","usersCount","getUsersCountOnPage","usersCountOnPage","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","getUserFilter","usersSearchFormValidate","UsersSearchForm","React","memo","onFilterChanged","useSelector","usersSearch","enableReinitialize","initialValues","term","friend","String","validate","onSubmit","values","setSubmitting","isSubmitting","type","as","Users","props","dispatch","useDispatch","history","useHistory","querystring","require","useEffect","parsed","parse","location","search","substr","actualPage","actualFilter","page","console","log","responseUsers","query","pathname","stringify","followUser","unfollowUser","usersItems","u","pageNumber","UsersPage","Preloader"],"mappings":"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","file":"static/js/4.95986247.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pages\":\"Users_pages__2ZPtK\",\"usersPage\":\"Users_usersPage__3xdAn\",\"block\":\"Users_block__1re8X\",\"userPhoto\":\"Users_userPhoto__17MJB\",\"container\":\"Users_container__6F9oG\",\"user\":\"Users_user__1dQYj\",\"userName\":\"Users_userName__1mt5V\",\"status\":\"Users_status__E0SMG\",\"button\":\"Users_button__1saaY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Paginator_container__f8TvL\",\"pages\":\"Paginator_pages__2kyJo\",\"currentPage\":\"Paginator_currentPage__240Ug\",\"button\":\"Paginator_button__3aJZ7\"};","export default __webpack_public_path__ + \"static/media/user.03b91692.png\";","import React from \"react\";\nimport BigButton from \"../elements/BigButton\";\nimport s from \"./Users.module.css\";\nimport style from \"../../Style.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport { NavLink } from \"react-router-dom\";\nimport { UserType } from \"../../type/type\";\n\ntype PropsType = {\n  user: UserType;\n  followingInProgress: Array<number>;\n\n  follow: (userId: number) => void;\n  unfollow: (userId: number) => void;\n};\n\nconst User: React.FC<PropsType> = ({\n  user,\n  follow,\n  unfollow,\n  followingInProgress,\n}) => {\n  return (\n    <div className={style.block + \" \" + s.block}>\n      <NavLink to={`/profile/` + user.id}>\n        <div className={s.userPhoto}>\n          <img\n            src={user.photos.large ? user.photos.large : userPhoto}\n            alt={s.Avatar}\n          ></img>\n        </div>\n      </NavLink>\n      <div className={s.container}>\n        <div className={s.user}>\n          <div className={s.userName}>{user.name}</div>\n          {user.status ? (\n            <div className={s.status}>\n              <span>{user.status}</span>\n            </div>\n          ) : (\n            <></>\n          )}\n        </div>\n        <div className={s.button}>\n          {user.followed ? (\n            <BigButton\n              disabled={followingInProgress.some(\n                (userId) => userId === user.id\n              )}\n              value='unfollow'\n              click={() => {\n                unfollow(user.id);\n              }}\n            />\n          ) : (\n            <BigButton\n              disabled={followingInProgress.some(\n                (userId) => userId === user.id\n              )}\n              value='follow'\n              click={() => {\n                follow(user.id);\n              }}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default User;\n","export default __webpack_public_path__ + \"static/media/angleRightSolid.7d1c04c1.svg\";","export default __webpack_public_path__ + \"static/media/angleLeftSolid.bb631305.svg\";","import React, { useState } from \"react\";\nimport s from './Paginator.module.css';\nimport rightArrow from '../../assets/images/angleRightSolid.svg';\nimport leftArrow from '../../assets/images/angleLeftSolid.svg';\n\ntype PropsType = {\n\titemsCount: number\n\titemsCountOnPage: number\n\tcurrentPage: number\n\n\tonPageChanged: (pageNumber: number) => void\n}\n\nexport const Paginator: React.FC<PropsType> = ({ itemsCount, itemsCountOnPage, currentPage, onPageChanged }) => {\n\tlet pageCount = Math.ceil(itemsCount / itemsCountOnPage);\n\n\tlet pages = [];\n\tif (currentPage) {\n\t\tfor (let i = 1; i <= pageCount; i++) {\n\t\t\tpages.push(i)\n\t\t}\n\t}\n\tlet portionSize = 10;\n\tlet portionCount = Math.ceil(pageCount / portionSize);\n\tlet [portionNumber, setPortionNumber] = useState(1);\n\tlet leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n\tlet rightPortionPageNumber = portionNumber * portionSize;\n\n\treturn <div className={s.container}>\n\n\t\t<button onClick={() => setPortionNumber(--portionNumber)} className={s.button}>\n\t\t\t{portionNumber > 1 && <img src={leftArrow} alt='leftArrow' />}\n\t\t</button>\n\t\t<div className={s.pages}>\n\t\t\t{pages\n\t\t\t\t.filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\n\t\t\t\t.map(p => <span className={p === currentPage ? s.currentPage : ''}\n\t\t\t\t\tonClick={() => { onPageChanged(p) }} key={p}>{p}</span>)}\n\t\t</div>\n\t\t<button onClick={() => setPortionNumber(++portionNumber)} className={s.button}>\n\t\t\t{portionNumber < portionCount && <img src={rightArrow} alt='rightArrow' />}\n\t\t</button>\n\t</div>\n}\n\nexport default Paginator;","import { AppStateType } from \"./ReduxStore\";\n\nexport const getUsers = (state: AppStateType) => {\n\treturn state.usersPage.users;\n}\n\nexport const getUsersCount = (state: AppStateType) => {\n\treturn state.usersPage.usersCount;\n}\n\nexport const getUsersCountOnPage = (state: AppStateType) => {\n\treturn state.usersPage.usersCountOnPage;\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n\treturn state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n\treturn state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n\treturn state.usersPage.followingInProgress;\n}\n\nexport const getUserFilter = (state: AppStateType) => {\n\treturn state.usersPage.filter;\n}","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport { Field, Form, Formik } from \"formik\";\nimport { FilterType } from \"../../redux/UsersReducer\";\nimport { useSelector } from \"react-redux\";\nimport { getUserFilter } from \"../../redux/usersSelector\";\n\nconst usersSearchFormValidate = () => {\n  const errors = {};\n  return errors;\n};\n\ntype PropsType = {\n  onFilterChanged: (filter: FilterType) => void;\n};\n\ntype FriendFormType = \"true\" | \"false\" | \"null\";\ntype FormType = {\n  term: string;\n  friend: FriendFormType;\n};\n\nconst UsersSearchForm: React.FC<PropsType> = React.memo(\n  ({ onFilterChanged }) => {\n    const submit = (\n      values: { term: string; friend: string },\n      { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }\n    ) => {\n      onFilterChanged({\n        term: values.term,\n        friend:\n          values.friend === \"null\"\n            ? null\n            : values.friend === \"true\"\n            ? true\n            : false,\n      });\n      setSubmitting(false);\n    };\n\n    const filter = useSelector(getUserFilter);\n\n    return (\n      <div className={s.usersSearch}>\n        <Formik\n          enableReinitialize\n          initialValues={{\n            term: filter.term,\n            friend: String(filter.friend) as FriendFormType,\n          }}\n          validate={usersSearchFormValidate}\n          onSubmit={submit}\n        >\n          {({ isSubmitting }) => (\n            <Form>\n              <Field type='term' name='term' />\n              <Field as='select' name='friend'>\n                <option value='null'>All</option>\n                <option value='true'>Only followed</option>\n                <option value='false'>Only unfollowed</option>\n              </Field>\n              <button type='submit' disabled={isSubmitting}>\n                Search\n              </button>\n            </Form>\n          )}\n        </Formik>\n      </div>\n    );\n  }\n);\n\nexport default UsersSearchForm;\n","import React, { useEffect } from \"react\";\n\nimport s from \"./Users.module.css\";\nimport User from \"./User\";\nimport Paginator from \"../elements/Paginator\";\nimport UsersSearchForm from \"./UsersSearchForm\";\nimport {\n  FilterType,\n  follow,\n  responseUsers,\n  unfollow,\n} from \"../../redux/UsersReducer\";\nimport {\n  getCurrentPage,\n  getFollowingInProgress,\n  getUserFilter,\n  getUsers,\n  getUsersCount,\n  getUsersCountOnPage,\n} from \"../../redux/usersSelector\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\ntype PropsType = {};\n\ntype QueryParamsType = { term?: string; page?: string; friend?: string };\n\nconst Users: React.FC<PropsType> = React.memo((props) => {\n  const users = useSelector(getUsers);\n  const usersCount = useSelector(getUsersCount);\n  const usersCountOnPage = useSelector(getUsersCountOnPage);\n  const currentPage = useSelector(getCurrentPage);\n  const followingInProgress = useSelector(getFollowingInProgress);\n  const filter = useSelector(getUserFilter);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const querystring = require(\"querystring\");\n\n  useEffect(() => {\n    const parsed = querystring.parse(\n      history.location.search.substr(1)\n    ) as QueryParamsType;\n\n    let actualPage = currentPage;\n    let actualFilter = filter;\n    if (parsed.page) actualPage = +parsed.page;\n    if (parsed.term) actualFilter = { ...actualFilter, term: parsed.term };\n    if (parsed.friend)\n      actualFilter = {\n        ...actualFilter,\n        friend:\n          parsed.friend === \"null\"\n            ? null\n            : parsed.friend === \"true\"\n            ? true\n            : false,\n      };\n\n    console.log(parsed);\n    dispatch(responseUsers(usersCountOnPage, actualPage, actualFilter));\n  }, []);\n\n  useEffect(() => {\n    const query: QueryParamsType = {};\n\n    if (filter.term) query.term = filter.term;\n    if (filter.friend !== null) query.friend = String(filter.friend);\n    if (currentPage !== 1) query.page = String(currentPage);\n\n    history.push({\n      pathname: \"/users\",\n      search: querystring.stringify(query),\n    });\n  }, [filter, currentPage]);\n\n  const onPageChanged = (pageNumber: number) => {\n    dispatch(responseUsers(usersCountOnPage, pageNumber, filter));\n  };\n\n  const onFilterChanged = (filter: FilterType) => {\n    dispatch(responseUsers(usersCountOnPage, 1, filter));\n  };\n\n  const followUser = (userId: number) => {\n    dispatch(follow(userId));\n  };\n\n  const unfollowUser = (userId: number) => {\n    dispatch(unfollow(userId));\n  };\n\n  let usersItems = users.map((u) => (\n    <User\n      key={u.id}\n      user={u}\n      followingInProgress={followingInProgress}\n      unfollow={unfollowUser}\n      follow={followUser}\n    />\n  ));\n\n  return (\n    <div>\n      <UsersSearchForm onFilterChanged={onFilterChanged} />\n      <div className={s.pages}>\n        <Paginator\n          itemsCount={usersCount}\n          itemsCountOnPage={usersCountOnPage}\n          currentPage={currentPage}\n          onPageChanged={onPageChanged}\n        />\n      </div>\n      <div className={s.usersPage}>{usersItems}</div>\n    </div>\n  );\n});\n\nexport default Users;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../elements/Preloader\";\nimport { getIsFetching } from \"../../redux/usersSelector\";\n\nexport const UsersPage = () => {\n  const isFetching = useSelector(getIsFetching);\n  return (\n    <>\n      {isFetching ? <Preloader /> : null}\n      <Users />\n    </>\n  );\n};\n"],"sourceRoot":""}