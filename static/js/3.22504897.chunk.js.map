{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/elements/FormsControls.jsx","components/elements/FormsControls.module.css","utils/validators.js","components/Login/Login.module.css","components/Login/Login.jsx"],"names":["_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","length","indexOf","prototype","propertyIsEnumerable","call","Element","meta","input","props","hasErr","touched","error","className","s","inputContainer","description","errorMessage","Input","Textarea","createField","placeholder","name","validators","component","validate","module","exports","required","value","undefined","maxLength","max","LoginReduxForm","reduxForm","form","handleSubmit","captchaURL","onSubmit","inputBlock","type","style","errorSubmitForm","captcha","console","log","src","alt","sendBlock","Login","formData","logIn","email","password","rememberMe","componentDidMount","document","body","overflow","componentWillUnmount","pageClose","render","isAuth","to","loginBackground","block","container","blockName","React","Component","connect","state","getIsAuth","getCaptchaURL"],"mappings":"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","file":"static/js/3.22504897.chunk.js","sourcesContent":["import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from 'react';\nimport { Field } from 'redux-form';\nimport s from './FormsControls.module.css';\n\n\nconst Element = Element => ({ meta, input, ...props }) => {\n\tconst hasErr = meta.touched && meta.error;\n\treturn (\n\t\t<div className={s.inputContainer + ' ' + (hasErr ? s.error : '')}>\n\t\t\t<Element {...input} {...props} className={s.input} />\n\t\t\t{props.description ? <span className={s.description}>{props.description}</span> : ''}\n\t\t\t{hasErr && <div className={s.errorMessage}>{meta.error}</div>}\n\t\t</div>\n\t)\n}\n\nexport const Input = Element('input');\n\nexport const Textarea = Element('textarea');\n\nexport const createField = (placeholder, name, validators, component, description = '', props = {}) => (\n\t<div>\n\t\t<Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} description={description} />\n\t</div>\n)\n\n\nexport default Element;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"FormsControls_inputContainer__2Ovpx\",\"input\":\"FormsControls_input__1i9a4\",\"error\":\"FormsControls_error__3oS1U\",\"errorMessage\":\"FormsControls_errorMessage__1xBnB\",\"description\":\"FormsControls_description__2znvV\"};","export const required = (value) => (value ? undefined : 'Required');\n\nexport const maxLength = max => value => value.length < max ? undefined : `Must be ${max} characters or less`;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBackground\":\"Login_loginBackground__xWwDv\",\"container\":\"Login_container__1Oz4Y\",\"inputBlock\":\"Login_inputBlock__yXpQx\",\"sendBlock\":\"Login_sendBlock__26_MS\"};","import React from 'react';\nimport BigButton from '../elements/BigButton';\nimport s from './Login.module.css';\nimport style from '../../Style.module.css';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux';\nimport { logIn } from '../../redux/AuthReducer';\nimport Element from '../elements/FormsControls';\nimport { required } from '../../utils/validators';\nimport { Redirect } from 'react-router-dom';\nimport { getCaptchaURL, getIsAuth } from '../../redux/authSelector';\n\nconst Input = Element('input');\n\nconst LoginForm = ({ handleSubmit, error, captchaURL }) => {\n\treturn (\n\t\t<form onSubmit={handleSubmit} className={s.inputBlock}>\n\t\t\t<Field component={Input} validate={required} placeholder='eMail' name='email' />\n\t\t\t<Field component={Input} validate={required} placeholder='Password' name='password' type='password' />\n\t\t\t{error && <div className={style.errorSubmitForm}>{error}</div>}\n\t\t\t{captchaURL && <>\n\t\t\t\t<div className={s.captcha}>\n\t\t\t\t\t{console.log(captchaURL)}\n\t\t\t\t\t<img src={captchaURL} alt='captcha'></img>\n\t\t\t\t</div>\n\t\t\t\t<Field component={Input} validate={required} placeholder='Wrote symbols what you see' name='captcha' />\n\t\t\t</>}\n\t\t\t<div className={s.sendBlock}>\n\t\t\t\t<Field component={Input} type='checkbox' name='rememberMe' description='Remember me' />\n\t\t\t\t<BigButton value='Sign in' />\n\t\t\t</div>\n\t\t</form>\n\t)\n}\n\nconst LoginReduxForm = reduxForm({\n\tform: 'login'\n})(LoginForm)\n\nclass Login extends React.Component {\n\tonSubmit = (formData) => {\n\t\tthis.props.logIn(formData.email, formData.password, formData.rememberMe, formData.captcha);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tdocument.body.style.overflow = 'hidden';\n\t}\n\n\n\tcomponentWillUnmount = () => {\n\t\tdocument.body.style.overflow = 'unset';\n\t}\n\n\tpageClose = () => {\n\t\tconsole.log('redirect')\n\t}\n\n\trender = () => {\n\n\t\tif (this.props.isAuth) return <Redirect to={'/profile'} />\n\t\treturn (\n\t\t\t<div className={s.loginBackground}>\n\t\t\t\t<div className={style.block + ' ' + s.container}>\n\t\t\t\t\t<div className={style.blockName}>Sign in</div>\n\t\t\t\t\t<LoginReduxForm onSubmit={this.onSubmit} captchaURL={this.props.captchaURL} />\n\t\t\t\t</div>\n\t\t\t</div >\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tisAuth: getIsAuth(state),\n\tcaptchaURL: getCaptchaURL(state)\n})\n\nexport default connect(mapStateToProps, { logIn })(Login);"],"sourceRoot":""}