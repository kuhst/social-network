{"version":3,"sources":["redux/usersSelector.ts","components/FriendsPage/FriendsPage.tsx"],"names":["getUsers","state","usersPage","users","getUsersCount","usersCount","getUsersCountOnPage","usersCountOnPage","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingInProgress","followingInProgress","getUserFilter","filter","FriendsPage","React","memo","useState","pageNumber","setPageNumber","useSelector","dispatch","useDispatch","useEffect","responseUsers","friend","term","actual","actionsUsersReducer","setUsers","console","log","className","style","block","dataLength","length","next","hasMore","loader","size","dataSource","renderItem","item","Item","Meta","avatar","to","id","src","photos","large","marginLeft","title","name","description","status","marginRight","followed","type","onClick","unfollow","follow"],"mappings":"yGAEA,8OAAO,IAAMA,EAAW,SAACC,GACxB,OAAOA,EAAMC,UAAUC,OAGXC,EAAgB,SAACH,GAC7B,OAAOA,EAAMC,UAAUG,YAGXC,EAAsB,SAACL,GACnC,OAAOA,EAAMC,UAAUK,kBAGXC,EAAiB,SAACP,GAC9B,OAAOA,EAAMC,UAAUO,aAGXC,EAAgB,SAACT,GAC7B,OAAOA,EAAMC,UAAUS,YAGXC,EAAyB,SAACX,GACtC,OAAOA,EAAMC,UAAUW,qBAGXC,EAAgB,SAACb,GAC7B,OAAOA,EAAMC,UAAUa,S,oLCZlBC,EAAcC,IAAMC,MAAK,WAC3B,MAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMlB,EAAQmB,YAAYtB,KACpBK,EAAaiB,YAAYlB,KACzBmB,EAAWC,cAiCjB,OAlBAC,qBAAU,WAaN,OAZAF,EACIG,YACI,GACAN,EACA,CACIO,QAAQ,EACRC,KAAM,KAEV,IAGRP,GAAc,SAACQ,GAAD,OAAYA,EAAS,KAC5B,WACHN,EAASO,IAAoBC,SAAS,QAE3C,IACHC,QAAQC,IAAI,oBAER,qBAAKC,UAAWC,IAAMC,MAAtB,SACI,cAAC,IAAD,CACIC,WAAYlC,EAAMmC,OAClBC,KApCW,WACnBhB,EACIG,YACI,GACAN,EACA,CACIO,QAAQ,EACRC,KAAM,KAEV,IAGRP,GAAc,SAACQ,GAAD,OAAYA,EAAS,MAyB3BW,QAA0B,IAAjBrC,EAAMmC,QAAgBnC,EAAMmC,OAASjC,EAC9CoC,OACI,qBAAKP,UAAU,UAAf,SACI,cAAC,IAAD,CAAMQ,KAAK,YANvB,SAUI,cAAC,IAAD,CACIC,WAAYxC,EACZyC,WAAY,SAACC,GAAD,OACR,eAAC,IAAKC,KAAN,WACI,cAAC,IAAKA,KAAKC,KAAX,CACIC,OACI,cAAC,IAAD,CAASC,GAAI,YAAcJ,EAAKK,GAAhC,SACI,cAAC,IAAD,CACIC,IAAKN,EAAKO,OAAOC,MACjBX,KAAM,IACNP,MAAO,CAAEmB,WAAY,QAIjCC,MACI,cAAC,IAAD,CAASN,GAAI,YAAcJ,EAAKK,GAAhC,SACKL,EAAKW,OAGdC,YAAaZ,EAAKa,SAEtB,qBAAKvB,MAAO,CAAEwB,YAAa,IAA3B,SACKd,EAAKe,SACF,cAAC,IAAD,CACIC,KAAK,UACLC,QAAS,WACLvC,EAASwC,YAASlB,EAAKK,MAH/B,sBASA,cAAC,IAAD,CACIW,KAAK,UACLC,QAAS,WACLvC,EAASyC,YAAOnB,EAAKK,MAH7B,wBA7BIL,EAAKK,cA+C9BlC","file":"static/js/11.228486eb.chunk.js","sourcesContent":["import { AppStateType } from \"./ReduxStore\";\n\nexport const getUsers = (state: AppStateType) => {\n\treturn state.usersPage.users;\n}\n\nexport const getUsersCount = (state: AppStateType) => {\n\treturn state.usersPage.usersCount;\n}\n\nexport const getUsersCountOnPage = (state: AppStateType) => {\n\treturn state.usersPage.usersCountOnPage;\n}\n\nexport const getCurrentPage = (state: AppStateType) => {\n\treturn state.usersPage.currentPage;\n}\n\nexport const getIsFetching = (state: AppStateType) => {\n\treturn state.usersPage.isFetching;\n}\n\nexport const getFollowingInProgress = (state: AppStateType) => {\n\treturn state.usersPage.followingInProgress;\n}\n\nexport const getUserFilter = (state: AppStateType) => {\n\treturn state.usersPage.filter;\n}","import React, { useEffect, useState } from 'react'\nimport style from '../../Style.module.css'\nimport { List, Spin, Button } from 'antd'\nimport InfiniteScroll from 'react-infinite-scroll-component'\nimport Avatar from 'antd/lib/avatar/avatar'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { NavLink } from 'react-router-dom'\nimport {\n    actionsUsersReducer,\n    follow,\n    responseUsers,\n    unfollow,\n} from '../../redux/UsersReducer'\nimport { getUsers, getUsersCount } from '../../redux/usersSelector'\n\nconst FriendsPage = React.memo(() => {\n    const [pageNumber, setPageNumber] = useState(1)\n    const users = useSelector(getUsers)\n    const usersCount = useSelector(getUsersCount)\n    const dispatch = useDispatch()\n    const getMoreFriends = () => {\n        dispatch(\n            responseUsers(\n                10,\n                pageNumber,\n                {\n                    friend: true,\n                    term: '',\n                },\n                true\n            )\n        )\n        setPageNumber((actual) => actual + 1)\n    }\n    useEffect(() => {\n        dispatch(\n            responseUsers(\n                10,\n                pageNumber,\n                {\n                    friend: true,\n                    term: '',\n                },\n                true\n            )\n        )\n        setPageNumber((actual) => actual + 1)\n        return () => {\n            dispatch(actionsUsersReducer.setUsers([]))\n        }\n    }, [])\n    console.log('component update')\n    return (\n        <div className={style.block}>\n            <InfiniteScroll\n                dataLength={users.length}\n                next={getMoreFriends}\n                hasMore={users.length !== 0 && users.length < usersCount}\n                loader={\n                    <div className=\"example\">\n                        <Spin size=\"large\" />\n                    </div>\n                }\n            >\n                <List\n                    dataSource={users}\n                    renderItem={(item) => (\n                        <List.Item key={item.id}>\n                            <List.Item.Meta\n                                avatar={\n                                    <NavLink to={`/profile/` + item.id}>\n                                        <Avatar\n                                            src={item.photos.large}\n                                            size={100}\n                                            style={{ marginLeft: 20 }}\n                                        />\n                                    </NavLink>\n                                }\n                                title={\n                                    <NavLink to={`/profile/` + item.id}>\n                                        {item.name}\n                                    </NavLink>\n                                }\n                                description={item.status}\n                            />\n                            <div style={{ marginRight: 20 }}>\n                                {item.followed ? (\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={() => {\n                                            dispatch(unfollow(item.id))\n                                        }}\n                                    >\n                                        Unfollow\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        type=\"primary\"\n                                        onClick={() => {\n                                            dispatch(follow(item.id))\n                                        }}\n                                    >\n                                        Follow\n                                    </Button>\n                                )}\n                            </div>\n                        </List.Item>\n                    )}\n                ></List>\n            </InfiniteScroll>\n        </div>\n    )\n})\n\nexport default FriendsPage\n"],"sourceRoot":""}