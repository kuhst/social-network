{"version":3,"sources":["components/elements/FormsControls.module.css","components/elements/UserPhotoPlaceholder.tsx","components/elements/FormsControls.tsx","components/Profile/MyPosts/MyPosts.module.css","components/elements/BigButton.module.css","components/elements/BigButton.tsx","utils/objectsHelper.ts","redux/UsersReducer.ts","redux/DialogsReducer.ts","hoc/withAuthRedirect.tsx","api/chatAPI.ts","redux/ChatReducer.ts","components/Sidebar/ProfileIntro/ProfileIntro.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Sidebar/FriendsBlock/FriendsBlock.module.css","components/Navbar/Navbar.module.css","Style.module.css","components/Header/Header.module.css","api/api.ts","redux/authSelector.ts","reportWebVitals.js","redux/AppReducer.ts","redux/ReduxStore.ts","assets/images/preloaderPoint.svg","components/Header/ProfileMenu/ProfileMenu.tsx","components/Header/Search/Search.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/MenuItem.tsx","assets/images/sliders.svg","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","components/Sidebar/ProfileIntro/ProfileIntro.jsx","components/Sidebar/ProfileIntro/ProfileIntroContainer.jsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withSuspense.tsx","components/Sidebar/FriendsBlock/FriendItem/FriendItem.tsx","components/Sidebar/FriendsBlock/FriendsBlock.tsx","App.tsx","index.tsx","api/authAPI.ts","redux/AuthReducer.ts","redux/profileSelector.ts","api/usersAPI.ts","api/profileAPI.ts","components/Header/ProfileMenu/ProfileMenu.module.css","redux/ProfileReducer.ts","redux/SidebarReducer.ts","assets/images/user.jpg"],"names":["module","exports","UserPhotoPlaceholder","src","userPhoto","alt","style","height","width","marginTop","Element","meta","input","props","hasErr","touched","error","className","s","inputContainer","description","errorMessage","Input","Textarea","createField","placeholder","name","validators","component","validate","BigButton","value","click","disabled","button","cancel","onClick","objectsHelper","items","action","objPropName","newObjProps","map","u","initialState","users","usersCount","usersCountOnPage","currentPage","isFetching","followingInProgress","filter","term","friend","actionsUsersReducer","followSuccess","userId","type","unfollowSuccess","setUsers","setUsersSum","setFilter","setPageToCurrent","pageNumber","setUsersCount","setUsersCountOnPage","setFetching","toggleIsFollowing","isFollowing","responseUsers","sum","dispatch","a","usersAPI","getUsers","response","totalCount","_followUnfollow","userID","apiMethod","actionCreator","resultCode","getFriends","unfollow","bind","follow","usersReducer","state","followed","id","dialogsData","avatar","messages","message","from","actionsDialogReducer","addMessage","dialogsReducer","length","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","restProps","to","subscribers","window","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChanel","openHandler","errorHandler","console","messageHandler","e","newMessages","JSON","parse","data","forEach","cleanUp","removeEventListener","status","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","actionsChatReducer","payload","_newMessageHandler","newMessageHandlerCreator","_StatusChangedHandler","StatusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","chatReducer","ResultCodeEnum","ResultCodeForCaptcha","instanceAxios","axios","create","withCredentials","headers","baseURL","getIsAuth","getCaptchaURL","captchaURL","getMiId","getMiStatus","getMiProfile","profile","getMiFoolName","fullName","getMiPhotoSmall","photos","small","getLoadingStatus","isLoading","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialized","actionsAppReducer","appReducer","rootReducers","combineReducers","dialogsPage","profilePage","profileReducer","sidebar","sidebarReducer","usersPage","authReducer","app","chat","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileMenu","React","memo","useState","setStatus","useEffect","menu","block","menuContainer","menuName","menuList","menuLink","logOut","signOut","statusChange","onChange","currentTarget","autoFocus","undefined","Search","searchText","setSearchText","searchFocus","setSearchFocus","searchData","setSearchData","trim","res","position","onBlur","search","target","background","dataSource","renderItem","item","Item","Meta","large","size","marginLeft","icon","title","Header","preloader","statusBlock","login","user","photo","controlBlock","miName","loading","header","container","logo","mainName","secondName","freeSpace","HeaderContainer","render","MenuItem","link","activeClassName","activeLink","toUpperCase","slice","Navbar","onPhotoChange","event","files","setUserPhoto","photoUrl","this","forInitialized","comingSoon","index","nav","wallpaper","menuLeft","userName","splice","Math","ceil","userBlock","menuRight","isMiProfile","photoUpload","iconSliders","menuPhoto","label","uploadFileText","uploadFileInput","NavbarContainer","miId","componentDidUpdate","miStatus","getUser","getUserName","getUserSmallPhoto","getUserStatus","getUserId","withRouter","ProfileIntro","blockName","userProfile","aboutMe","lookingForAJobDescription","Object","entries","contacts","key","toLowerCase","startsWith","href","ProfileIntroContainer","getUserProfile","Post","counts","NewPostReduxForm","reduxForm","onSubmit","handleSubmit","newPosteBlock","MyPosts","postsElement","posts","p","likesCount","reverse","formData","addPost","postText","MyPostsContainer","getPosts","actionsProfileReducer","Profile","content","ProfileContainer","refreshProfile","match","params","componentDidMount","prevProps","withSuspense","fallback","FriendItem","url","FriendBlock","friends","useSelector","friendsCount","useDispatch","friendsArr","f","shape","LoginPage","lazy","default","ProfileInfoContainer","Settings","FriendsPage","DialogsContainer","UsersPage","ChatPage","SuspendedDialogs","SuspendedUsers","SuspendedChat","SuspendedLogin","SuspendedProfileInfo","App","initializeApp","path","exact","promise","getAuth","Promise","all","ReactDOM","StrictMode","Store","document","getElementById","authAPI","get","email","password","rememberMe","captcha","post","delete","lookingForAJob","facebook","website","vk","twitter","instagram","youtube","github","mainLink","actionsAuthReducer","setAuthUserData","setMiStatus","setMiProfile","setLoading","setUserPhotoSuccess","setCaptchaURL","miData","profileAPI","userData","getStatus","userStatus","logIn","captchaCode","stopSubmit","_error","file","setPhoto","getMiProfileFetching","put","setProfileData","profileData","filePhoto","FormData","append","deletePost","postId","setUserStatus","setUserProfile","fetching","getState","contactsError","Map","otherError","element","indexOf","includes","set","fromEntries","actionsSidebarReducer"],"mappings":"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","file":"static/js/main.844d32a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"FormsControls_inputContainer__2Ovpx\",\"input\":\"FormsControls_input__1i9a4\",\"error\":\"FormsControls_error__3oS1U\",\"errorMessage\":\"FormsControls_errorMessage__1xBnB\",\"description\":\"FormsControls_description__2znvV\"};","import React from 'react'\nimport userPhoto from '../../assets/images/user.jpg'\n\nexport const UserPhotoPlaceholder = () => {\n    return (\n        <div>\n            <img\n                src={userPhoto}\n                alt=\"userPhoto placeholder\"\n                style={{ height: '100%', width: '100%', marginTop: -10 }}\n            />\n        </div>\n    )\n}\n","import React from 'react';\nimport { Field, WrappedFieldMetaProps } from 'redux-form';\nimport { FieldValidatorsType } from '../../utils/validators';\nimport s from './FormsControls.module.css';\n\ntype FormControlPropsType = {\n\tmeta: WrappedFieldMetaProps\n\tdescription?: string\n\tinput: any\n\tchildren?: React.ReactNode\n\n}\n\nconst Element = (Element: string): React.FC<FormControlPropsType> => ({ meta, input, ...props }) => {\n\tconst hasErr = meta.touched && meta.error;\n\treturn (\n\t\t<div className={s.inputContainer + ' ' + (hasErr ? s.error : '')}>\n\t\t\t<Element {...input} {...props} className={s.input} />\n\t\t\t{props.description ? <span className={s.description}>{props.description}</span> : ''}\n\t\t\t{hasErr && <div className={s.errorMessage}>{meta.error}</div>}\n\t\t</div>\n\t)\n}\n\nexport const Input = Element('input');\n\nexport const Textarea = Element('textarea');\n\n\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n\tname: FormKeysType,\n\tvalidators: Array<FieldValidatorsType>,\n\tcomponent: React.FC<FormControlPropsType>,\n\tdescription = '', props = {}) {\n\treturn (\n\t\t<div>\n\t\t\t<Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} description={description} />\n\t\t</div>\n\t)\n}\n\nexport default Element;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosteBlock\":\"MyPosts_newPosteBlock__1S_bJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"BigButton_button__17-al\",\"cancel\":\"BigButton_cancel__1eqgI\"};","import React from 'react';\nimport s from './BigButton.module.css';\n\ntype PropsType = {\n\tvalue: string\n\tdisabled?: boolean\n\n\tclick?: () => void\n}\n\nconst BigButton: React.FC<PropsType> = ({ value, click, disabled }) => {\n\treturn (\n\t\t<div >\n\t\t\t<button className={s.button + ' ' + (value === 'Cancel' ? s.cancel : '')} onClick={click} disabled={disabled}>{value}</button>\n\t\t</div >\n\t)\n}\n\nexport default BigButton;\n\n","export const objectsHelper = (items: any, action: any, objPropName: any, newObjProps: any) => {\n\treturn items.map((u: any) => (u[objPropName] === action) ? { ...u, ...newObjProps } : u)\n}","import { BaseThunkType, InferActionsTypes } from './ReduxStore'\nimport { Dispatch } from 'redux'\nimport { usersAPI } from '../api/usersAPI'\nimport { UserType } from '../type/type'\nimport { objectsHelper } from '../utils/objectsHelper'\nimport { APIResponseType } from '../api/api'\nimport { getFriends } from './SidebarReducer'\n\nlet initialState = {\n    users: [] as Array<UserType>,\n    usersCount: 0,\n    usersCountOnPage: 12,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [] as Array<number>,\n    filter: {\n        term: '',\n        friend: null as null | boolean,\n    },\n}\n\nconst usersReducer = (\n    state = initialState,\n    action: ActionsType\n): InitialStateType => {\n    switch (action.type) {\n        case 'usersAction_FOLLOW':\n            return {\n                ...state,\n                users: objectsHelper(state.users, action.userId, 'id', {\n                    followed: true,\n                }),\n            }\n        case 'usersAction_UNFOLLOW':\n            return {\n                ...state,\n                users: objectsHelper(state.users, action.userId, 'id', {\n                    followed: false,\n                }),\n            }\n        case 'usersAction_SET_USERS':\n            return {\n                ...state,\n                users: action.users,\n            }\n        case 'usersAction_SET_USERS_SUM':\n            return {\n                ...state,\n                users: [...state.users, ...action.users],\n            }\n        case 'usersAction_SET_PAGE_NUMBER':\n            return {\n                ...state,\n                currentPage: action.pageNumber,\n            }\n        case 'usersAction_SET_USERS_COUNT':\n            return {\n                ...state,\n                usersCount: action.usersCount,\n            }\n        case 'usersAction_SET_USERS_COUNT_ON_PAGE':\n            return {\n                ...state,\n                usersCountOnPage: action.usersCountOnPage,\n            }\n        case 'usersAction_SET_FILTER':\n            return {\n                ...state,\n                filter: action.filter,\n            }\n        case 'usersAction_SET_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            }\n        case 'usersAction_TOGGLE_IS_FOLLOWING':\n            return {\n                ...state,\n                followingInProgress: action.isFollowing\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(\n                          (id) => id !== action.userId\n                      ),\n            }\n        default:\n            return state\n    }\n}\n\nexport const actionsUsersReducer = {\n    followSuccess: (userId: number) =>\n        ({ type: 'usersAction_FOLLOW', userId } as const),\n    unfollowSuccess: (userId: number) =>\n        ({ type: 'usersAction_UNFOLLOW', userId } as const),\n    setUsers: (users: Array<UserType>) =>\n        ({ type: 'usersAction_SET_USERS', users } as const),\n    setUsersSum: (users: Array<UserType>) =>\n        ({ type: 'usersAction_SET_USERS_SUM', users } as const),\n    setFilter: (filter: FilterType) =>\n        ({ type: 'usersAction_SET_FILTER', filter } as const),\n    setPageToCurrent: (pageNumber: number) =>\n        ({ type: 'usersAction_SET_PAGE_NUMBER', pageNumber } as const),\n    setUsersCount: (usersCount: number) =>\n        ({ type: 'usersAction_SET_USERS_COUNT', usersCount } as const),\n    setUsersCountOnPage: (usersCountOnPage: number) =>\n        ({\n            type: 'usersAction_SET_USERS_COUNT_ON_PAGE',\n            usersCountOnPage,\n        } as const),\n    setFetching: (isFetching: boolean) =>\n        ({ type: 'usersAction_SET_FETCHING', isFetching } as const),\n    toggleIsFollowing: (isFollowing: boolean, userId: number) =>\n        ({\n            type: 'usersAction_TOGGLE_IS_FOLLOWING',\n            isFollowing,\n            userId,\n        } as const),\n}\n\nexport const responseUsers = (\n    usersCountOnPage: number,\n    currentPage: number,\n    filter: FilterType,\n    sum: boolean\n): ThunkType => {\n    return async (dispatch) => {\n        dispatch(actionsUsersReducer.setFetching(true))\n        !sum && dispatch(actionsUsersReducer.setPageToCurrent(currentPage))\n        !sum &&\n            dispatch(actionsUsersReducer.setUsersCountOnPage(usersCountOnPage))\n        !sum && dispatch(actionsUsersReducer.setFilter(filter))\n\n        const response = await usersAPI.getUsers(\n            usersCountOnPage,\n            currentPage,\n            filter\n        )\n\n        sum\n            ? dispatch(actionsUsersReducer.setUsersSum(response.items))\n            : dispatch(actionsUsersReducer.setUsers(response.items))\n        dispatch(actionsUsersReducer.setUsersCount(response.totalCount))\n        dispatch(actionsUsersReducer.setFetching(false))\n    }\n}\n\nconst _followUnfollow = async (\n    userID: number,\n    dispatch: DispatchType,\n    apiMethod: (userId: number) => Promise<APIResponseType>,\n    actionCreator: (userId: number) => ActionsType\n) => {\n    dispatch(actionsUsersReducer.toggleIsFollowing(true, userID))\n\n    const response = await apiMethod(userID)\n\n    if (response.resultCode === 0) {\n        dispatch(actionCreator(userID))\n        // @ts-ignore\n        dispatch(getFriends())\n    }\n    dispatch(actionsUsersReducer.toggleIsFollowing(false, userID))\n}\n\nexport const unfollow = (userID: number): ThunkType => {\n    return async (dispatch) => {\n        await _followUnfollow(\n            userID,\n            dispatch,\n            usersAPI.unfollow.bind(usersAPI),\n            actionsUsersReducer.unfollowSuccess\n        )\n    }\n}\n\nexport const follow = (userID: number): ThunkType => {\n    return async (dispatch) => {\n        await _followUnfollow(\n            userID,\n            dispatch,\n            usersAPI.follow.bind(usersAPI),\n            actionsUsersReducer.followSuccess\n        )\n    }\n}\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\nexport type FilterType = typeof initialState.filter\ntype ActionsType = InferActionsTypes<typeof actionsUsersReducer>\ntype DispatchType = Dispatch<ActionsType>\ntype ThunkType = BaseThunkType<ActionsType>\n","import { ThunkAction } from \"redux-thunk\";\nimport { AppStateType, InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tdialogsData: [\n\t\t{ id: 1, name: 'Perec', avatar: 'https://i0.wp.com/7youtube.ru/wp-content/uploads/2017/01/dmdmdmddsaaaa.jpg' },\n\t\t{ id: 2, name: 'Vasia', avatar: 'http://cs622426.vk.me/v622426834/409d/baLqspYwi84.jpg' },\n\t\t{ id: 3, name: 'Vova', avatar: 'https://ispolnu.ru/uploads/services/20180618/1529316303dbca.jpg' },\n\t\t{ id: 4, name: 'Anton', avatar: 'https://discordgid.ru/wp-content/uploads/2020/03/diskord-avatar.jpg' },\n\t] as Array<DialogType>,\n\tmessages: [\n\t\t{ id: 1, message: 'hi!', from: 'friend' },\n\t\t{ id: 2, message: 'How is your programing?', from: 'friend' },\n\t\t{ id: 3, message: 'Ok', from: 'mi' },\n\t\t{ id: 4, message: 'Cool!', from: 'friend' },\n\t\t{ id: 5, message: 'Some log message. skfjnvksv sdoiv csodifvjc skdjvn sdfcjvsfldkv dsfkv dfkjnvd kfjvnd', from: 'mi' },\n\t] as Array<MessageType>,\n}\n\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'dialogAction_ADD_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, {\n\t\t\t\t\tid: ++state.messages.length,\n\t\t\t\t\tmessage: action.message,\n\t\t\t\t\tfrom: 'mi',\n\t\t\t\t}],\n\t\t\t}\n\t\tdefault: return state;\n\t};\n};\n\n\n\nexport const actionsDialogReducer = {\n\taddMessageAC: (message: string) => ({ type: 'dialogAction_ADD_MESSAGE', message })\n}\n\n\nexport const addMessage = (message: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsDialogReducer.addMessageAC(message));\n\t}\n}\n\nexport default dialogsReducer;\n\n\ntype DialogType = {\n\tid: number\n\tname: string\n\tavatar: string\n}\ntype MessageType = {\n\tid: number\n\tmessage: string\n\tfrom: 'mi' | 'friend'\n}\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsDialogReducer>\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { AppStateType } from \"../redux/ReduxStore\";\n\ntype MapStatePropsType = {\n\tisAuth: boolean\n}\ntype MapDispatchPropsType = {\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: state.auth.isAuth,\n})\n\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\n\n\tconst RedirectComponent: React.FC<MapStatePropsType & MapStatePropsType> = (props) => {\n\t\tlet { isAuth, ...restProps } = props\n\t\tif (!isAuth) return <Redirect to='/login' />;\n\t\treturn <Component {...restProps as WCP} />\n\n\t}\n\n\t// const connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n\treturn connect<MapStatePropsType, MapDispatchPropsType, WCP, AppStateType>(mapStateToProps, {})(RedirectComponent);\n}","let subscribers = {\n    'messages-received': [] as MessagesReceivedSubscriberType[],\n    'status-changed': [] as StatusChangedSubscriberType[],\n}\n\n// @ts-ignore\nwindow.subscribers = subscribers\n\nlet ws: WebSocket | null = null\n\nconst closeHandler = () => {\n    notifySubscribersAboutStatus('pending')\n    setTimeout(createChanel, 3000)\n}\n\nconst openHandler = () => {\n    notifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n    notifySubscribersAboutStatus('error')\n    console.error('Refresh page')\n}\n\nconst messageHandler = (e: MessageEvent) => {\n    const newMessages = JSON.parse(e.data)\n    subscribers['messages-received'].forEach((s) => s(newMessages))\n}\n\nconst cleanUp = () => {\n    ws?.removeEventListener('close', closeHandler)\n    ws?.removeEventListener('message', messageHandler)\n    ws?.removeEventListener('open', openHandler)\n    ws?.removeEventListener('error', errorHandler)\n}\n\nconst notifySubscribersAboutStatus = (status: StatusType) => {\n    subscribers['status-changed'].forEach((s) => s(status))\n}\n\nconst createChanel = () => {\n    cleanUp()\n    ws?.close()\n\n    ws = new WebSocket(\n        'wss://social-network.samuraijs.com/handlers/ChatHandler.ashx'\n    )\n    notifySubscribersAboutStatus('pending')\n    ws.addEventListener('close', closeHandler)\n    ws.addEventListener('message', messageHandler)\n    ws.addEventListener('open', openHandler)\n    ws.addEventListener('error', errorHandler)\n}\n\nexport const chatAPI = {\n    start() {\n        createChanel()\n    },\n    stop() {\n        // notifySubscribersAboutStatus('pending')\n        subscribers['messages-received'] = []\n        subscribers['status-changed'] = []\n        cleanUp()\n        ws?.close()\n    },\n    subscribe(\n        eventName: EventsNameType,\n        callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n    ) {\n        // @ts-ignore\n        subscribers[eventName].push(callback)\n\n        return () => {\n            // @ts-ignore\n            subscribers[eventName] = subscribers[eventName].filter(\n                // @ts-ignore\n                (s) => s !== callback\n            )\n        }\n    },\n    unsubscribe(\n        eventName: EventsNameType,\n        callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType\n    ) {\n        // @ts-ignore\n        subscribers[eventName] = subscribers[eventName].filter(\n            // @ts-ignore\n            (s) => s !== callback\n        )\n    },\n    sendMessage(message: string) {\n        ws?.send(message)\n    },\n}\n\ntype EventsNameType = 'status-changed' | 'messages-received'\n\nexport type ChatMessageType = {\n    message: string\n    photo: string\n    userId: number\n    userName: string\n}\nexport type StatusType = 'pending' | 'ready' | 'error'\nexport type MessagesReceivedSubscriberType = (\n    messages: ChatMessageType[]\n) => void\nexport type StatusChangedSubscriberType = (status: StatusType) => void\n","import { Dispatch } from 'redux'\nimport {\n    chatAPI,\n    StatusType,\n    MessagesReceivedSubscriberType,\n    StatusChangedSubscriberType,\n} from './../api/chatAPI'\nimport { ChatMessageType } from '../api/chatAPI'\nimport { BaseThunkType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n    messages: [] as ChatMessageType[],\n    status: 'pending' as StatusType,\n}\n\nconst chatReducer = (\n    state = initialState,\n    action: ActionsType\n): InitialStateType => {\n    switch (action.type) {\n        case 'chatAction_SET_MESSAGES':\n            return {\n                ...state,\n                messages: [...state.messages, ...action.payload.messages],\n            }\n        case 'chatAction_SET_STATUS':\n            return {\n                ...state,\n                status: action.payload,\n            }\n        case 'chatAction_RESET_MESSAGES':\n            return {\n                ...state,\n                messages: [],\n            }\n        default:\n            return state\n    }\n}\n\nexport const actionsChatReducer = {\n    messagesReceived: (messages: ChatMessageType[]) =>\n        ({ type: 'chatAction_SET_MESSAGES', payload: { messages } } as const),\n    messagesReset: () => ({ type: 'chatAction_RESET_MESSAGES' } as const),\n    statusChanged: (status: StatusType) =>\n        ({ type: 'chatAction_SET_STATUS', payload: status } as const),\n}\n\nlet _newMessageHandler: MessagesReceivedSubscriberType | null = null\n\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n    if (_newMessageHandler === null) {\n        _newMessageHandler = (messages) => {\n            dispatch(actionsChatReducer.messagesReceived(messages))\n        }\n        return _newMessageHandler\n    }\n}\n\nlet _StatusChangedHandler: StatusChangedSubscriberType | null = null\n\nconst StatusChangedHandlerCreator = (dispatch: Dispatch) => {\n    if (_StatusChangedHandler === null) {\n        _StatusChangedHandler = (status) => {\n            dispatch(actionsChatReducer.statusChanged(status))\n        }\n        return _StatusChangedHandler\n    }\n}\n\nexport const startMessagesListening = (): ThunkType => {\n    return async (dispatch) => {\n        chatAPI.start()\n        chatAPI.subscribe(\n            'messages-received',\n            // @ts-ignore\n            newMessageHandlerCreator(dispatch)\n        )\n        chatAPI.subscribe(\n            'status-changed',\n            // @ts-ignore\n            StatusChangedHandlerCreator(dispatch)\n        )\n    }\n}\n\nexport const stopMessagesListening = (): ThunkType => {\n    return async (dispatch) => {\n        chatAPI.unsubscribe(\n            'messages-received',\n            // @ts-ignore\n            newMessageHandlerCreator(dispatch)\n        )\n        chatAPI.unsubscribe(\n            'status-changed',\n            // @ts-ignore\n            StatusChangedHandlerCreator(dispatch)\n        )\n        chatAPI.stop()\n        _newMessageHandler = null\n        _StatusChangedHandler = null\n        dispatch(actionsChatReducer.messagesReset())\n    }\n}\n\nexport const sendMessage = (message: string): ThunkType => {\n    return async (dispatch) => {\n        chatAPI.sendMessage(message)\n    }\n}\n\nexport default chatReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsChatReducer>\ntype ThunkType = BaseThunkType<ActionsType>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileIntro_container__1Nlan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendsBlock_container__1pzrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"wallpaper\":\"Navbar_wallpaper__1DlQr\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"menu\":\"Navbar_menu__NKpxG\",\"menuLeft\":\"Navbar_menuLeft__1-CBC\",\"menuRight\":\"Navbar_menuRight__1hhAo\",\"userBlock\":\"Navbar_userBlock__yi49o\",\"userPhoto\":\"Navbar_userPhoto__2OkdO\",\"userName\":\"Navbar_userName__3NVEZ\",\"status\":\"Navbar_status__2Q0dS\",\"photoUpload\":\"Navbar_photoUpload__1tWKu\",\"menuPhoto\":\"Navbar_menuPhoto__3B8Vs\",\"container\":\"Navbar_container__1ESpZ\",\"label\":\"Navbar_label__2vojo\",\"uploadFileText\":\"Navbar_uploadFileText__iYdut\",\"uploadFileInput\":\"Navbar_uploadFileInput__1526y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Style_container__2zXzS\",\"block\":\"Style_block__2NKmM\",\"blockName\":\"Style_blockName__1y7Ic\",\"comingSoon\":\"Style_comingSoon__1sOMO\",\"errorSubmitForm\":\"Style_errorSubmitForm__1L_4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87\",\"login\":\"Header_login__3V3Qa\",\"logo\":\"Header_logo__3_SJs\",\"mainName\":\"Header_mainName__1HPVb\",\"secondName\":\"Header_secondName__2K9lp\",\"search\":\"Header_search__ckDys\",\"freeSpace\":\"Header_freeSpace__2bhUy\",\"menuList\":\"Header_menuList__3jhVl\",\"menuLink\":\"Header_menuLink__ig-eX\",\"user\":\"Header_user__1QDl1\",\"arrow\":\"Header_arrow__1S-AG\",\"menu\":\"Header_menu__BQHSW\",\"userPhoto\":\"Header_userPhoto__3zN07\",\"controlBlock\":\"Header_controlBlock__14paH\",\"name\":\"Header_name__2-9cn\",\"status\":\"Header_status__2bL1G\"};","import axios from \"axios\";\n\nexport const instanceAxios = axios.create({\n\twithCredentials: true,\n\theaders: {\n\t\t'API-KEY': '65f23381-a001-469d-b8d8-33dccd7a4fd2'\n\t},\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0'\n})\n\nexport type APIResponseType<D = {}, RC = ResultCodeEnum> = {\n\tdata: D\n\tmessages: Array<string>\n\tresultCode: RC\n}\n\nexport enum ResultCodeEnum {\n\tSuccess = 0,\n\tError = 1\n}\n\nexport enum ResultCodeForCaptcha {\n\tCaptchaIsRequired = 10\n}","import { AppStateType } from \"./ReduxStore\";\n\nexport const getIsAuth = (state: AppStateType) => {\n\treturn state.auth.isAuth;\n}\n\nexport const getCaptchaURL = (state: AppStateType) => {\n\treturn state.auth.captchaURL;\n}\n\nexport const getMiId = (state: AppStateType) => {\n\treturn state.auth.userId;\n}\n\nexport const getMiLogin = (state: AppStateType) => {\n\treturn state.auth.login;\n}\n\nexport const getMiStatus = (state: AppStateType) => {\n\treturn state.auth.status;\n}\n\nexport const getMiProfile = (state: AppStateType) => {\n\treturn state.auth.profile;\n}\n\nexport const getMiFoolName = (state: AppStateType) => {\n\treturn state.auth.profile.fullName;\n}\n\nexport const getMiPhotoSmall = (state: AppStateType) => {\n\treturn state.auth.profile.photos.small;\n}\n\nexport const getMiPhotoLarge = (state: AppStateType) => {\n\treturn state.auth.profile.photos.large;\n}\n\nexport const getLoadingStatus = (state: AppStateType) => {\n\treturn state.auth.isLoading;\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAuth } from \"./AuthReducer\";\nimport { InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tinitialized: false\n}\n\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZED_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialized: true\n\t\t\t}\n\t\tdefault: return state;\n\t};\n};\n\nexport const actionsAppReducer = {\n\tinitializedSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const)\n}\n\nexport const initializeApp = () => (dispatch: any) => {\n\tlet promise = dispatch(getAuth());\n\tPromise.all([promise])\n\t\t.then(() => {\n\t\t\tdispatch(actionsAppReducer.initializedSuccess());\n\t\t})\n}\n\nexport default appReducer;\n\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsAppReducer>","import {\n    createStore,\n    combineReducers,\n    applyMiddleware,\n    compose,\n    Action,\n} from 'redux'\nimport authReducer from './AuthReducer'\nimport dialogsReducer from './DialogsReducer'\nimport profileReducer from './ProfileReducer'\nimport sidebarReducer from './SidebarReducer'\nimport usersReducer from './UsersReducer'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from './AppReducer'\nimport chatReducer from './ChatReducer'\n\nlet rootReducers = combineReducers({\n    dialogsPage: dialogsReducer,\n    profilePage: profileReducer,\n    sidebar: sidebarReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n    app: appReducer,\n    chat: chatReducer,\n    form: formReducer,\n})\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(\n    rootReducers,\n    composeEnhancers(applyMiddleware(thunkMiddleware))\n)\n\n// @ts-ignore\nwindow.store = store\n\nexport default store\n\ntype RootStateType = typeof rootReducers\nexport type AppStateType = ReturnType<RootStateType>\nexport type InferActionsTypes<T> = T extends {\n    [keys: string]: (...args: any[]) => infer U\n}\n    ? U\n    : never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<\n    R,\n    AppStateType,\n    unknown,\n    A\n>\n","export default __webpack_public_path__ + \"static/media/preloaderPoint.7aaa1561.svg\";","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport style from '../../../Style.module.css'\nimport s from './ProfileMenu.module.css'\nimport { NavLink } from 'react-router-dom';\n\ntype PropsType = {\n\tstatus: string | null\n\tlogOut: () => void\n\tsetStatus: (status: string) => void\n}\n\nconst ProfileMenu: React.FC<PropsType> = React.memo((props) => {\n\n\tconst [status, setStatus] = useState(props.status);\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status]);\n\n\tconst applyStatusChange = () => {\n\t\tprops.setStatus(status as string);\n\t};\n\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\n\treturn (\n\t\t<div className={s.menu}>\n\t\t\t<div className={style.block + ' ' + s.menuContainer}>\n\t\t\t\t<div className={s.menuName}>\n\t\t\t\t\tYOUR ACCOUNT\n\t\t\t\t</div>\n\t\t\t\t<ul className={s.menuList}>\n\t\t\t\t\t<NavLink to={'/profile/settings'}>\n\t\t\t\t\t\t<li className={s.menuLink}>\n\t\t\t\t\t\t\tProfile Settings\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<li onClick={props.logOut} className={s.menuLink + ' ' + s.signOut}>\n\t\t\t\t\t\t<span>Sign out</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className={s.menuName}>\n\t\t\t\t\tCHANGE STATUS\n\t\t\t\t</div>\n\t\t\t\t<div className={s.statusChange}>\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} placeholder=\"Type new post...\" value={status ? status : undefined} />\n\t\t\t\t\t<button onClick={applyStatusChange}>Sent</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nexport default ProfileMenu","import { List } from 'antd'\nimport Avatar from 'antd/lib/avatar/avatar'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { usersAPI } from '../../../api/usersAPI'\nimport { UserType } from '../../../type/type'\nimport { UserPhotoPlaceholder } from '../../elements/UserPhotoPlaceholder'\nimport s from '../Header.module.css'\n\nexport const Search: React.FC = () => {\n    const [searchText, setSearchText] = useState('')\n    const [searchFocus, setSearchFocus] = useState(false)\n    const [searchData, setSearchData] = useState<UserType[]>([])\n\n    useEffect(() => {\n        if (!!searchText) {\n            setSearchFocus(true)\n            usersAPI\n                .getUsers(5, 1, { term: searchText.trim(), friend: null })\n                .then((res) => {\n                    setSearchData(res.items)\n                })\n        } else {\n            setSearchFocus(false)\n        }\n        return () => {\n            setSearchData([])\n        }\n    }, [searchText])\n\n    return (\n        <div\n            style={{ position: 'relative' }}\n            onBlur={() => {\n                setTimeout(() => {\n                    setSearchFocus(false)\n                }, 200)\n            }}\n        >\n            <input\n                placeholder=\"Search here...\"\n                className={s.search}\n                value={searchText}\n                onChange={(e) => setSearchText(e.target.value)}\n            />\n            {searchFocus && (\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: '#fff',\n                        width: 300,\n                    }}\n                >\n                    <List\n                        dataSource={searchData}\n                        renderItem={(item) => (\n                            <NavLink to={`/profile/` + item.id}>\n                                <List.Item\n                                    key={item.id}\n                                    onClick={() => {\n                                        setSearchFocus(false)\n                                        setSearchText('')\n                                    }}\n                                >\n                                    <List.Item.Meta\n                                        avatar={\n                                            <Avatar\n                                                src={item.photos.large}\n                                                size=\"default\"\n                                                style={{ marginLeft: 20 }}\n                                                icon={<UserPhotoPlaceholder />}\n                                            />\n                                        }\n                                        title={item.name}\n                                        description={item.status}\n                                    />\n                                    {/* <div style={{ marginRight: 20 }}>test</div> */}\n                                </List.Item>\n                            </NavLink>\n                        )}\n                    ></List>\n                </div>\n            )}\n        </div>\n    )\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport style from '../../Style.module.css'\nimport s from './Header.module.css'\nimport userPhoto from '../../assets/images/user.jpg'\nimport preloaderImage from '../../assets/images/preloaderPoint.svg'\nimport ProfileMenu from './ProfileMenu/ProfileMenu'\nimport { Search } from './Search/Search'\nimport { Button, Space, Spin } from 'antd'\n\ntype PropsType = {\n    status: string | null\n    photo: string | null\n    miName: string | null\n    loading: boolean\n    isAuth: boolean\n    setStatus: (status: string) => void\n    logOut: () => void\n}\n\nconst Header: React.FC<PropsType> = (props) => {\n    let preloader = (\n        <div className={s.preloader}>\n            <img src={preloaderImage} alt=\"Preloader\" />\n        </div>\n    )\n\n    let statusBlock = <span>{props.status || 'no status'}</span>\n\n    let login = (\n        <NavLink to={'/login'}>\n            <Button>Log In</Button>\n        </NavLink>\n    )\n\n    let user = (\n        <ul className={s.menuList}>\n            <li className={s.menuLink}>\n                <div className={s.user}>\n                    <div className={s.userPhoto}>\n                        <img\n                            src={props.photo ? props.photo : userPhoto}\n                            alt=\"mainImage\"\n                        ></img>\n                    </div>\n                    <div className={s.controlBlock}>\n                        <div className={s.name}>{props.miName}</div>\n                        <div className={s.status}>\n                            {props.loading ? (\n                                <Spin size=\"small\" />\n                            ) : (\n                                statusBlock\n                            )}\n                        </div>\n                    </div>\n                    <div className={s.menu}>\n                        <ProfileMenu\n                            status={props.status}\n                            setStatus={props.setStatus}\n                            logOut={props.logOut}\n                        />\n                    </div>\n                </div>\n            </li>\n        </ul>\n    )\n\n    return (\n        <header className={s.header}>\n            <div className={`${style.container} ${s.container}`}>\n                <div className={s.logo}>\n                    <span className={s.mainName}>SAMURAIS</span>\n                    <span className={s.secondName}>social network</span>\n                </div>\n                <div className={s.freeSpace}></div>\n                <Space>\n                    <Search />\n                    {props.isAuth ? user : login}\n                </Space>\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { setStatus, logOut } from '../../redux/AuthReducer';\nimport { getIsAuth, getLoadingStatus, getMiFoolName, getMiId, getMiPhotoSmall, getMiStatus } from '../../redux/authSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchToPropsType = {\n\tsetStatus: (status: string) => void\n\tlogOut: () => void\n}\nclass HeaderContainer extends React.Component<MapStateToPropsType & MapDispatchToPropsType> {\n\trender = () => {\n\t\treturn (\n\t\t\t<Header miName={this.props.miName}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tlogOut={this.props.logOut}\n\t\t\t\tisAuth={this.props.isAuth}\n\t\t\t\tphoto={this.props.photo}\n\t\t\t\tloading={this.props.loading}\n\t\t\t\tsetStatus={this.props.setStatus} />\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: getIsAuth(state),\n\tuserId: getMiId(state),\n\tmiName: getMiFoolName(state),\n\tstatus: getMiStatus(state),\n\tphoto: getMiPhotoSmall(state),\n\tloading: getLoadingStatus(state),\n})\n\nexport default connect(mapStateToProps, { setStatus, logOut })(HeaderContainer);","import React from 'react';\nimport s from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\ntype PropsType = {\n\tlink: string\n\tclassName: string\n}\n\nexport const MenuItem: React.FC<PropsType> = (props) => {\n\treturn (\n\t\t<div className={s.item}>\n\t\t\t<NavLink to={props.link} activeClassName={s.activeLink} className={props.className}>\n\t\t\t\t{props.link[1].toUpperCase() + props.link.slice(2)}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default MenuItem;","export default __webpack_public_path__ + \"static/media/sliders.957e732c.svg\";","import React, { ChangeEvent } from 'react'\nimport s from './Navbar.module.css'\nimport style from '../../Style.module.css'\nimport userPhoto from '../../assets/images/user.jpg'\nimport MenuItem from './MenuItem'\nimport iconSliders from '../../assets/images/sliders.svg'\n\ntype PropsType = {\n    userPhoto: string | null\n    status: string | null\n    isMiProfile: boolean\n    isAuth: boolean\n    userName: string | null\n    setUserPhoto: (file: File) => void\n}\n\nclass Navbar extends React.Component<PropsType> {\n    onPhotoChange = (event: ChangeEvent<HTMLInputElement>) => {\n        if (event.target.files && event.target.files.length) {\n            this.props.setUserPhoto(event.target.files[0])\n        }\n    }\n\n    render() {\n        let photoUrl = !this.props.userPhoto ? userPhoto : this.props.userPhoto\n        let status = !this.props.status ? (\n            ''\n        ) : (\n            <div className={s.status}>{this.props.status}</div>\n        )\n        let navItems = [\n            { link: '/profile', forInitialized: true, className: '' },\n            { link: '/dialogs', forInitialized: true, className: '' },\n            { link: '/chat', forInitialized: true, className: '' },\n            {\n                link: '/friends',\n                forInitialized: true,\n                className: '',\n            },\n            { link: '/users', forInitialized: false, className: '' },\n            {\n                link: '/settings',\n                forInitialized: false,\n                className: style.comingSoon,\n            },\n        ]\n\n        let menu = navItems.map((item, index) =>\n            this.props.isAuth ? (\n                <MenuItem\n                    link={item.link}\n                    key={index}\n                    className={item.className}\n                />\n            ) : !item.forInitialized ? (\n                <MenuItem\n                    link={item.link}\n                    key={index}\n                    className={item.className}\n                />\n            ) : (\n                <></>\n            )\n        )\n\n        return (\n            <nav className={`${s.nav} ${style.block}`}>\n                <div className={s.wallpaper}>\n                    <img\n                        src=\"https://html.crumina.net/html-olympus/img/top-header1.webp\"\n                        alt=\"wallpaper\"\n                    ></img>\n                </div>\n                <div className={s.menu}>\n                    <div className={s.menuLeft}>\n                        {this.props.userName\n                            ? menu.splice(0, Math.ceil(menu.length / 2))\n                            : menu}\n                    </div>\n                    {this.props.userName && (\n                        <>\n                            <div className={s.userBlock}>\n                                <div className={s.userPhoto}>\n                                    <img src={photoUrl} alt=\"userPhoto\"></img>\n                                </div>\n                                <div className={s.userName}>\n                                    {this.props.userName}\n                                    {status}\n                                </div>\n                            </div>\n                            <div className={s.menuRight}>{menu}</div>\n                        </>\n                    )}\n                </div>\n                {this.props.isMiProfile && (\n                    <>\n                        <div className={s.photoUpload}>\n                            <img src={iconSliders} alt=\"Controls\" />\n                            <div className={s.menuPhoto}>\n                                <div\n                                    className={style.block + ' ' + s.container}\n                                >\n                                    <label className={s.label}>\n                                        <span className={s.uploadFileText}>\n                                            Upload profile photo\n                                        </span>\n                                        <input\n                                            type=\"file\"\n                                            onChange={this.onPhotoChange}\n                                            className={s.uploadFileInput}\n                                        />\n                                    </label>\n                                    <label>\n                                        <span\n                                            className={\n                                                s.uploadFileText +\n                                                ' ' +\n                                                style.comingSoon\n                                            }\n                                        >\n                                            Upload header photo\n                                        </span>\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n                    </>\n                )}\n            </nav>\n        )\n    }\n}\n\nexport default Navbar\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { getUser } from '../../redux/ProfileReducer';\nimport { setUserPhoto } from '../../redux/AuthReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getUserId, getUserName, getUserSmallPhoto, getUserStatus } from '../../redux/profileSelector';\nimport { getIsAuth, getMiId, getMiStatus } from '../../redux/authSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\n\ntype MapStateToProps = ReturnType<typeof mapStateToProps>\ntype MapDispatchToProps = {\n\tgetUser: (userId: number | null) => void\n\tsetUserPhoto: (file: File) => void\n}\n\n\nclass NavbarContainer extends React.Component<MapStateToProps & MapDispatchToProps> {\n\tisMiProfile = () => {\n\t\tif (this.props.userId === this.props.miId) return true;\n\t\treturn false;\n\t}\n\tcomponentDidUpdate = () => {\n\t\tif (this.isMiProfile()) {\n\t\t\tif (this.props.status !== this.props.miStatus) {\n\t\t\t\tthis.props.getUser(this.props.miId)\n\t\t\t}\n\t\t}\n\t}\n\trender = () => {\n\t\treturn <Navbar\n\t\t\tuserName={this.props.userName}\n\t\t\tuserPhoto={this.props.userPhoto}\n\t\t\tisAuth={this.props.isAuth}\n\t\t\tstatus={this.props.status}\n\t\t\tisMiProfile={this.isMiProfile()}\n\t\t\tsetUserPhoto={this.props.setUserPhoto} />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tuserName: getUserName(state),\n\t\tuserPhoto: getUserSmallPhoto(state),\n\t\tstatus: getUserStatus(state),\n\t\tisAuth: getIsAuth(state),\n\t\tuserId: getUserId(state),\n\t\tmiId: getMiId(state),\n\t\tmiStatus: getMiStatus(state)\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { getUser, setUserPhoto }),\n\twithRouter\n)(NavbarContainer)","import React from 'react';\nimport s from './ProfileIntro.module.css'\nimport style from '../../../Style.module.css'\n\n\nconst ProfileIntro = (props) => {\n\treturn (\n\t\t<div className={style.block}>\n\t\t\t<div className={style.blockName}>\n\t\t\t\tProfile Intro\n\t\t\t</div>\n\t\t\t<div className={s.container}>\n\t\t\t\t<h4 className=\"title\">About Me:</h4>\n\t\t\t\t<span className=\"text\">{props.userProfile.aboutMe}</span>\n\t\t\t\t<h4 className=\"title\">Looking for a job description:</h4>\n\t\t\t\t<span className=\"text\">{props.userProfile.lookingForAJobDescription}</span>\n\t\t\t\t<h4 className=\"title\">Contacts:</h4>\n\t\t\t\t<ul>\n\t\t\t\t\t{Object.entries(props.userProfile.contacts).map(([key, value]) => value\n\t\t\t\t\t\t? value.toLowerCase().startsWith(\"http\")\n\t\t\t\t\t\t\t? <li key={key}><a href={value}>{key}</a></li>\n\t\t\t\t\t\t\t: <li key={key}><a href={'https://' + value}>{key}</a></li>\n\t\t\t\t\t\t: ' ')}\n\t\t\t\t</ul>\n\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport default ProfileIntro;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from '../../../redux/profileSelector';\nimport ProfileIntro from './ProfileIntro';\n\nclass ProfileIntroContainer extends React.Component {\n\trender = () => {\n\t\treturn <ProfileIntro userProfile={this.props.userProfile} />\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tuserProfile: getUserProfile(state)\n})\n\nexport default connect(mapStateToProps, {})(ProfileIntroContainer);","import React from 'react';\nimport s from './Post.module.css'\nimport style from '../../../../Style.module.css'\n\ntype PropsType = {\n\tmessage: string\n\tcounts: number\n}\n\nconst Post: React.FC<PropsType> = ({ message, counts }) => {\n\treturn (\n\t\t<div className={`${s.item} ${style.block}`}>\n\t\t\t<img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcdS2G0_159FyiX7C5I-ed1aw2Nj_R3t1P9g&usqp=CAU' alt='mainImage'></img>\n\t\t\t{message}\n\t\t\t<div>\n\t\t\t\t<span>{counts} Likes </span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport style from '../../../Style.module.css';\nimport BigButton from '../../elements/BigButton';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { createField, Textarea } from '../../elements/FormsControls';\nimport { PosteType } from '../../../redux/ProfileReducer';\n\ntype NewPostFormOunProps = {}\ntype NewPostFormValuesType = {\n\tpostText: string\n}\ntype NewPostFormValuesTypeKeys = keyof NewPostFormValuesType\n\nconst newPostForm: React.FC<InjectedFormProps<NewPostFormValuesType, NewPostFormOunProps>> & NewPostFormOunProps = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit} className={`${style.block} ${s.newPosteBlock}`}>\n\t\t\t<h3>Add post</h3>\n\t\t\t{createField<NewPostFormValuesTypeKeys>('Type new post...', 'postText', [], Textarea)}\n\t\t\t<BigButton value='Sent' />\n\t\t</form>\n\t)\n}\n\nconst NewPostReduxForm = reduxForm<NewPostFormValuesType, NewPostFormOunProps>({\n\tform: 'postMessage'\n})(newPostForm)\n\ntype MyPostsPropsType = {\n\tposts: Array<PosteType>\n\taddPost: (postText: string) => void\n}\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\n\tlet postsElement = props.posts.map(p => <Post message={p.message} counts={p.likesCount} key={p.id} />).reverse();\n\tlet onSubmit = (formData: NewPostFormValuesType) => {\n\t\tprops.addPost(formData.postText)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<NewPostReduxForm onSubmit={onSubmit} />\n\t\t\t<div className={s.posts}>\n\t\t\t\t{postsElement}\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport default MyPosts;\n\n","import { actionsProfileReducer } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../../redux/profileSelector';\nimport { AppStateType } from '../../../redux/ReduxStore';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tposts: getPosts(state)\n\t}\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addPost: actionsProfileReducer.addPost })(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css'\n\n\nconst Profile = () => {\n\treturn (\n\t\t<div className={s.content}>\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t)\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { getMiId } from '../../redux/authSelector';\nimport { getUser } from '../../redux/ProfileReducer';\nimport { getUserProfile } from '../../redux/profileSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\nimport Profile from './Profile';\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchToProps = {\n\tgetUser: (userId: number) => void\n}\ntype PathParamsType = {\n\tuserId: string\n}\ntype PropsType = RouteComponentProps<PathParamsType> & MapStateToPropsType & MapDispatchToProps\n\nclass ProfileContainer extends React.Component<PropsType> {\n\trefreshProfile = () => {\n\t\tlet userId: number | null = +this.props.match.params.userId || this.props.miId;\n\t\tthis.props.getUser(userId as number);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.refreshProfile()\n\t}\n\n\tcomponentDidUpdate = (prevProps: PropsType) => {\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId)\n\t\t\tthis.refreshProfile()\n\t}\n\n\trender = () => {\n\t\treturn <Profile />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tuserProfile: getUserProfile(state),\n\t\tmiId: getMiId(state)\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { getUser }),\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer)\n","import React from \"react\";\nimport { Suspense } from \"react\";\n\n\nfunction withSuspense<WSP>(Component: React.ComponentType<WSP>) {\n\treturn (props: WSP) => {\n\t\treturn (\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<Component {...props} />\n\t\t\t</Suspense>\n\t\t)\n\t}\n}\n\nexport default withSuspense;","import Avatar from 'antd/lib/avatar/avatar'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { UserPhotoPlaceholder } from '../../../elements/UserPhotoPlaceholder'\n\ntype PropsType = {\n    url: string | null\n    name: string | null\n    userId: number | null\n}\n\nconst FriendItem: React.FC<PropsType> = (props) => {\n    return (\n        <NavLink to={`/profile/` + props.userId}>\n            <Avatar\n                size=\"large\"\n                src={props.url}\n                icon={<UserPhotoPlaceholder />}\n            />\n        </NavLink>\n    )\n}\n\nexport default FriendItem\n","import React, { useEffect } from 'react'\nimport s from './FriendsBlock.module.css'\nimport style from '../../../Style.module.css'\nimport FriendItem from './FriendItem/FriendItem'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../redux/ReduxStore'\nimport { Button, Space } from 'antd'\nimport { getFriends } from '../../../redux/SidebarReducer'\nimport { NavLink } from 'react-router-dom'\n\nconst FriendBlock = () => {\n    let friends = useSelector((state: AppStateType) => state.sidebar.friends)\n    let friendsCount = useSelector(\n        (state: AppStateType) => state.sidebar.friendsCount\n    )\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(getFriends())\n    }, [])\n    const friendsArr = friends.map((f) => (\n        <FriendItem\n            url={f.photos.large}\n            name={f.name}\n            userId={f.id}\n            key={f.id}\n        />\n    ))\n    return (\n        <div className={style.block}>\n            <div className={style.blockName}>\n                <span>Friends ({friendsCount})</span>\n            </div>\n            <Space className={s.container} size=\"small\">\n                {friendsArr}\n                <NavLink to={'/friends'}>\n                    <Button type=\"primary\" shape=\"circle\" size=\"large\">\n                        +{friendsCount - friends.length}\n                    </Button>\n                </NavLink>\n            </Space>\n        </div>\n    )\n}\n\nexport default FriendBlock\n","import React from 'react'\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport './App.css'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport NavbarContainer from './components/Navbar/NavbarContainer'\nimport ProfileIntroContainer from './components/Sidebar/ProfileIntro/ProfileIntroContainer'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport { connect } from 'react-redux'\nimport { initializeApp } from './redux/AppReducer'\nimport { compose } from 'redux'\nimport withSuspense from './hoc/withSuspense'\nimport { AppStateType } from './redux/ReduxStore'\nimport { Spin } from 'antd'\nimport FriendBlock from './components/Sidebar/FriendsBlock/FriendsBlock'\n\nconst LoginPage = React.lazy(() =>\n    import('./components/Login/LoginPage').then(({ LoginPage }) => ({\n        default: LoginPage,\n    }))\n)\nconst ProfileInfoContainer = React.lazy(\n    () => import('./components/ProfileInfo/ProfileInfoContainer')\n)\nconst Settings = React.lazy(() => import('./components/Settings/Settings'))\nconst FriendsPage = React.lazy(\n    () => import('./components/FriendsPage/FriendsPage')\n)\nconst DialogsContainer = React.lazy(\n    () => import('./components/Dialogs/DialogsContainer')\n)\nconst UsersPage = React.lazy(() => import('./components/Users/UsersPage'))\nconst ChatPage = React.lazy(() => import('./components/Chat/ChatPage'))\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchPropsType = {\n    initializeApp: () => void\n}\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedUsers = withSuspense(UsersPage)\nconst SuspendedChat = withSuspense(ChatPage)\nconst SuspendedLogin = withSuspense(LoginPage)\nconst SuspendedProfileInfo = withSuspense(ProfileInfoContainer)\n\nclass App extends React.Component<MapStatePropsType & MapDispatchPropsType> {\n    componentDidMount = () => {\n        this.props.initializeApp()\n    }\n    render() {\n        if (!this.props.initialized) {\n            return (\n                <div className=\"example\">\n                    <Spin size=\"large\" />\n                </div>\n            )\n        }\n\n        return (\n            <div>\n                <Route path=\"/login\" render={() => <SuspendedLogin />} />\n                <div>\n                    <HeaderContainer />\n                    <div className=\"app-wrapper\">\n                        <NavbarContainer />\n                        <div className=\"app-wrapper-content\">\n                            <Switch>\n                                <Route\n                                    exact\n                                    path=\"/\"\n                                    render={() => <Redirect to=\"/profile\" />}\n                                />\n                                <Route\n                                    path=\"/dialogs\"\n                                    render={() => <SuspendedDialogs />}\n                                />\n                                <Route\n                                    path=\"/profile/settings\"\n                                    render={() => <SuspendedProfileInfo />}\n                                />\n                                <Route\n                                    path=\"/profile/:userId?\"\n                                    render={() => <ProfileContainer />}\n                                />\n                                <Route\n                                    path=\"/chat\"\n                                    render={() => <SuspendedChat />}\n                                />\n                                <Route\n                                    path=\"/friends\"\n                                    render={withSuspense(FriendsPage)}\n                                />\n                                <Route\n                                    path=\"/users\"\n                                    render={() => <SuspendedUsers />}\n                                />\n                                <Route\n                                    path=\"/settings\"\n                                    render={withSuspense(Settings)}\n                                />\n                            </Switch>\n                        </div>\n                        <div className=\"app-wrapper-right\">\n                            <ProfileIntroContainer />\n                            <FriendBlock />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n    initialized: state.app.initialized,\n})\n\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps, { initializeApp })\n)(App)\n","import reportWebVitals from \"./reportWebVitals\";\nimport Store from \"./redux/ReduxStore\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      {/* <BrowserRouter> */}\n      <Provider store={Store}>\n        <App />\n      </Provider>\n      {/* </BrowserRouter> */}\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { instanceAxios, APIResponseType, ResultCodeEnum, ResultCodeForCaptcha } from './api';\n\ntype MiResponseType = {\n\tid: number\n\temail: string\n\tlogin: string\n}\ntype LoginResponseType = {\n\tuserId: number\n}\ntype CaptchaResponseType = {\n\turl: string\n}\n\nexport const authAPI = {\n\tgetAuth() {\n\t\treturn instanceAxios.get<APIResponseType<MiResponseType>>('/auth/me')\n\t\t\t.then(response => response.data)\n\t},\n\tlogIn(email: string, password: string, rememberMe = false, captcha: string | null = null) {\n\t\treturn instanceAxios.post<APIResponseType<LoginResponseType, ResultCodeEnum | ResultCodeForCaptcha>>\n\t\t\t('/auth/login', { email, password, rememberMe, captcha })\n\t\t\t.then(response => response.data)\n\t},\n\tlogOut() {\n\t\treturn instanceAxios.delete<APIResponseType>('/auth/login')\n\t\t\t.then(response => response.data)\n\t},\n\tgetCaptcha() {\n\t\treturn instanceAxios.get<CaptchaResponseType>('/security/get-captcha-url')\n\t\t\t.then(response => response.data)\n\t}\n};","import { stopSubmit } from 'redux-form'\nimport { authAPI } from '../api/authAPI'\nimport { profileAPI } from '../api/profileAPI'\nimport { PhotosType, ProfileType } from '../type/type'\nimport { BaseThunkType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n    userId: null as number | null,\n    login: null as string | null,\n    email: null as string | null,\n    captchaURL: null as string | null,\n    isAuth: false,\n    isLoading: false,\n    status: null as string | null,\n    profile: {\n        aboutMe: null,\n        lookingForAJob: null,\n        lookingForAJobDescription: null,\n        fullName: null,\n        userId: null,\n        photos: {\n            small: null,\n            large: null,\n        },\n        contacts: {\n            facebook: null,\n            website: null,\n            vk: null,\n            twitter: null,\n            instagram: null,\n            youtube: null,\n            github: null,\n            mainLink: null,\n        },\n    } as ProfileType,\n}\n\nconst authReducer = (\n    state = initialState,\n    action: ActionsType\n): InitialStateType => {\n    switch (action.type) {\n        case 'auth_USER_AUTH':\n            return {\n                ...state,\n                ...action.data,\n            }\n        case 'auth_SET_CAPTCHA_URL':\n            return {\n                ...state,\n                captchaURL: action.captchaURL,\n            }\n        case 'auth_USER_PROFILE':\n            return {\n                ...state,\n                profile: action.profile,\n            }\n        case 'auth_SET_STATUS':\n            return {\n                ...state,\n                status: action.status,\n            }\n        case 'auth_SET_LOADING':\n            return {\n                ...state,\n                isLoading: action.isLoading,\n            }\n        case 'auth_SET_USER_PHOTO_SUCCESS':\n            return {\n                ...state,\n                profile: { ...state.profile, photos: action.photos },\n            }\n        default:\n            return state\n    }\n}\n\nexport const actionsAuthReducer = {\n    setAuthUserData: (\n        userId: number | null,\n        login: string | null,\n        email: string | null,\n        isAuth: boolean\n    ) =>\n        ({\n            type: 'auth_USER_AUTH',\n            data: { userId, login, email, isAuth },\n        } as const),\n    setMiStatus: (status: string) =>\n        ({ type: 'auth_SET_STATUS', status } as const),\n    setMiProfile: (profile: ProfileType) =>\n        ({ type: 'auth_USER_PROFILE', profile } as const),\n    setLoading: (isLoading: boolean) =>\n        ({ type: 'auth_SET_LOADING', isLoading } as const),\n    setUserPhotoSuccess: (photos: PhotosType) =>\n        ({ type: 'auth_SET_USER_PHOTO_SUCCESS', photos } as const),\n    setCaptchaURL: (captchaURL: string | null) =>\n        ({ type: 'auth_SET_CAPTCHA_URL', captchaURL } as const),\n}\n\nexport const getAuth = (): ThunkType => {\n    return async (dispatch) => {\n        dispatch(actionsAuthReducer.setCaptchaURL(null))\n        const miData = await authAPI.getAuth()\n\n        if (miData.resultCode === 0) {\n            let { id, login, email } = miData.data\n            dispatch(actionsAuthReducer.setAuthUserData(id, login, email, true))\n\n            const userData = await profileAPI.getUserProfile(id)\n\n            dispatch(actionsAuthReducer.setMiProfile(userData))\n\n            const userStatus = await profileAPI.getStatus(id)\n\n            dispatch(actionsAuthReducer.setMiStatus(userStatus))\n        }\n    }\n}\n\nexport const setStatus = (status: string): ThunkType => {\n    return async (dispatch) => {\n        dispatch(actionsAuthReducer.setLoading(true))\n\n        const response = await profileAPI.setStatus(status)\n\n        dispatch(actionsAuthReducer.setLoading(false))\n        if (response.resultCode !== 0) return\n        dispatch(actionsAuthReducer.setMiStatus(status))\n    }\n}\n\nexport const logIn = (\n    email: string,\n    password: string,\n    rememberMe: boolean,\n    captchaCode: string\n): ThunkType => {\n    return async (dispatch) => {\n        const response = await authAPI.logIn(\n            email,\n            password,\n            rememberMe,\n            captchaCode\n        )\n\n        if (response.resultCode === 0) {\n            dispatch(getAuth())\n        } else {\n            if (response.resultCode === 10) {\n                const captcha = await authAPI.getCaptcha()\n                dispatch(actionsAuthReducer.setCaptchaURL(captcha.url))\n            }\n            // @ts-ignore\n            dispatch(stopSubmit('login', { _error: response.messages }))\n        }\n    }\n}\n\nexport const logOut = (): ThunkType => {\n    return async (dispatch) => {\n        const response = await authAPI.logOut()\n\n        if (response.resultCode !== 0) return\n        dispatch(actionsAuthReducer.setAuthUserData(null, null, null, false))\n    }\n}\n\nexport const setUserPhoto = (file: File): ThunkType => {\n    return async (dispatch) => {\n        const response = await profileAPI.setPhoto(file)\n\n        if (response.resultCode === 0) {\n            dispatch(\n                actionsAuthReducer.setUserPhotoSuccess(response.data.photos)\n            )\n        }\n    }\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsAuthReducer>\ntype ThunkType = BaseThunkType<ActionsType>\n","import { AppStateType } from './ReduxStore'\n\nexport const getUserProfile = (state: AppStateType) => {\n    return state.profilePage.userProfile\n}\n\nexport const getPosts = (state: AppStateType) => {\n    return state.profilePage.posts\n}\n\nexport const getUserName = (state: AppStateType) => {\n    return state.profilePage.userProfile.fullName\n}\n\nexport const getUserId = (state: AppStateType) => {\n    return state.profilePage.userProfile.userId\n}\n\nexport const getUserStatus = (state: AppStateType) => {\n    return state.profilePage.userStatus\n}\n\nexport const getUserSmallPhoto = (state: AppStateType) => {\n    return state.profilePage.userProfile.photos.small\n}\n\nexport const getUserLargePhoto = (state: AppStateType) => {\n    return state.profilePage.userProfile.photos.large\n}\n\nexport const getUserAboutMe = (state: AppStateType) => {\n    return state.profilePage.userProfile.aboutMe\n}\n\nexport const getMiProfileFetching = (state: AppStateType) => {\n    return state.profilePage.isFetching\n}\n","import { FilterType } from './../redux/UsersReducer';\nimport { PhotosType } from \"../type/type\";\nimport { instanceAxios, APIResponseType } from \"./api\";\n\ntype UserType = {\n\tname: string\n\tid: number\n\tphotos: PhotosType\n\tstatus: string | null\n\tfollowed: boolean\n}\ntype UsersResponseType = {\n\titems: Array<UserType>\n\ttotalCount: number\n\terror: string | null\n}\n\nexport const usersAPI = {\n\tgetUsers(usersCountOnPage = 9, currentPage = 1, filter: FilterType = {term: '', friend: null}) {\n\t\treturn instanceAxios.get<UsersResponseType>(`/users?count=${usersCountOnPage}&page=${currentPage}&term=${filter.term}&friend=${filter.friend === null ? '' : filter.friend}`)\n\t\t\t.then(response => response.data)\n\t},\n\tfollow(id: number) {\n\t\treturn instanceAxios.post<APIResponseType>(`/follow/${id}`)\n\t\t\t.then(response => response.data)\n\t},\n\tunfollow(id: number) {\n\t\treturn instanceAxios.delete<APIResponseType>(`/follow/${id}`)\n\t\t\t.then(response => response.data)\n\t}\n};","import { PhotosType, ProfileType } from \"../type/type\";\nimport { instanceAxios, APIResponseType } from \"./api\";\n\ntype SetPhotoResponseData = {\n\tphotos: PhotosType\n}\n\nexport const profileAPI = {\n\tgetUserProfile(userId: number) {\n\t\treturn instanceAxios.get<ProfileType>(`/profile/` + userId)\n\t\t\t.then(response => response.data)\n\t},\n\tgetStatus(userId: number) {\n\t\treturn instanceAxios.get<string>(`/profile/status/` + userId)\n\t\t\t.then(response => response.data)\n\t},\n\tsetStatus(status: string) {\n\t\treturn instanceAxios.put<APIResponseType>('/profile/status', { status })\n\t\t\t.then(response => response.data)\n\t},\n\tsetProfileData(profileData: ProfileType) {\n\t\treturn instanceAxios.put<APIResponseType>('/profile', profileData)\n\t\t\t.then(response => response.data)\n\t},\n\tsetPhoto(filePhoto: File) {\n\t\tconst formData = new FormData();\n\t\tformData.append(\"image\", filePhoto);\n\t\treturn instanceAxios.put<APIResponseType<SetPhotoResponseData>>('/profile/photo', formData, {\n\t\t\theaders: {\n\t\t\t\t\"content-type\": \"multipart/form-data\"\n\t\t\t}\n\t\t})\n\t\t\t.then(response => response.data)\n\t}\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ProfileMenu_menu__15f_3\",\"menuContainer\":\"ProfileMenu_menuContainer__29BGD\",\"menuName\":\"ProfileMenu_menuName__2npTl\",\"menuList\":\"ProfileMenu_menuList__3gtY6\",\"menuLink\":\"ProfileMenu_menuLink__3tump\",\"signOut\":\"ProfileMenu_signOut__1xqKi\",\"statusChange\":\"ProfileMenu_statusChange__iQCE8\"};","import { stopSubmit } from \"redux-form\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { profileAPI } from \"../api/profileAPI\";\nimport { ProfileType } from \"../type/type\";\nimport { actionsAuthReducer } from \"./AuthReducer\";\nimport { AppStateType, InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tposts: [\n\t\t{ id: 1, message: 'Hi! It\\'s my first post in my social network', likesCount: 1 },\n\t\t{ id: 2, message: 'All work', likesCount: 2 },\n\t\t{ id: 3, message: 'Some post here', likesCount: 5 },\n\t\t{ id: 4, message: 'Short post', likesCount: 0 },\n\t] as Array<PosteType>,\n\tuserProfile: {\n\t\tuserId: null,\n\t\tfullName: null,\n\t\taboutMe: null,\n\t\tlookingForAJob: false,\n\t\tlookingForAJobDescription: null,\n\t\tphotos: {\n\t\t\tsmall: null,\n\t\t\tlarge: null\n\t\t},\n\t\tcontacts: {\n\t\t\tfacebook: null,\n\t\t\twebsite: null,\n\t\t\tvk: null,\n\t\t\ttwitter: null,\n\t\t\tinstagram: null,\n\t\t\tyoutube: null,\n\t\t\tgithub: null,\n\t\t\tmainLink: null\n\t\t},\n\t} as ProfileType,\n\tuserStatus: null as string | null,\n\tisFetching: false\n}\n\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'profileAction_ADD_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, {\n\t\t\t\t\tid: ++state.posts.length,\n\t\t\t\t\tmessage: action.postText,\n\t\t\t\t\tlikesCount: 0,\n\t\t\t\t}]\n\t\t\t};\n\t\tcase 'profileAction_DELETE_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\n\t\t\t};\n\t\tcase 'profileAction_SET_USER_PROFILE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserProfile: action.userProfile,\n\t\t\t};\n\t\tcase 'profileAction_SET_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.fetching,\n\t\t\t};\n\t\tcase 'profileAction_SET_USER_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserStatus: action.status\n\t\t\t};\n\t\tdefault: return state;\n\t};\n};\n\n\nexport const actionsProfileReducer = {\n\taddPost: (postText: string) => ({ type: 'profileAction_ADD_POST', postText } as const),\n\tdeletePost: (postId: number) => ({ type: 'profileAction_DELETE_POST', postId } as const),\n\tsetUserStatus: (status: string) => ({ type: 'profileAction_SET_USER_STATUS', status } as const),\n\tsetUserProfile: (userProfile: ProfileType) => ({ type: 'profileAction_SET_USER_PROFILE', userProfile } as const),\n\tsetFetching: (fetching: boolean) => ({ type: 'profileAction_SET_FETCHING', fetching } as const)\n}\n\n\nexport const getUser = (userId: number): ThunkType => {\n\treturn async (dispatch: any) => {\n\t\tconst userProfile = await profileAPI.getUserProfile(userId);\n\t\tdispatch(actionsProfileReducer.setUserProfile(userProfile));\n\n\t\tconst userStatus = await profileAPI.getStatus(userId);\n\t\tdispatch(actionsProfileReducer.setUserStatus(userStatus))\n\t}\n}\n\nexport const setProfileData = (profileData: ProfileType): ThunkType => {\n\treturn async (dispatch: any, getState: any) => {\n\t\tconst userId = getState().auth.userId;\n\t\tdispatch(actionsProfileReducer.setFetching(true))\n\t\tconst response = await profileAPI.setProfileData(profileData);\n\t\tif (response.resultCode === 0) {\n\t\t\tconst miData = await profileAPI.getUserProfile(userId)\n\t\t\tdispatch(actionsAuthReducer.setMiProfile(miData))\n\t\t} else {\n\t\t\tlet contactsError = new Map();\n\t\t\tlet otherError = new Map();\n\t\t\tresponse.messages.forEach((element: string) => {\n\t\t\t\tlet key = element.slice((element.indexOf('Contacts->') + 10), (element.length - 1)).toLowerCase();\n\t\t\t\tlet value = element.slice(0, (element.indexOf('(Contacts->') - 1));\n\t\t\t\tif (element.includes('Contacts->')) {\n\t\t\t\t\tcontactsError.set(key, value);\n\t\t\t\t} else {\n\t\t\t\t\totherError.set('_error', element);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdispatch(stopSubmit('ProfileInfo', { ...Object.fromEntries(otherError), 'contacts': Object.fromEntries(contactsError) }))\n\t\t}\n\t\tdispatch(actionsProfileReducer.setFetching(false))\n\t}\n}\n\n\nexport default profileReducer;\n\n\nexport type PosteType = {\n\tid: number\n\tmessage: string\n\tlikesCount: number\n}\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsProfileReducer>\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>","import { FilterType } from './UsersReducer'\nimport { usersAPI } from '../api/usersAPI'\nimport { UserType } from '../type/type'\nimport { BaseThunkType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n    friends: [] as Array<UserType>,\n    isFetching: false,\n    friendsCount: 0,\n}\n\nconst sidebarReducer = (\n    state = initialState,\n    action: ActionsType\n): InitialStateType => {\n    switch (action.type) {\n        case 'sidebarAction_SET_FRIENDS':\n            return {\n                ...state,\n                friends: action.friends,\n            }\n        case 'sidebarAction_SET_FETCHING':\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            }\n        case 'sidebarAction_SET_FRIENDS_COUNT':\n            return {\n                ...state,\n                friendsCount: action.friendsCount,\n            }\n        default:\n            return state\n    }\n}\n\nexport const actionsSidebarReducer = {\n    setUsersFriends: (friends: Array<UserType>) =>\n        ({ type: 'sidebarAction_SET_FRIENDS', friends } as const),\n    setFetching: (isFetching: boolean) =>\n        ({ type: 'sidebarAction_SET_FETCHING', isFetching } as const),\n    setFriendsCount: (friendsCount: number) =>\n        ({ type: 'sidebarAction_SET_FRIENDS_COUNT', friendsCount } as const),\n}\n\nexport const getFriends = (): ThunkType => {\n    return async (dispatch) => {\n        dispatch(actionsSidebarReducer.setFetching(true))\n\n        const response = await usersAPI.getUsers(12, 1, {\n            friend: true,\n            term: '',\n        } as FilterType)\n\n        dispatch(actionsSidebarReducer.setUsersFriends(response.items))\n        dispatch(actionsSidebarReducer.setFriendsCount(response.totalCount))\n        dispatch(actionsSidebarReducer.setFetching(false))\n    }\n}\n\nexport default sidebarReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsSidebarReducer>\ntype ThunkType = BaseThunkType<ActionsType>\n","export default __webpack_public_path__ + \"static/media/user.d8e8e1fe.jpg\";"],"sourceRoot":""}