{"version":3,"sources":["redux/SidebarReducer.ts","assets/images/user.jpg","utils/objectsHelper.ts","redux/UsersReducer.ts","redux/DialogsReducer.ts","hoc/withAuthRedirect.tsx","api/chatAPI.ts","redux/ChatReducer.ts","components/Sidebar/ProfileIntro/ProfileIntro.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Sidebar/FriendsBlock/FriendsBlock.module.css","components/Navbar/Navbar.module.css","Style.module.css","components/Header/Header.module.css","api/api.ts","reportWebVitals.js","redux/AppReducer.ts","redux/ReduxStore.ts","assets/images/preloaderPoint.svg","components/Header/ProfileMenu/ProfileMenu.tsx","components/Header/Search/Search.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/MenuItem.tsx","assets/images/sliders.svg","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","components/Sidebar/ProfileIntro/ProfileIntro.jsx","components/Sidebar/ProfileIntro/ProfileIntroContainer.jsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withSuspense.tsx","components/Sidebar/FriendsBlock/FriendItem/FriendItem.tsx","components/Sidebar/FriendsBlock/FriendsBlock.tsx","App.tsx","index.tsx","redux/authSelector.ts","api/authAPI.ts","redux/AuthReducer.ts","redux/profileSelector.ts","api/usersAPI.ts","api/profileAPI.ts","components/Header/ProfileMenu/ProfileMenu.module.css","redux/ProfileReducer.ts","components/elements/UserPhotoPlaceholder.tsx"],"names":["initialState","friends","isFetching","friendsCount","actionsSidebarReducer","type","getFriends","dispatch","a","usersAPI","getUsers","friend","term","response","items","totalCount","sidebarReducer","state","action","objectsHelper","objPropName","newObjProps","map","u","users","usersCount","usersCountOnPage","currentPage","followingInProgress","filter","actionsUsersReducer","followSuccess","userId","unfollowSuccess","setUsers","setUsersSum","setFilter","setPageToCurrent","pageNumber","setUsersCount","setUsersCountOnPage","setFetching","toggleIsFollowing","isFollowing","responseUsers","sum","_followUnfollow","userID","apiMethod","actionCreator","resultCode","unfollow","bind","follow","usersReducer","followed","id","dialogsData","name","avatar","messages","message","from","actionsDialogReducer","addMessage","dialogsReducer","length","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","subscribers","window","ws","closeHandler","notifySubscribersAboutStatus","setTimeout","createChanel","openHandler","errorHandler","console","error","messageHandler","e","newMessages","JSON","parse","data","forEach","s","cleanUp","removeEventListener","status","close","WebSocket","addEventListener","chatAPI","eventName","callback","push","send","actionsChatReducer","payload","_newMessageHandler","newMessageHandlerCreator","_StatusChangedHandler","StatusChangedHandlerCreator","startMessagesListening","stopMessagesListening","sendMessage","chatReducer","module","exports","ResultCodeEnum","ResultCodeForCaptcha","instanceAxios","axios","create","withCredentials","headers","baseURL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialized","actionsAppReducer","appReducer","rootReducers","combineReducers","dialogsPage","profilePage","profileReducer","sidebar","usersPage","authReducer","app","chat","form","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileMenu","React","memo","useState","setStatus","useEffect","className","menu","style","block","menuContainer","menuName","menuList","menuLink","onClick","logOut","signOut","statusChange","onChange","currentTarget","value","autoFocus","placeholder","undefined","Search","searchText","setSearchText","searchFocus","setSearchFocus","searchData","setSearchData","trim","res","position","onBlur","search","target","background","width","dataSource","renderItem","item","Item","Meta","src","photos","large","size","marginLeft","icon","UserPhotoPlaceholder","title","description","Header","preloader","statusBlock","login","user","userPhoto","photo","alt","controlBlock","miName","loading","header","container","logo","mainName","secondName","freeSpace","HeaderContainer","render","getIsAuth","getMiId","getMiFoolName","getMiStatus","getMiPhotoSmall","getLoadingStatus","MenuItem","link","activeClassName","activeLink","toUpperCase","slice","Navbar","onPhotoChange","event","files","setUserPhoto","photoUrl","this","forInitialized","ready","index","count","opacity","nav","wallpaper","menuLeft","userName","splice","Math","ceil","userBlock","menuRight","isMiProfile","photoUpload","iconSliders","menuPhoto","label","uploadFileText","uploadFileInput","comingSoon","NavbarContainer","miId","componentDidUpdate","miStatus","getUser","getUserName","getUserSmallPhoto","getUserStatus","getUserId","withRouter","ProfileIntro","blockName","userProfile","aboutMe","lookingForAJobDescription","Object","entries","contacts","key","toLowerCase","startsWith","href","ProfileIntroContainer","getUserProfile","Post","counts","likes","setLikes","dislikes","setDislikes","setAction","actions","createElement","LikeFilled","LikeOutlined","DislikeFilled","DislikeOutlined","author","content","MyPosts","submit","values","setSubmitting","addPost","post","postsElement","posts","p","likesCount","reverse","initialValues","onSubmit","isSubmitting","padding","paddingRight","display","alignItems","flexDirection","TextArea","autoSize","minRows","maxRows","onPressEnter","marginTop","MyPostsContainer","getPosts","actionsProfileReducer","Profile","ProfileContainer","refreshProfile","match","params","componentDidMount","prevProps","withSuspense","fallback","FriendItem","url","FriendBlock","useSelector","useDispatch","friendsArr","f","shape","LoginPage","lazy","default","ProfileInfoContainer","Settings","FriendsPage","DialogsContainer","UsersPage","ChatPage","SuspendedDialogs","SuspendedUsers","SuspendedChat","SuspendedLogin","SuspendedProfileInfo","App","initializeApp","path","exact","promise","getAuth","Promise","all","ReactDOM","StrictMode","Store","document","getElementById","getCaptchaURL","captchaURL","getMiProfile","profile","fullName","small","isLoading","authAPI","get","email","password","rememberMe","captcha","delete","lookingForAJob","facebook","website","vk","twitter","instagram","youtube","github","mainLink","actionsAuthReducer","setAuthUserData","setMiStatus","setMiProfile","setLoading","setUserPhotoSuccess","setCaptchaURL","miData","profileAPI","userData","getStatus","userStatus","logIn","captchaCode","stopSubmit","_error","file","setPhoto","getMiProfileFetching","put","setProfileData","profileData","filePhoto","formData","FormData","append","postText","deletePost","postId","setUserStatus","setUserProfile","fetching","getState","contactsError","Map","otherError","element","indexOf","includes","set","fromEntries","height"],"mappings":"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","file":"static/js/main.06f81afa.chunk.js","sourcesContent":["import { FilterType } from './UsersReducer'\nimport { usersAPI } from '../api/usersAPI'\nimport { UserType } from '../type/type'\nimport { BaseThunkType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n\tfriends: [] as Array<UserType>,\n\tisFetching: false,\n\tfriendsCount: 0,\n}\n\nconst sidebarReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'sidebarAction_SET_FRIENDS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfriends: action.friends,\n\t\t\t}\n\t\tcase 'sidebarAction_SET_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.isFetching,\n\t\t\t}\n\t\tcase 'sidebarAction_SET_FRIENDS_COUNT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfriendsCount: action.friendsCount,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsSidebarReducer = {\n\tsetUsersFriends: (friends: Array<UserType>) => ({ type: 'sidebarAction_SET_FRIENDS', friends } as const),\n\tsetFetching: (isFetching: boolean) => ({ type: 'sidebarAction_SET_FETCHING', isFetching } as const),\n\tsetFriendsCount: (friendsCount: number) => ({ type: 'sidebarAction_SET_FRIENDS_COUNT', friendsCount } as const),\n}\n\nexport const getFriends = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsSidebarReducer.setFetching(true))\n\n\t\tconst response = await usersAPI.getUsers(12, 1, {\n\t\t\tfriend: true,\n\t\t\tterm: '',\n\t\t} as FilterType)\n\n\t\tdispatch(actionsSidebarReducer.setUsersFriends(response.items))\n\t\tdispatch(actionsSidebarReducer.setFriendsCount(response.totalCount))\n\t\tdispatch(actionsSidebarReducer.setFetching(false))\n\t}\n}\n\nexport default sidebarReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsSidebarReducer>\ntype ThunkType = BaseThunkType<ActionsType>\n","export default __webpack_public_path__ + \"static/media/user.d8e8e1fe.jpg\";","export const objectsHelper = (items: any, action: any, objPropName: any, newObjProps: any) => {\n\treturn items.map((u: any) => (u[objPropName] === action) ? { ...u, ...newObjProps } : u)\n}","import { BaseThunkType, InferActionsTypes } from './ReduxStore'\nimport { Dispatch } from 'redux'\nimport { usersAPI } from '../api/usersAPI'\nimport { UserType } from '../type/type'\nimport { objectsHelper } from '../utils/objectsHelper'\nimport { APIResponseType } from '../api/api'\nimport { getFriends } from './SidebarReducer'\n\nlet initialState = {\n\tusers: [] as Array<UserType>,\n\tusersCount: 0,\n\tusersCountOnPage: 12,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: [] as Array<number>,\n\tfilter: {\n\t\tterm: '',\n\t\tfriend: null as null | boolean,\n\t},\n}\n\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'usersAction_FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: objectsHelper(state.users, action.userId, 'id', {\n\t\t\t\t\tfollowed: true,\n\t\t\t\t}),\n\t\t\t}\n\t\tcase 'usersAction_UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: objectsHelper(state.users, action.userId, 'id', {\n\t\t\t\t\tfollowed: false,\n\t\t\t\t}),\n\t\t\t}\n\t\tcase 'usersAction_SET_USERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: action.users,\n\t\t\t}\n\t\tcase 'usersAction_SET_USERS_SUM':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: [...state.users, ...action.users],\n\t\t\t}\n\t\tcase 'usersAction_SET_PAGE_NUMBER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.pageNumber,\n\t\t\t}\n\t\tcase 'usersAction_SET_USERS_COUNT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusersCount: action.usersCount,\n\t\t\t}\n\t\tcase 'usersAction_SET_USERS_COUNT_ON_PAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusersCountOnPage: action.usersCountOnPage,\n\t\t\t}\n\t\tcase 'usersAction_SET_FILTER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter: action.filter,\n\t\t\t}\n\t\tcase 'usersAction_SET_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.isFetching,\n\t\t\t}\n\t\tcase 'usersAction_TOGGLE_IS_FOLLOWING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFollowing\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter((id) => id !== action.userId),\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsUsersReducer = {\n\tfollowSuccess: (userId: number) => ({ type: 'usersAction_FOLLOW', userId } as const),\n\tunfollowSuccess: (userId: number) => ({ type: 'usersAction_UNFOLLOW', userId } as const),\n\tsetUsers: (users: Array<UserType>) => ({ type: 'usersAction_SET_USERS', users } as const),\n\tsetUsersSum: (users: Array<UserType>) => ({ type: 'usersAction_SET_USERS_SUM', users } as const),\n\tsetFilter: (filter: FilterType) => ({ type: 'usersAction_SET_FILTER', filter } as const),\n\tsetPageToCurrent: (pageNumber: number) => ({ type: 'usersAction_SET_PAGE_NUMBER', pageNumber } as const),\n\tsetUsersCount: (usersCount: number) => ({ type: 'usersAction_SET_USERS_COUNT', usersCount } as const),\n\tsetUsersCountOnPage: (usersCountOnPage: number) =>\n\t\t({\n\t\t\ttype: 'usersAction_SET_USERS_COUNT_ON_PAGE',\n\t\t\tusersCountOnPage,\n\t\t} as const),\n\tsetFetching: (isFetching: boolean) => ({ type: 'usersAction_SET_FETCHING', isFetching } as const),\n\ttoggleIsFollowing: (isFollowing: boolean, userId: number) =>\n\t\t({\n\t\t\ttype: 'usersAction_TOGGLE_IS_FOLLOWING',\n\t\t\tisFollowing,\n\t\t\tuserId,\n\t\t} as const),\n}\n\nexport const responseUsers = (\n\tusersCountOnPage: number,\n\tcurrentPage: number,\n\tfilter: FilterType,\n\tsum: boolean\n): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsUsersReducer.setFetching(true))\n\t\t!sum && dispatch(actionsUsersReducer.setPageToCurrent(currentPage))\n\t\t!sum && dispatch(actionsUsersReducer.setUsersCountOnPage(usersCountOnPage))\n\t\t!sum && dispatch(actionsUsersReducer.setFilter(filter))\n\n\t\tconst response = await usersAPI.getUsers(usersCountOnPage, currentPage, filter)\n\n\t\tsum\n\t\t\t? dispatch(actionsUsersReducer.setUsersSum(response.items))\n\t\t\t: dispatch(actionsUsersReducer.setUsers(response.items))\n\t\tdispatch(actionsUsersReducer.setUsersCount(response.totalCount))\n\t\tdispatch(actionsUsersReducer.setFetching(false))\n\t}\n}\n\nconst _followUnfollow = async (\n\tuserID: number,\n\tdispatch: DispatchType,\n\tapiMethod: (userId: number) => Promise<APIResponseType>,\n\tactionCreator: (userId: number) => ActionsType\n) => {\n\tdispatch(actionsUsersReducer.toggleIsFollowing(true, userID))\n\n\tconst response = await apiMethod(userID)\n\n\tif (response.resultCode === 0) {\n\t\tdispatch(actionCreator(userID))\n\t\t// @ts-ignore\n\t\tdispatch(getFriends())\n\t}\n\tdispatch(actionsUsersReducer.toggleIsFollowing(false, userID))\n}\n\nexport const unfollow = (userID: number): ThunkType => {\n\treturn async (dispatch) => {\n\t\tawait _followUnfollow(userID, dispatch, usersAPI.unfollow.bind(usersAPI), actionsUsersReducer.unfollowSuccess)\n\t}\n}\n\nexport const follow = (userID: number): ThunkType => {\n\treturn async (dispatch) => {\n\t\tawait _followUnfollow(userID, dispatch, usersAPI.follow.bind(usersAPI), actionsUsersReducer.followSuccess)\n\t}\n}\n\nexport default usersReducer\n\nexport type InitialStateType = typeof initialState\nexport type FilterType = typeof initialState.filter\ntype ActionsType = InferActionsTypes<typeof actionsUsersReducer>\ntype DispatchType = Dispatch<ActionsType>\ntype ThunkType = BaseThunkType<ActionsType>\n","import { ThunkAction } from 'redux-thunk'\nimport { AppStateType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n\tdialogsData: [\n\t\t{ id: 1, name: 'Perec', avatar: 'https://i0.wp.com/7youtube.ru/wp-content/uploads/2017/01/dmdmdmddsaaaa.jpg' },\n\t\t{ id: 2, name: 'Vasia', avatar: 'http://cs622426.vk.me/v622426834/409d/baLqspYwi84.jpg' },\n\t\t{ id: 3, name: 'Vova', avatar: 'https://ispolnu.ru/uploads/services/20180618/1529316303dbca.jpg' },\n\t\t{ id: 4, name: 'Anton', avatar: 'https://discordgid.ru/wp-content/uploads/2020/03/diskord-avatar.jpg' },\n\t] as Array<DialogType>,\n\tmessages: [\n\t\t{ id: 1, message: 'hi!', from: 'friend' },\n\t\t{ id: 2, message: 'How is your programing?', from: 'friend' },\n\t\t{ id: 3, message: 'Ok', from: 'mi' },\n\t\t{ id: 4, message: 'Cool!', from: 'friend' },\n\t\t{\n\t\t\tid: 5,\n\t\t\tmessage:\n\t\t\t\t'Some log message. Lorem ipsum, dolor sit amet consectetur adipisicing elit. Earum sint enim est sequi voluptatem vel illo iusto neque, ab, nihil qui quae cumque fugit praesentium, tempora at? Molestiae, asperiores voluptatem.',\n\t\t\tfrom: 'mi',\n\t\t},\n\t] as Array<MessageType>,\n}\n\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'dialogAction_ADD_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [\n\t\t\t\t\t...state.messages,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ++state.messages.length,\n\t\t\t\t\t\tmessage: action.message,\n\t\t\t\t\t\tfrom: 'mi',\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsDialogReducer = {\n\taddMessageAC: (message: string) => ({ type: 'dialogAction_ADD_MESSAGE', message }),\n}\n\nexport const addMessage = (message: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsDialogReducer.addMessageAC(message))\n\t}\n}\n\nexport default dialogsReducer\n\ntype DialogType = {\n\tid: number\n\tname: string\n\tavatar: string\n}\ntype MessageType = {\n\tid: number\n\tmessage: string\n\tfrom: 'mi' | 'friend'\n}\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsDialogReducer>\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect } from 'react-router-dom'\nimport { AppStateType } from '../redux/ReduxStore'\n\ntype MapStatePropsType = {\n\tisAuth: boolean\n}\ntype MapDispatchPropsType = {}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: state.auth.isAuth,\n})\n\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\n\tconst RedirectComponent: React.FC<MapStatePropsType & MapStatePropsType> = (props) => {\n\t\tlet { isAuth, ...restProps } = props\n\t\tif (!isAuth) return <Redirect to='/login' />\n\t\treturn <Component {...(restProps as WCP)} />\n\t}\n\n\t// const connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n\treturn connect<MapStatePropsType, MapDispatchPropsType, WCP, AppStateType>(mapStateToProps, {})(RedirectComponent)\n}\n","let subscribers = {\n\t'messages-received': [] as MessagesReceivedSubscriberType[],\n\t'status-changed': [] as StatusChangedSubscriberType[],\n}\n\n// @ts-ignore\nwindow.subscribers = subscribers\n\nlet ws: WebSocket | null = null\n\nconst closeHandler = () => {\n\tnotifySubscribersAboutStatus('pending')\n\tsetTimeout(createChanel, 3000)\n}\n\nconst openHandler = () => {\n\tnotifySubscribersAboutStatus('ready')\n}\n\nconst errorHandler = () => {\n\tnotifySubscribersAboutStatus('error')\n\tconsole.error('Refresh page')\n}\n\nconst messageHandler = (e: MessageEvent) => {\n\tconst newMessages = JSON.parse(e.data)\n\tsubscribers['messages-received'].forEach((s) => s(newMessages))\n}\n\nconst cleanUp = () => {\n\tws?.removeEventListener('close', closeHandler)\n\tws?.removeEventListener('message', messageHandler)\n\tws?.removeEventListener('open', openHandler)\n\tws?.removeEventListener('error', errorHandler)\n}\n\nconst notifySubscribersAboutStatus = (status: StatusType) => {\n\tsubscribers['status-changed'].forEach((s) => s(status))\n}\n\nconst createChanel = () => {\n\tcleanUp()\n\tws?.close()\n\n\tws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\n\tnotifySubscribersAboutStatus('pending')\n\tws.addEventListener('close', closeHandler)\n\tws.addEventListener('message', messageHandler)\n\tws.addEventListener('open', openHandler)\n\tws.addEventListener('error', errorHandler)\n}\n\nexport const chatAPI = {\n\tstart() {\n\t\tcreateChanel()\n\t},\n\tstop() {\n\t\t// notifySubscribersAboutStatus('pending')\n\t\tsubscribers['messages-received'] = []\n\t\tsubscribers['status-changed'] = []\n\t\tcleanUp()\n\t\tws?.close()\n\t},\n\tsubscribe(eventName: EventsNameType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\n\t\t// @ts-ignore\n\t\tsubscribers[eventName].push(callback)\n\n\t\treturn () => {\n\t\t\t// @ts-ignore\n\t\t\tsubscribers[eventName] = subscribers[eventName].filter(\n\t\t\t\t// @ts-ignore\n\t\t\t\t(s) => s !== callback\n\t\t\t)\n\t\t}\n\t},\n\tunsubscribe(eventName: EventsNameType, callback: MessagesReceivedSubscriberType | StatusChangedSubscriberType) {\n\t\t// @ts-ignore\n\t\tsubscribers[eventName] = subscribers[eventName].filter(\n\t\t\t// @ts-ignore\n\t\t\t(s) => s !== callback\n\t\t)\n\t},\n\tsendMessage(message: string) {\n\t\tws?.send(message)\n\t},\n}\n\ntype EventsNameType = 'status-changed' | 'messages-received'\n\nexport type ChatMessageType = {\n\tmessage: string\n\tphoto: string\n\tuserId: number\n\tuserName: string\n}\nexport type StatusType = 'pending' | 'ready' | 'error'\nexport type MessagesReceivedSubscriberType = (messages: ChatMessageType[]) => void\nexport type StatusChangedSubscriberType = (status: StatusType) => void\n","import { Dispatch } from 'redux'\nimport { chatAPI, StatusType, MessagesReceivedSubscriberType, StatusChangedSubscriberType } from './../api/chatAPI'\nimport { ChatMessageType } from '../api/chatAPI'\nimport { BaseThunkType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n\tmessages: [] as ChatMessageType[],\n\tstatus: 'pending' as StatusType,\n}\n\nconst chatReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'chatAction_SET_MESSAGES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, ...action.payload.messages],\n\t\t\t}\n\t\tcase 'chatAction_SET_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.payload,\n\t\t\t}\n\t\tcase 'chatAction_RESET_MESSAGES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [],\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsChatReducer = {\n\tmessagesReceived: (messages: ChatMessageType[]) =>\n\t\t({ type: 'chatAction_SET_MESSAGES', payload: { messages } } as const),\n\tmessagesReset: () => ({ type: 'chatAction_RESET_MESSAGES' } as const),\n\tstatusChanged: (status: StatusType) => ({ type: 'chatAction_SET_STATUS', payload: status } as const),\n}\n\nlet _newMessageHandler: MessagesReceivedSubscriberType | null = null\n\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\n\tif (_newMessageHandler === null) {\n\t\t_newMessageHandler = (messages) => {\n\t\t\tdispatch(actionsChatReducer.messagesReceived(messages))\n\t\t}\n\t\treturn _newMessageHandler\n\t}\n}\n\nlet _StatusChangedHandler: StatusChangedSubscriberType | null = null\n\nconst StatusChangedHandlerCreator = (dispatch: Dispatch) => {\n\tif (_StatusChangedHandler === null) {\n\t\t_StatusChangedHandler = (status) => {\n\t\t\tdispatch(actionsChatReducer.statusChanged(status))\n\t\t}\n\t\treturn _StatusChangedHandler\n\t}\n}\n\nexport const startMessagesListening = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tchatAPI.start()\n\t\tchatAPI.subscribe(\n\t\t\t'messages-received',\n\t\t\t// @ts-ignore\n\t\t\tnewMessageHandlerCreator(dispatch)\n\t\t)\n\t\tchatAPI.subscribe(\n\t\t\t'status-changed',\n\t\t\t// @ts-ignore\n\t\t\tStatusChangedHandlerCreator(dispatch)\n\t\t)\n\t}\n}\n\nexport const stopMessagesListening = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tchatAPI.unsubscribe(\n\t\t\t'messages-received',\n\t\t\t// @ts-ignore\n\t\t\tnewMessageHandlerCreator(dispatch)\n\t\t)\n\t\tchatAPI.unsubscribe(\n\t\t\t'status-changed',\n\t\t\t// @ts-ignore\n\t\t\tStatusChangedHandlerCreator(dispatch)\n\t\t)\n\t\tchatAPI.stop()\n\t\t_newMessageHandler = null\n\t\t_StatusChangedHandler = null\n\t\tdispatch(actionsChatReducer.messagesReset())\n\t}\n}\n\nexport const sendMessage = (message: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tchatAPI.sendMessage(message)\n\t}\n}\n\nexport default chatReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsChatReducer>\ntype ThunkType = BaseThunkType<ActionsType>\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileIntro_container__1Nlan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosteBlock\":\"MyPosts_newPosteBlock__1S_bJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendsBlock_container__1pzrw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"wallpaper\":\"Navbar_wallpaper__1DlQr\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"menu\":\"Navbar_menu__NKpxG\",\"menuLeft\":\"Navbar_menuLeft__1-CBC\",\"menuRight\":\"Navbar_menuRight__1hhAo\",\"userBlock\":\"Navbar_userBlock__yi49o\",\"userPhoto\":\"Navbar_userPhoto__2OkdO\",\"userName\":\"Navbar_userName__3NVEZ\",\"status\":\"Navbar_status__2Q0dS\",\"photoUpload\":\"Navbar_photoUpload__1tWKu\",\"menuPhoto\":\"Navbar_menuPhoto__3B8Vs\",\"container\":\"Navbar_container__1ESpZ\",\"label\":\"Navbar_label__2vojo\",\"uploadFileText\":\"Navbar_uploadFileText__iYdut\",\"uploadFileInput\":\"Navbar_uploadFileInput__1526y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Style_container__2zXzS\",\"block\":\"Style_block__2NKmM\",\"blockName\":\"Style_blockName__1y7Ic\",\"comingSoon\":\"Style_comingSoon__1sOMO\",\"errorSubmitForm\":\"Style_errorSubmitForm__1L_4y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87\",\"login\":\"Header_login__3V3Qa\",\"logo\":\"Header_logo__3_SJs\",\"mainName\":\"Header_mainName__1HPVb\",\"secondName\":\"Header_secondName__2K9lp\",\"search\":\"Header_search__ckDys\",\"freeSpace\":\"Header_freeSpace__2bhUy\",\"menuList\":\"Header_menuList__3jhVl\",\"menuLink\":\"Header_menuLink__ig-eX\",\"user\":\"Header_user__1QDl1\",\"arrow\":\"Header_arrow__1S-AG\",\"menu\":\"Header_menu__BQHSW\",\"userPhoto\":\"Header_userPhoto__3zN07\",\"controlBlock\":\"Header_controlBlock__14paH\",\"name\":\"Header_name__2-9cn\",\"status\":\"Header_status__2bL1G\"};","import axios from 'axios'\n\nexport const instanceAxios = axios.create({\n\twithCredentials: true,\n\theaders: {\n\t\t'API-KEY': '65f23381-a001-469d-b8d8-33dccd7a4fd2',\n\t},\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0',\n})\n\nexport type APIResponseType<D = {}, RC = ResultCodeEnum> = {\n\tdata: D\n\tmessages: Array<string>\n\tresultCode: RC\n}\n\nexport enum ResultCodeEnum {\n\tSuccess = 0,\n\tError = 1,\n}\n\nexport enum ResultCodeForCaptcha {\n\tCaptchaIsRequired = 10,\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { getAuth } from './AuthReducer'\nimport { InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n\tinitialized: false,\n}\n\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZED_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialized: true,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsAppReducer = {\n\tinitializedSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const),\n}\n\nexport const initializeApp = () => (dispatch: any) => {\n\tlet promise = dispatch(getAuth())\n\tPromise.all([promise]).then(() => {\n\t\tdispatch(actionsAppReducer.initializedSuccess())\n\t})\n}\n\nexport default appReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsAppReducer>\n","import { createStore, combineReducers, applyMiddleware, compose, Action } from 'redux'\nimport authReducer from './AuthReducer'\nimport dialogsReducer from './DialogsReducer'\nimport profileReducer from './ProfileReducer'\nimport sidebarReducer from './SidebarReducer'\nimport usersReducer from './UsersReducer'\nimport thunkMiddleware, { ThunkAction } from 'redux-thunk'\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from './AppReducer'\nimport chatReducer from './ChatReducer'\n\nlet rootReducers = combineReducers({\n\tdialogsPage: dialogsReducer,\n\tprofilePage: profileReducer,\n\tsidebar: sidebarReducer,\n\tusersPage: usersReducer,\n\tauth: authReducer,\n\tapp: appReducer,\n\tchat: chatReducer,\n\tform: formReducer,\n})\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)))\n\n// @ts-ignore\nwindow.store = store\n\nexport default store\n\ntype RootStateType = typeof rootReducers\nexport type AppStateType = ReturnType<RootStateType>\nexport type InferActionsTypes<T> = T extends {\n\t[keys: string]: (...args: any[]) => infer U\n}\n\t? U\n\t: never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>\n","export default __webpack_public_path__ + \"static/media/preloaderPoint.7aaa1561.svg\";","import React, { ChangeEvent, useEffect, useState } from 'react'\nimport style from '../../../Style.module.css'\nimport s from './ProfileMenu.module.css'\nimport { NavLink } from 'react-router-dom'\n\ntype PropsType = {\n\tstatus: string | null\n\tlogOut: () => void\n\tsetStatus: (status: string) => void\n}\n\nconst ProfileMenu: React.FC<PropsType> = React.memo((props) => {\n\tconst [status, setStatus] = useState(props.status)\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status])\n\n\tconst applyStatusChange = () => {\n\t\tprops.setStatus(status as string)\n\t}\n\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\n\treturn (\n\t\t<div className={s.menu}>\n\t\t\t<div className={style.block + ' ' + s.menuContainer}>\n\t\t\t\t<div className={s.menuName}>YOUR ACCOUNT</div>\n\t\t\t\t<ul className={s.menuList}>\n\t\t\t\t\t<NavLink to={'/profile/settings'}>\n\t\t\t\t\t\t<li className={s.menuLink}>Profile Information</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<li onClick={props.logOut} className={s.menuLink + ' ' + s.signOut}>\n\t\t\t\t\t\t<span>Sign out</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className={s.menuName}>CHANGE STATUS</div>\n\t\t\t\t<div className={s.statusChange}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tonChange={onStatusChange}\n\t\t\t\t\t\tautoFocus={true}\n\t\t\t\t\t\tplaceholder='Type new post...'\n\t\t\t\t\t\tvalue={status ? status : undefined}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={applyStatusChange}>Sent</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nexport default ProfileMenu\n","import { List } from 'antd'\nimport Avatar from 'antd/lib/avatar/avatar'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { usersAPI } from '../../../api/usersAPI'\nimport { UserType } from '../../../type/type'\nimport { UserPhotoPlaceholder } from '../../elements/UserPhotoPlaceholder'\nimport s from '../Header.module.css'\n\nexport const Search: React.FC = () => {\n\tconst [searchText, setSearchText] = useState('')\n\tconst [searchFocus, setSearchFocus] = useState(false)\n\tconst [searchData, setSearchData] = useState<UserType[]>([])\n\n\tuseEffect(() => {\n\t\tif (!!searchText) {\n\t\t\tsetSearchFocus(true)\n\t\t\tusersAPI.getUsers(5, 1, { term: searchText.trim(), friend: null }).then((res) => {\n\t\t\t\tsetSearchData(res.items)\n\t\t\t})\n\t\t} else {\n\t\t\tsetSearchFocus(false)\n\t\t}\n\t\treturn () => {\n\t\t\tsetSearchData([])\n\t\t}\n\t}, [searchText])\n\n\treturn (\n\t\t<div\n\t\t\tstyle={{ position: 'relative' }}\n\t\t\tonBlur={() => {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetSearchFocus(false)\n\t\t\t\t}, 200)\n\t\t\t}}>\n\t\t\t<input\n\t\t\t\tplaceholder='Search here...'\n\t\t\t\tclassName={s.search}\n\t\t\t\tvalue={searchText}\n\t\t\t\tonChange={(e) => setSearchText(e.target.value)}\n\t\t\t/>\n\t\t\t{searchFocus && (\n\t\t\t\t<div\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\tbackground: '#fff',\n\t\t\t\t\t\twidth: 300,\n\t\t\t\t\t}}>\n\t\t\t\t\t<List\n\t\t\t\t\t\tdataSource={searchData}\n\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t<NavLink to={`/profile/` + item.id}>\n\t\t\t\t\t\t\t\t<List.Item\n\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tsetSearchFocus(false)\n\t\t\t\t\t\t\t\t\t\tsetSearchText('')\n\t\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\t\t<List.Item.Meta\n\t\t\t\t\t\t\t\t\t\tavatar={\n\t\t\t\t\t\t\t\t\t\t\t<Avatar\n\t\t\t\t\t\t\t\t\t\t\t\tsrc={item.photos.large}\n\t\t\t\t\t\t\t\t\t\t\t\tsize='default'\n\t\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginLeft: 20 }}\n\t\t\t\t\t\t\t\t\t\t\t\ticon={<UserPhotoPlaceholder />}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\ttitle={item.name}\n\t\t\t\t\t\t\t\t\t\tdescription={item.status}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t{/* <div style={{ marginRight: 20 }}>test</div> */}\n\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t)}></List>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport style from '../../Style.module.css'\nimport s from './Header.module.css'\nimport userPhoto from '../../assets/images/user.jpg'\nimport preloaderImage from '../../assets/images/preloaderPoint.svg'\nimport ProfileMenu from './ProfileMenu/ProfileMenu'\nimport { Search } from './Search/Search'\nimport { Button, Space, Spin } from 'antd'\n\ntype PropsType = {\n\tstatus: string | null\n\tphoto: string | null\n\tmiName: string | null\n\tloading: boolean\n\tisAuth: boolean\n\tsetStatus: (status: string) => void\n\tlogOut: () => void\n}\n\nconst Header: React.FC<PropsType> = (props) => {\n\tlet preloader = (\n\t\t<div className={s.preloader}>\n\t\t\t<img src={preloaderImage} alt='Preloader' />\n\t\t</div>\n\t)\n\n\tlet statusBlock = <span>{props.status || 'no status'}</span>\n\n\tlet login = (\n\t\t<NavLink to={'/login'}>\n\t\t\t<Button>Log In</Button>\n\t\t</NavLink>\n\t)\n\n\tlet user = (\n\t\t<ul className={s.menuList}>\n\t\t\t<li className={s.menuLink}>\n\t\t\t\t<div className={s.user}>\n\t\t\t\t\t<div className={s.userPhoto}>\n\t\t\t\t\t\t<img src={props.photo ? props.photo : userPhoto} alt='mainImage'></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={s.controlBlock}>\n\t\t\t\t\t\t<div className={s.name}>{props.miName}</div>\n\t\t\t\t\t\t<div className={s.status}>{props.loading ? <Spin size='small' /> : statusBlock}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={s.menu}>\n\t\t\t\t\t\t<ProfileMenu status={props.status} setStatus={props.setStatus} logOut={props.logOut} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</li>\n\t\t</ul>\n\t)\n\n\treturn (\n\t\t<header className={s.header}>\n\t\t\t<div className={`${style.container} ${s.container}`}>\n\t\t\t\t<div className={s.logo}>\n\t\t\t\t\t<span className={s.mainName}>SAMURAIS</span>\n\t\t\t\t\t<span className={s.secondName}>social network</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.freeSpace}></div>\n\t\t\t\t<Space>\n\t\t\t\t\t<Search />\n\t\t\t\t\t{props.isAuth ? user : login}\n\t\t\t\t</Space>\n\t\t\t</div>\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Header from './Header'\nimport { setStatus, logOut } from '../../redux/AuthReducer'\nimport {\n\tgetIsAuth,\n\tgetLoadingStatus,\n\tgetMiFoolName,\n\tgetMiId,\n\tgetMiPhotoSmall,\n\tgetMiStatus,\n} from '../../redux/authSelector'\nimport { AppStateType } from '../../redux/ReduxStore'\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchToPropsType = {\n\tsetStatus: (status: string) => void\n\tlogOut: () => void\n}\nclass HeaderContainer extends React.Component<MapStateToPropsType & MapDispatchToPropsType> {\n\trender = () => {\n\t\treturn (\n\t\t\t<Header\n\t\t\t\tmiName={this.props.miName}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tlogOut={this.props.logOut}\n\t\t\t\tisAuth={this.props.isAuth}\n\t\t\t\tphoto={this.props.photo}\n\t\t\t\tloading={this.props.loading}\n\t\t\t\tsetStatus={this.props.setStatus}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: getIsAuth(state),\n\tuserId: getMiId(state),\n\tmiName: getMiFoolName(state),\n\tstatus: getMiStatus(state),\n\tphoto: getMiPhotoSmall(state),\n\tloading: getLoadingStatus(state),\n})\n\nexport default connect(mapStateToProps, { setStatus, logOut })(HeaderContainer)\n","import React from 'react'\nimport s from './Navbar.module.css'\nimport { NavLink } from 'react-router-dom'\n\ntype PropsType = {\n\tlink: string\n}\n\nexport const MenuItem: React.FC<PropsType> = (props) => {\n\treturn (\n\t\t<div className={s.item}>\n\t\t\t<NavLink to={props.link} activeClassName={s.activeLink}>\n\t\t\t\t{props.link[1].toUpperCase() + props.link.slice(2)}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default MenuItem\n","export default __webpack_public_path__ + \"static/media/sliders.957e732c.svg\";","import React, { ChangeEvent } from 'react'\nimport s from './Navbar.module.css'\nimport style from '../../Style.module.css'\nimport userPhoto from '../../assets/images/user.jpg'\nimport MenuItem from './MenuItem'\nimport iconSliders from '../../assets/images/sliders.svg'\nimport { Badge } from 'antd'\n\ntype PropsType = {\n\tuserPhoto: string | null\n\tstatus: string | null\n\tisMiProfile: boolean\n\tisAuth: boolean\n\tuserName: string | null\n\tsetUserPhoto: (file: File) => void\n}\n\nclass Navbar extends React.Component<PropsType> {\n\tonPhotoChange = (event: ChangeEvent<HTMLInputElement>) => {\n\t\tif (event.target.files && event.target.files.length) {\n\t\t\tthis.props.setUserPhoto(event.target.files[0])\n\t\t}\n\t}\n\n\trender() {\n\t\tlet photoUrl = !this.props.userPhoto ? userPhoto : this.props.userPhoto\n\t\tlet status = !this.props.status ? '' : <div className={s.status}>{this.props.status}</div>\n\t\tlet navItems = [\n\t\t\t{ link: '/profile', forInitialized: true, ready: false },\n\t\t\t{ link: '/dialogs', forInitialized: true, ready: false },\n\t\t\t{ link: '/chat', forInitialized: true, ready: true },\n\t\t\t{\n\t\t\t\tlink: '/friends',\n\t\t\t\tforInitialized: true,\n\t\t\t\tready: true,\n\t\t\t},\n\t\t\t{ link: '/users', forInitialized: false, ready: true },\n\t\t\t{\n\t\t\t\tlink: '/settings',\n\t\t\t\tforInitialized: false,\n\t\t\t\tready: false,\n\t\t\t},\n\t\t]\n\n\t\tlet menu = navItems.map((item, index) =>\n\t\t\tthis.props.isAuth ? (\n\t\t\t\titem.ready ? (\n\t\t\t\t\t<MenuItem link={item.link} key={index} />\n\t\t\t\t) : (\n\t\t\t\t\t<Badge size='small' count='coming soon' style={{ opacity: '30%' }}>\n\t\t\t\t\t\t<MenuItem link={item.link} key={index} />\n\t\t\t\t\t</Badge>\n\t\t\t\t)\n\t\t\t) : !item.forInitialized ? (\n\t\t\t\t<MenuItem link={item.link} key={index} />\n\t\t\t) : (\n\t\t\t\t<></>\n\t\t\t)\n\t\t)\n\n\t\treturn (\n\t\t\t<nav className={`${s.nav} ${style.block}`}>\n\t\t\t\t<div className={s.wallpaper}>\n\t\t\t\t\t<img src='https://html.crumina.net/html-olympus/img/top-header1.webp' alt='wallpaper'></img>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.menu}>\n\t\t\t\t\t<div className={s.menuLeft}>\n\t\t\t\t\t\t{this.props.userName ? menu.splice(0, Math.ceil(menu.length / 2)) : menu}\n\t\t\t\t\t</div>\n\t\t\t\t\t{this.props.userName && (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className={s.userBlock}>\n\t\t\t\t\t\t\t\t<div className={s.userPhoto}>\n\t\t\t\t\t\t\t\t\t<img src={photoUrl} alt='userPhoto'></img>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className={s.userName}>\n\t\t\t\t\t\t\t\t\t{this.props.userName}\n\t\t\t\t\t\t\t\t\t{status}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={s.menuRight}>{menu}</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{this.props.isMiProfile && (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<div className={s.photoUpload}>\n\t\t\t\t\t\t\t<img src={iconSliders} alt='Controls' />\n\t\t\t\t\t\t\t<div className={s.menuPhoto}>\n\t\t\t\t\t\t\t\t<div className={style.block + ' ' + s.container}>\n\t\t\t\t\t\t\t\t\t<label className={s.label}>\n\t\t\t\t\t\t\t\t\t\t<span className={s.uploadFileText}>Upload profile photo</span>\n\t\t\t\t\t\t\t\t\t\t<input type='file' onChange={this.onPhotoChange} className={s.uploadFileInput} />\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t<span className={s.uploadFileText + ' ' + style.comingSoon}>Upload header photo</span>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</nav>\n\t\t)\n\t}\n}\n\nexport default Navbar\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport Navbar from './Navbar'\nimport { getUser } from '../../redux/ProfileReducer'\nimport { setUserPhoto } from '../../redux/AuthReducer'\nimport { withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { getUserId, getUserName, getUserSmallPhoto, getUserStatus } from '../../redux/profileSelector'\nimport { getIsAuth, getMiId, getMiStatus } from '../../redux/authSelector'\nimport { AppStateType } from '../../redux/ReduxStore'\n\ntype MapStateToProps = ReturnType<typeof mapStateToProps>\ntype MapDispatchToProps = {\n\tgetUser: (userId: number | null) => void\n\tsetUserPhoto: (file: File) => void\n}\n\nclass NavbarContainer extends React.Component<MapStateToProps & MapDispatchToProps> {\n\tisMiProfile = () => {\n\t\tif (this.props.userId === this.props.miId) return true\n\t\treturn false\n\t}\n\tcomponentDidUpdate = () => {\n\t\tif (this.isMiProfile()) {\n\t\t\tif (this.props.status !== this.props.miStatus) {\n\t\t\t\tthis.props.getUser(this.props.miId)\n\t\t\t}\n\t\t}\n\t}\n\trender = () => {\n\t\treturn (\n\t\t\t<Navbar\n\t\t\t\tuserName={this.props.userName}\n\t\t\t\tuserPhoto={this.props.userPhoto}\n\t\t\t\tisAuth={this.props.isAuth}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tisMiProfile={this.isMiProfile()}\n\t\t\t\tsetUserPhoto={this.props.setUserPhoto}\n\t\t\t/>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tuserName: getUserName(state),\n\t\tuserPhoto: getUserSmallPhoto(state),\n\t\tstatus: getUserStatus(state),\n\t\tisAuth: getIsAuth(state),\n\t\tuserId: getUserId(state),\n\t\tmiId: getMiId(state),\n\t\tmiStatus: getMiStatus(state),\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { getUser, setUserPhoto }),\n\twithRouter\n)(NavbarContainer)\n","import React from 'react';\nimport s from './ProfileIntro.module.css'\nimport style from '../../../Style.module.css'\n\n\nconst ProfileIntro = (props) => {\n\treturn (\n\t\t<div className={style.block}>\n\t\t\t<div className={style.blockName}>\n\t\t\t\tProfile Intro\n\t\t\t</div>\n\t\t\t<div className={s.container}>\n\t\t\t\t<h4 className=\"title\">About Me:</h4>\n\t\t\t\t<span className=\"text\">{props.userProfile.aboutMe}</span>\n\t\t\t\t<h4 className=\"title\">Looking for a job description:</h4>\n\t\t\t\t<span className=\"text\">{props.userProfile.lookingForAJobDescription}</span>\n\t\t\t\t<h4 className=\"title\">Contacts:</h4>\n\t\t\t\t<ul>\n\t\t\t\t\t{Object.entries(props.userProfile.contacts).map(([key, value]) => value\n\t\t\t\t\t\t? value.toLowerCase().startsWith(\"http\")\n\t\t\t\t\t\t\t? <li key={key}><a href={value}>{key}</a></li>\n\t\t\t\t\t\t\t: <li key={key}><a href={'https://' + value}>{key}</a></li>\n\t\t\t\t\t\t: ' ')}\n\t\t\t\t</ul>\n\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport default ProfileIntro;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from '../../../redux/profileSelector';\nimport ProfileIntro from './ProfileIntro';\n\nclass ProfileIntroContainer extends React.Component {\n\trender = () => {\n\t\treturn <ProfileIntro userProfile={this.props.userProfile} />\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tuserProfile: getUserProfile(state)\n})\n\nexport default connect(mapStateToProps, {})(ProfileIntroContainer);","import React, { createElement, useState } from 'react'\nimport { Comment, Tooltip, Avatar } from 'antd'\nimport { UserPhotoPlaceholder } from '../../../elements/UserPhotoPlaceholder'\nimport { DislikeOutlined, LikeOutlined, DislikeFilled, LikeFilled } from '@ant-design/icons'\nimport s from './Post.module.css'\nimport style from '../../../../Style.module.css'\n\ntype PropsType = {\n\tmessage: string\n\tcounts: number\n\tphotoUrl: string | null\n}\n\nconst Post: React.FC<PropsType> = ({ message, counts, photoUrl }) => {\n\tconst [likes, setLikes] = useState(0)\n\tconst [dislikes, setDislikes] = useState(0)\n\tconst [action, setAction] = useState<'liked' | 'disliked' | null>(null)\n\n\tconst like = () => {\n\t\tsetLikes(1)\n\t\tsetDislikes(0)\n\t\tsetAction('liked')\n\t}\n\n\tconst dislike = () => {\n\t\tsetLikes(0)\n\t\tsetDislikes(1)\n\t\tsetAction('disliked')\n\t}\n\n\tconst actions = [\n\t\t<Tooltip key='comment-basic-like' title='Like'>\n\t\t\t<span onClick={like}>\n\t\t\t\t{createElement(action === 'liked' ? LikeFilled : LikeOutlined)}\n\t\t\t\t<span className='comment-action'>{likes}</span>\n\t\t\t</span>\n\t\t</Tooltip>,\n\t\t<Tooltip key='comment-basic-dislike' title='Dislike'>\n\t\t\t<span onClick={dislike}>\n\t\t\t\t{React.createElement(action === 'disliked' ? DislikeFilled : DislikeOutlined)}\n\t\t\t\t<span className='comment-action'>{dislikes}</span>\n\t\t\t</span>\n\t\t</Tooltip>,\n\t\t<span key='comment-basic-reply-to'>Reply to</span>,\n\t]\n\n\treturn (\n\t\t<div className={`${s.item} ${style.block}`}>\n\t\t\t<Comment\n\t\t\t\tactions={actions}\n\t\t\t\tauthor={<a>My name</a>}\n\t\t\t\tavatar={<Avatar size='large' src={photoUrl} icon={<UserPhotoPlaceholder />} />}\n\t\t\t\tcontent={<p>{message}</p>}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n\nexport default Post\n","import React from 'react'\nimport s from './MyPosts.module.css'\nimport Post from './Post/Post'\nimport style from '../../../Style.module.css'\nimport { PosteType } from '../../../redux/ProfileReducer'\nimport { Formik } from 'formik'\nimport { Input, Form, SubmitButton } from 'formik-antd'\n\ntype MyPostsPropsType = {\n\tposts: Array<PosteType>\n\taddPost: (postText: string) => void\n}\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\n\tconst submit = (values: { post: string }, { setSubmitting }: { setSubmitting: (isSubmitting: boolean) => void }) => {\n\t\tprops.addPost(values.post)\n\t\tsetSubmitting(false)\n\t}\n\n\tlet postsElement = props.posts\n\t\t.map((p) => <Post message={p.message} counts={p.likesCount} key={p.id} photoUrl={p.photoUrl} />)\n\t\t.reverse()\n\treturn (\n\t\t<>\n\t\t\t<div className={style.block}>\n\t\t\t\t<div className={style.blockName}>Add post</div>\n\t\t\t\t<Formik initialValues={{ post: '' }} onSubmit={submit}>\n\t\t\t\t\t{({ isSubmitting }) => (\n\t\t\t\t\t\t<Form\n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\tpadding: 20,\n\t\t\t\t\t\t\t\tpaddingRight: 20,\n\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t<div style={{ display: 'flex', alignItems: 'flex-end', flexDirection: 'column' }}>\n\t\t\t\t\t\t\t\t<Input.TextArea\n\t\t\t\t\t\t\t\t\tname='post'\n\t\t\t\t\t\t\t\t\tplaceholder='Your post'\n\t\t\t\t\t\t\t\t\tautoSize={{ minRows: 2, maxRows: 6 }}\n\t\t\t\t\t\t\t\t\tonPressEnter={() => submit}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SubmitButton style={{ marginTop: 10 }}>Add post</SubmitButton>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t)}\n\t\t\t\t</Formik>\n\t\t\t</div>\n\t\t\t<div className={s.posts}>{postsElement}</div>\n\t\t</>\n\t)\n}\n\nexport default MyPosts\n","import { actionsProfileReducer } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../../redux/profileSelector';\nimport { AppStateType } from '../../../redux/ReduxStore';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tposts: getPosts(state)\n\t}\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addPost: actionsProfileReducer.addPost })(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react'\nimport MyPostsContainer from './MyPosts/MyPostsContainer'\nimport s from './Profile.module.css'\n\nconst Profile = () => {\n\treturn (\n\t\t<div className={s.content}>\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t)\n}\n\nexport default Profile\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, withRouter } from 'react-router-dom'\nimport { compose } from 'redux'\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { getMiId } from '../../redux/authSelector'\nimport { getUser } from '../../redux/ProfileReducer'\nimport { getUserProfile } from '../../redux/profileSelector'\nimport { AppStateType } from '../../redux/ReduxStore'\nimport Profile from './Profile'\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchToProps = {\n\tgetUser: (userId: number) => void\n}\ntype PathParamsType = {\n\tuserId: string\n}\ntype PropsType = RouteComponentProps<PathParamsType> & MapStateToPropsType & MapDispatchToProps\n\nclass ProfileContainer extends React.Component<PropsType> {\n\trefreshProfile = () => {\n\t\tlet userId: number | null = +this.props.match.params.userId || this.props.miId\n\t\tthis.props.getUser(userId as number)\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.refreshProfile()\n\t}\n\n\tcomponentDidUpdate = (prevProps: PropsType) => {\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId) this.refreshProfile()\n\t}\n\n\trender = () => {\n\t\treturn <Profile />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tuserProfile: getUserProfile(state),\n\t\tmiId: getMiId(state),\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { getUser }),\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer)\n","import React from 'react'\nimport { Suspense } from 'react'\n\nfunction withSuspense<WSP>(Component: React.ComponentType<WSP>) {\n\treturn (props: WSP) => {\n\t\treturn (\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<Component {...props} />\n\t\t\t</Suspense>\n\t\t)\n\t}\n}\n\nexport default withSuspense\n","import Avatar from 'antd/lib/avatar/avatar'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { UserPhotoPlaceholder } from '../../../elements/UserPhotoPlaceholder'\n\ntype PropsType = {\n    url: string | null\n    name: string | null\n    userId: number | null\n}\n\nconst FriendItem: React.FC<PropsType> = (props) => {\n    return (\n        <NavLink to={`/profile/` + props.userId}>\n            <Avatar\n                size=\"large\"\n                src={props.url}\n                icon={<UserPhotoPlaceholder />}\n            />\n        </NavLink>\n    )\n}\n\nexport default FriendItem\n","import React, { useEffect } from 'react'\nimport s from './FriendsBlock.module.css'\nimport style from '../../../Style.module.css'\nimport FriendItem from './FriendItem/FriendItem'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AppStateType } from '../../../redux/ReduxStore'\nimport { Button, Space } from 'antd'\nimport { getFriends } from '../../../redux/SidebarReducer'\nimport { NavLink } from 'react-router-dom'\n\nconst FriendBlock = () => {\n\tlet friends = useSelector((state: AppStateType) => state.sidebar.friends)\n\tlet friendsCount = useSelector((state: AppStateType) => state.sidebar.friendsCount)\n\tconst dispatch = useDispatch()\n\tuseEffect(() => {\n\t\tdispatch(getFriends())\n\t}, [])\n\tconst friendsArr = friends.map((f) => <FriendItem url={f.photos.large} name={f.name} userId={f.id} key={f.id} />)\n\treturn (\n\t\t<div className={style.block}>\n\t\t\t<div className={style.blockName}>\n\t\t\t\t<span>Friends ({friendsCount})</span>\n\t\t\t</div>\n\t\t\t<Space className={s.container} size='small'>\n\t\t\t\t{friendsArr}\n\t\t\t\t<NavLink to={'/friends'}>\n\t\t\t\t\t<Button type='primary' shape='circle' size='large'>\n\t\t\t\t\t\t+{friendsCount - friends.length}\n\t\t\t\t\t</Button>\n\t\t\t\t</NavLink>\n\t\t\t</Space>\n\t\t</div>\n\t)\n}\n\nexport default FriendBlock\n","import React from 'react'\nimport { Redirect, Route, Switch, withRouter } from 'react-router-dom'\nimport './App.css'\nimport HeaderContainer from './components/Header/HeaderContainer'\nimport NavbarContainer from './components/Navbar/NavbarContainer'\nimport ProfileIntroContainer from './components/Sidebar/ProfileIntro/ProfileIntroContainer'\nimport ProfileContainer from './components/Profile/ProfileContainer'\nimport { connect } from 'react-redux'\nimport { initializeApp } from './redux/AppReducer'\nimport { compose } from 'redux'\nimport withSuspense from './hoc/withSuspense'\nimport { AppStateType } from './redux/ReduxStore'\nimport { Spin } from 'antd'\nimport FriendBlock from './components/Sidebar/FriendsBlock/FriendsBlock'\n\nconst LoginPage = React.lazy(() =>\n\timport('./components/Login/LoginPage').then(({ LoginPage }) => ({\n\t\tdefault: LoginPage,\n\t}))\n)\nconst ProfileInfoContainer = React.lazy(() => import('./components/ProfileInfo/ProfileInfoContainer'))\nconst Settings = React.lazy(() => import('./components/Settings/Settings'))\nconst FriendsPage = React.lazy(() => import('./components/FriendsPage/FriendsPage'))\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'))\nconst UsersPage = React.lazy(() => import('./components/Users/UsersPage'))\nconst ChatPage = React.lazy(() => import('./components/Chat/ChatPage'))\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchPropsType = {\n\tinitializeApp: () => void\n}\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedUsers = withSuspense(UsersPage)\nconst SuspendedChat = withSuspense(ChatPage)\nconst SuspendedLogin = withSuspense(LoginPage)\nconst SuspendedProfileInfo = withSuspense(ProfileInfoContainer)\n\nclass App extends React.Component<MapStatePropsType & MapDispatchPropsType> {\n\tcomponentDidMount = () => {\n\t\tthis.props.initializeApp()\n\t}\n\trender() {\n\t\tif (!this.props.initialized) {\n\t\t\treturn (\n\t\t\t\t<div className='example'>\n\t\t\t\t\t<Spin size='large' />\n\t\t\t\t</div>\n\t\t\t)\n\t\t}\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Route path='/login' render={() => <SuspendedLogin />} />\n\t\t\t\t<div>\n\t\t\t\t\t<HeaderContainer />\n\t\t\t\t\t<div className='app-wrapper'>\n\t\t\t\t\t\t<NavbarContainer />\n\t\t\t\t\t\t<div className='app-wrapper-content'>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path='/' render={() => <Redirect to='/profile' />} />\n\t\t\t\t\t\t\t\t<Route path='/dialogs' render={() => <SuspendedDialogs />} />\n\t\t\t\t\t\t\t\t<Route path='/profile/settings' render={() => <SuspendedProfileInfo />} />\n\t\t\t\t\t\t\t\t<Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n\t\t\t\t\t\t\t\t<Route path='/chat' render={() => <SuspendedChat />} />\n\t\t\t\t\t\t\t\t<Route path='/friends' render={withSuspense(FriendsPage)} />\n\t\t\t\t\t\t\t\t<Route path='/users' render={() => <SuspendedUsers />} />\n\t\t\t\t\t\t\t\t<Route path='/settings' render={withSuspense(Settings)} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='app-wrapper-right'>\n\t\t\t\t\t\t\t<ProfileIntroContainer />\n\t\t\t\t\t\t\t<FriendBlock />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tinitialized: state.app.initialized,\n})\n\nexport default compose<React.ComponentType>(withRouter, connect(mapStateToProps, { initializeApp }))(App)\n","import reportWebVitals from './reportWebVitals'\nimport Store from './redux/ReduxStore'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter, HashRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t{/* <BrowserRouter> */}\n\t\t\t<Provider store={Store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t\t{/* </BrowserRouter> */}\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import { AppStateType } from './ReduxStore'\n\nexport const getIsAuth = (state: AppStateType) => {\n\treturn state.auth.isAuth\n}\n\nexport const getCaptchaURL = (state: AppStateType) => {\n\treturn state.auth.captchaURL\n}\n\nexport const getMiId = (state: AppStateType) => {\n\treturn state.auth.userId\n}\n\nexport const getMiLogin = (state: AppStateType) => {\n\treturn state.auth.login\n}\n\nexport const getMiStatus = (state: AppStateType) => {\n\treturn state.auth.status\n}\n\nexport const getMiProfile = (state: AppStateType) => {\n\treturn state.auth.profile\n}\n\nexport const getMiFoolName = (state: AppStateType) => {\n\treturn state.auth.profile.fullName\n}\n\nexport const getMiPhotoSmall = (state: AppStateType) => {\n\treturn state.auth.profile.photos.small\n}\n\nexport const getMiPhotoLarge = (state: AppStateType) => {\n\treturn state.auth.profile.photos.large\n}\n\nexport const getLoadingStatus = (state: AppStateType) => {\n\treturn state.auth.isLoading\n}\n","import { instanceAxios, APIResponseType, ResultCodeEnum, ResultCodeForCaptcha } from './api'\n\ntype MiResponseType = {\n\tid: number\n\temail: string\n\tlogin: string\n}\ntype LoginResponseType = {\n\tuserId: number\n}\ntype CaptchaResponseType = {\n\turl: string\n}\n\nexport const authAPI = {\n\tgetAuth() {\n\t\treturn instanceAxios.get<APIResponseType<MiResponseType>>('/auth/me').then((response) => response.data)\n\t},\n\tlogIn(email: string, password: string, rememberMe = false, captcha: string | null = null) {\n\t\treturn instanceAxios\n\t\t\t.post<APIResponseType<LoginResponseType, ResultCodeEnum | ResultCodeForCaptcha>>('/auth/login', {\n\t\t\t\temail,\n\t\t\t\tpassword,\n\t\t\t\trememberMe,\n\t\t\t\tcaptcha,\n\t\t\t})\n\t\t\t.then((response) => response.data)\n\t},\n\tlogOut() {\n\t\treturn instanceAxios.delete<APIResponseType>('/auth/login').then((response) => response.data)\n\t},\n\tgetCaptcha() {\n\t\treturn instanceAxios.get<CaptchaResponseType>('/security/get-captcha-url').then((response) => response.data)\n\t},\n}\n","import { stopSubmit } from 'redux-form'\nimport { authAPI } from '../api/authAPI'\nimport { profileAPI } from '../api/profileAPI'\nimport { PhotosType, ProfileType } from '../type/type'\nimport { BaseThunkType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n\tuserId: null as number | null,\n\tlogin: null as string | null,\n\temail: null as string | null,\n\tcaptchaURL: null as string | null,\n\tisAuth: false,\n\tisLoading: false,\n\tstatus: null as string | null,\n\tprofile: {\n\t\taboutMe: null,\n\t\tlookingForAJob: null,\n\t\tlookingForAJobDescription: null,\n\t\tfullName: null,\n\t\tuserId: null,\n\t\tphotos: {\n\t\t\tsmall: null,\n\t\t\tlarge: null,\n\t\t},\n\t\tcontacts: {\n\t\t\tfacebook: null,\n\t\t\twebsite: null,\n\t\t\tvk: null,\n\t\t\ttwitter: null,\n\t\t\tinstagram: null,\n\t\t\tyoutube: null,\n\t\t\tgithub: null,\n\t\t\tmainLink: null,\n\t\t},\n\t} as ProfileType,\n}\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'auth_USER_AUTH':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.data,\n\t\t\t}\n\t\tcase 'auth_SET_CAPTCHA_URL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcaptchaURL: action.captchaURL,\n\t\t\t}\n\t\tcase 'auth_USER_PROFILE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile,\n\t\t\t}\n\t\tcase 'auth_SET_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status,\n\t\t\t}\n\t\tcase 'auth_SET_LOADING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: action.isLoading,\n\t\t\t}\n\t\tcase 'auth_SET_USER_PHOTO_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: { ...state.profile, photos: action.photos },\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsAuthReducer = {\n\tsetAuthUserData: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) =>\n\t\t({\n\t\t\ttype: 'auth_USER_AUTH',\n\t\t\tdata: { userId, login, email, isAuth },\n\t\t} as const),\n\tsetMiStatus: (status: string) => ({ type: 'auth_SET_STATUS', status } as const),\n\tsetMiProfile: (profile: ProfileType) => ({ type: 'auth_USER_PROFILE', profile } as const),\n\tsetLoading: (isLoading: boolean) => ({ type: 'auth_SET_LOADING', isLoading } as const),\n\tsetUserPhotoSuccess: (photos: PhotosType) => ({ type: 'auth_SET_USER_PHOTO_SUCCESS', photos } as const),\n\tsetCaptchaURL: (captchaURL: string | null) => ({ type: 'auth_SET_CAPTCHA_URL', captchaURL } as const),\n}\n\nexport const getAuth = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsAuthReducer.setCaptchaURL(null))\n\t\tconst miData = await authAPI.getAuth()\n\n\t\tif (miData.resultCode === 0) {\n\t\t\tlet { id, login, email } = miData.data\n\t\t\tdispatch(actionsAuthReducer.setAuthUserData(id, login, email, true))\n\n\t\t\tconst userData = await profileAPI.getUserProfile(id)\n\n\t\t\tdispatch(actionsAuthReducer.setMiProfile(userData))\n\n\t\t\tconst userStatus = await profileAPI.getStatus(id)\n\n\t\t\tdispatch(actionsAuthReducer.setMiStatus(userStatus))\n\t\t}\n\t}\n}\n\nexport const setStatus = (status: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsAuthReducer.setLoading(true))\n\n\t\tconst response = await profileAPI.setStatus(status)\n\n\t\tdispatch(actionsAuthReducer.setLoading(false))\n\t\tif (response.resultCode !== 0) return\n\t\tdispatch(actionsAuthReducer.setMiStatus(status))\n\t}\n}\n\nexport const logIn = (email: string, password: string, rememberMe: boolean, captchaCode: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tconst response = await authAPI.logIn(email, password, rememberMe, captchaCode)\n\n\t\tif (response.resultCode === 0) {\n\t\t\tdispatch(getAuth())\n\t\t} else {\n\t\t\tif (response.resultCode === 10) {\n\t\t\t\tconst captcha = await authAPI.getCaptcha()\n\t\t\t\tdispatch(actionsAuthReducer.setCaptchaURL(captcha.url))\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdispatch(stopSubmit('login', { _error: response.messages }))\n\t\t}\n\t}\n}\n\nexport const logOut = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tconst response = await authAPI.logOut()\n\n\t\tif (response.resultCode !== 0) return\n\t\tdispatch(actionsAuthReducer.setAuthUserData(null, null, null, false))\n\t}\n}\n\nexport const setUserPhoto = (file: File): ThunkType => {\n\treturn async (dispatch) => {\n\t\tconst response = await profileAPI.setPhoto(file)\n\n\t\tif (response.resultCode === 0) {\n\t\t\tdispatch(actionsAuthReducer.setUserPhotoSuccess(response.data.photos))\n\t\t}\n\t}\n}\n\nexport default authReducer\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsAuthReducer>\ntype ThunkType = BaseThunkType<ActionsType>\n","import { AppStateType } from './ReduxStore'\n\nexport const getUserProfile = (state: AppStateType) => {\n\treturn state.profilePage.userProfile\n}\n\nexport const getPosts = (state: AppStateType) => {\n\treturn state.profilePage.posts\n}\n\nexport const getUserName = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.fullName\n}\n\nexport const getUserId = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.userId\n}\n\nexport const getUserStatus = (state: AppStateType) => {\n\treturn state.profilePage.userStatus\n}\n\nexport const getUserSmallPhoto = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.photos.small\n}\n\nexport const getUserLargePhoto = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.photos.large\n}\n\nexport const getUserAboutMe = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.aboutMe\n}\n\nexport const getMiProfileFetching = (state: AppStateType) => {\n\treturn state.profilePage.isFetching\n}\n","import { FilterType } from './../redux/UsersReducer'\nimport { PhotosType } from '../type/type'\nimport { instanceAxios, APIResponseType } from './api'\n\ntype UserType = {\n\tname: string\n\tid: number\n\tphotos: PhotosType\n\tstatus: string | null\n\tfollowed: boolean\n}\ntype UsersResponseType = {\n\titems: Array<UserType>\n\ttotalCount: number\n\terror: string | null\n}\n\nexport const usersAPI = {\n\tgetUsers(usersCountOnPage = 9, currentPage = 1, filter: FilterType = { term: '', friend: null }) {\n\t\treturn instanceAxios\n\t\t\t.get<UsersResponseType>(\n\t\t\t\t`/users?count=${usersCountOnPage}&page=${currentPage}&term=${filter.term}&friend=${\n\t\t\t\t\tfilter.friend === null ? '' : filter.friend\n\t\t\t\t}`\n\t\t\t)\n\t\t\t.then((response) => response.data)\n\t},\n\tfollow(id: number) {\n\t\treturn instanceAxios.post<APIResponseType>(`/follow/${id}`).then((response) => response.data)\n\t},\n\tunfollow(id: number) {\n\t\treturn instanceAxios.delete<APIResponseType>(`/follow/${id}`).then((response) => response.data)\n\t},\n}\n","import { PhotosType, ProfileType } from '../type/type'\nimport { instanceAxios, APIResponseType } from './api'\n\ntype SetPhotoResponseData = {\n\tphotos: PhotosType\n}\n\nexport const profileAPI = {\n\tgetUserProfile(userId: number) {\n\t\treturn instanceAxios.get<ProfileType>(`/profile/` + userId).then((response) => response.data)\n\t},\n\tgetStatus(userId: number) {\n\t\treturn instanceAxios.get<string>(`/profile/status/` + userId).then((response) => response.data)\n\t},\n\tsetStatus(status: string) {\n\t\treturn instanceAxios.put<APIResponseType>('/profile/status', { status }).then((response) => response.data)\n\t},\n\tsetProfileData(profileData: ProfileType) {\n\t\treturn instanceAxios.put<APIResponseType>('/profile', profileData).then((response) => response.data)\n\t},\n\tsetPhoto(filePhoto: File) {\n\t\tconst formData = new FormData()\n\t\tformData.append('image', filePhoto)\n\t\treturn instanceAxios\n\t\t\t.put<APIResponseType<SetPhotoResponseData>>('/profile/photo', formData, {\n\t\t\t\theaders: {\n\t\t\t\t\t'content-type': 'multipart/form-data',\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((response) => response.data)\n\t},\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ProfileMenu_menu__15f_3\",\"menuContainer\":\"ProfileMenu_menuContainer__29BGD\",\"menuName\":\"ProfileMenu_menuName__2npTl\",\"menuList\":\"ProfileMenu_menuList__3gtY6\",\"menuLink\":\"ProfileMenu_menuLink__3tump\",\"signOut\":\"ProfileMenu_signOut__1xqKi\",\"statusChange\":\"ProfileMenu_statusChange__iQCE8\"};","import { stopSubmit } from 'redux-form'\nimport { ThunkAction } from 'redux-thunk'\nimport { profileAPI } from '../api/profileAPI'\nimport { ProfileType } from '../type/type'\nimport { actionsAuthReducer } from './AuthReducer'\nimport { AppStateType, InferActionsTypes } from './ReduxStore'\n\nlet initialState = {\n\tposts: [\n\t\t{\n\t\t\tid: 1,\n\t\t\tphotoUrl: null,\n\t\t\tmessage: \"Hi! It's my first post in my social network\",\n\t\t\tlikesCount: 1,\n\t\t},\n\t\t{ id: 2, message: 'test next message', photoUrl: null, likesCount: 2 },\n\t] as Array<PosteType>,\n\tuserProfile: {\n\t\tuserId: null,\n\t\tfullName: null,\n\t\taboutMe: null,\n\t\tlookingForAJob: false,\n\t\tlookingForAJobDescription: null,\n\t\tphotos: {\n\t\t\tsmall: null,\n\t\t\tlarge: null,\n\t\t},\n\t\tcontacts: {\n\t\t\tfacebook: null,\n\t\t\twebsite: null,\n\t\t\tvk: null,\n\t\t\ttwitter: null,\n\t\t\tinstagram: null,\n\t\t\tyoutube: null,\n\t\t\tgithub: null,\n\t\t\tmainLink: null,\n\t\t},\n\t} as ProfileType,\n\tuserStatus: null as string | null,\n\tisFetching: false,\n}\n\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'profileAction_ADD_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [\n\t\t\t\t\t...state.posts,\n\t\t\t\t\t{\n\t\t\t\t\t\tid: ++state.posts.length,\n\t\t\t\t\t\tphotoUrl: null,\n\t\t\t\t\t\tmessage: action.postText,\n\t\t\t\t\t\tlikesCount: 0,\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t}\n\t\tcase 'profileAction_DELETE_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter((p) => p.id !== action.postId),\n\t\t\t}\n\t\tcase 'profileAction_SET_USER_PROFILE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserProfile: action.userProfile,\n\t\t\t}\n\t\tcase 'profileAction_SET_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.fetching,\n\t\t\t}\n\t\tcase 'profileAction_SET_USER_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserStatus: action.status,\n\t\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport const actionsProfileReducer = {\n\taddPost: (postText: string) => ({ type: 'profileAction_ADD_POST', postText } as const),\n\tdeletePost: (postId: number) => ({ type: 'profileAction_DELETE_POST', postId } as const),\n\tsetUserStatus: (status: string) => ({ type: 'profileAction_SET_USER_STATUS', status } as const),\n\tsetUserProfile: (userProfile: ProfileType) => ({ type: 'profileAction_SET_USER_PROFILE', userProfile } as const),\n\tsetFetching: (fetching: boolean) => ({ type: 'profileAction_SET_FETCHING', fetching } as const),\n}\n\nexport const getUser = (userId: number): ThunkType => {\n\treturn async (dispatch: any) => {\n\t\tconst userProfile = await profileAPI.getUserProfile(userId)\n\t\tdispatch(actionsProfileReducer.setUserProfile(userProfile))\n\n\t\tconst userStatus = await profileAPI.getStatus(userId)\n\t\tdispatch(actionsProfileReducer.setUserStatus(userStatus))\n\t}\n}\n\nexport const setProfileData = (profileData: ProfileType): ThunkType => {\n\treturn async (dispatch: any, getState: any) => {\n\t\tconst userId = getState().auth.userId\n\t\tdispatch(actionsProfileReducer.setFetching(true))\n\t\tconst response = await profileAPI.setProfileData(profileData)\n\t\tif (response.resultCode === 0) {\n\t\t\tconst miData = await profileAPI.getUserProfile(userId)\n\t\t\tdispatch(actionsAuthReducer.setMiProfile(miData))\n\t\t} else {\n\t\t\tlet contactsError = new Map()\n\t\t\tlet otherError = new Map()\n\t\t\tresponse.messages.forEach((element: string) => {\n\t\t\t\tlet key = element.slice(element.indexOf('Contacts->') + 10, element.length - 1).toLowerCase()\n\t\t\t\tlet value = element.slice(0, element.indexOf('(Contacts->') - 1)\n\t\t\t\tif (element.includes('Contacts->')) {\n\t\t\t\t\tcontactsError.set(key, value)\n\t\t\t\t} else {\n\t\t\t\t\totherError.set('_error', element)\n\t\t\t\t}\n\t\t\t})\n\t\t\tdispatch(\n\t\t\t\tstopSubmit('ProfileInfo', {\n\t\t\t\t\t...Object.fromEntries(otherError),\n\t\t\t\t\tcontacts: Object.fromEntries(contactsError),\n\t\t\t\t})\n\t\t\t)\n\t\t}\n\t\tdispatch(actionsProfileReducer.setFetching(false))\n\t}\n}\n\nexport default profileReducer\n\nexport type PosteType = {\n\tid: number\n\tmessage: string\n\tphotoUrl: string | null\n\tlikesCount: number\n}\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsProfileReducer>\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>\n","import React from 'react'\nimport userPhoto from '../../assets/images/user.jpg'\n\nexport const UserPhotoPlaceholder = () => {\n\treturn (\n\t\t<div>\n\t\t\t<img src={userPhoto} alt='userPhoto placeholder' style={{ height: '100%', width: '100%', marginTop: -10 }} />\n\t\t</div>\n\t)\n}\n"],"sourceRoot":""}