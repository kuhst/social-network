{"version":3,"sources":["components/Dialogs/Dialogs.module.css","redux/dialogsSelector.ts","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/MessageItem.jsx","components/Dialogs/Message/MessageAdd.tsx","components/Dialogs/Message/MessageAddContainer.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","getDialogsData","state","dialogsPage","dialogsData","getMessages","messages","DialogItem","props","path","id","className","s","dialog","avatar","src","alt","to","name","MessageItem","message","from","mi","friend","MessageReduxForm","reduxForm","form","onSubmit","handleSubmit","messageAdd","createField","Textarea","BigButton","value","MessageAdd","formData","addMessage","textMessage","MessageAddContainer","connect","Dialogs","dialogsElements","map","d","messagesElements","m","dialogs","style","block","dialogItems","compose","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,QAAU,yBAAyB,GAAK,oBAAoB,OAAS,wBAAwB,OAAS,wBAAwB,OAAS,wBAAwB,WAAa,8B,qECCpSC,EAAiB,SAACC,GAC9B,OAAOA,EAAMC,YAAYC,aAGbC,EAAc,SAACH,GAC3B,OAAOA,EAAMC,YAAYG,U,yDCeXC,EAZyB,SAACC,GACxC,IAAIC,EAAO,YAAcD,EAAME,GAC/B,OACC,sBAAKC,UAAWC,IAAEC,OAAlB,UACC,qBAAKF,UAAWC,IAAEE,OAAlB,SACC,qBAAKC,IAAKP,EAAMM,OAAQE,IAAI,aAE7B,cAAC,IAAD,CAASC,GAAIR,EAAb,SAAoBD,EAAMU,WCNdC,EARK,SAACX,GACpB,OACC,qBAAKG,UAAWC,IAAEQ,QAAU,KAAuB,OAAfZ,EAAMa,KAAiBT,IAAEU,GAAKV,IAAEW,QAApE,SACEf,EAAMY,W,oCCuBJI,EAAmBC,YAA+C,CACpEC,KAAM,iBADeD,EAdrB,SAACjB,GACD,OACI,uBAAMmB,SAAUnB,EAAMoB,aAAcjB,UAAWC,IAAEiB,WAAjD,UACKC,YACG,GACA,cACA,GACAC,KAEJ,cAACC,EAAA,EAAD,CAAWC,MAAM,eAuBdC,EAXkC,SAAC1B,GAI9C,OACI,8BACI,cAACgB,EAAD,CAAkBG,SALX,SAACQ,GACZ3B,EAAM4B,WAAWD,EAASE,mBCxBnBC,EAFaC,aANJ,SAACrC,GACxB,MAAO,CACNE,YAAaF,EAAMC,eAIgC,CAAEiC,gBAA3BG,CAAyCL,GCwBtDM,EAzBsB,SAAChC,GACrC,IAAIiC,EAAkBjC,EAAMJ,YAAYsC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAChDzB,KAAMyB,EAAEzB,KACRR,GAAIiC,EAAEjC,GAENI,OAAQ6B,EAAE7B,QADL6B,EAAEjC,OAGJkC,EAAmBpC,EAAMF,SAASoC,KAAI,SAAAG,GAAC,OAAI,cAAC,EAAD,CAC9CzB,QAASyB,EAAEzB,QACXC,KAAMwB,EAAExB,MACHwB,EAAEnC,OAER,OACC,sBAAKC,UAAWC,IAAEkC,QAAU,IAAMC,IAAMC,MAAxC,UACC,qBAAKrC,UAAWC,IAAEqC,YAAlB,SACER,IAEF,sBAAK9B,UAAWC,IAAEN,SAAlB,UACEsC,EACD,cAAC,EAAD,WCdWM,sBACdX,aARuB,SAACrC,GACxB,MAAO,CACNE,YAAaH,EAAeC,GAC5BI,SAAUD,EAAYH,MAKE,IACzBiD,IAFcD,CAGbV","file":"static/js/8.865c91b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\",\"mi\":\"Dialogs_mi__QvIS0\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"active\":\"Dialogs_active__2sQhs\",\"avatar\":\"Dialogs_avatar__1hg1l\",\"messageAdd\":\"Dialogs_messageAdd__1Zkw-\"};","import { AppStateType } from \"./ReduxStore\";\n\nexport const getDialogsData = (state: AppStateType) => {\n\treturn state.dialogsPage.dialogsData;\n}\n\nexport const getMessages = (state: AppStateType) => {\n\treturn state.dialogsPage.messages;\n}","import React from 'react';\nimport s from './../Dialogs.module.css'\nimport { NavLink } from 'react-router-dom';\n\ntype PropsType = {\n\tid: number\n\tavatar: string\n\tname: string\n}\n\nconst DialogItem: React.FC<PropsType> = (props) => {\n\tlet path = '/dialogs/' + props.id;\n\treturn (\n\t\t<div className={s.dialog}>\n\t\t\t<div className={s.avatar}>\n\t\t\t\t<img src={props.avatar} alt='avatar'></img>\n\t\t\t</div>\n\t\t\t<NavLink to={path}>{props.name}</NavLink>\n\t\t</div >\n\t)\n}\n\nexport default DialogItem;","import React from 'react';\nimport s from './../Dialogs.module.css'\n\nconst MessageItem = (props) => {\n\treturn (\n\t\t<div className={s.message + ' ' + ((props.from === 'mi') ? s.mi : s.friend)}>\n\t\t\t{props.message}\n\t\t</div>\n\t)\n}\n\nexport default MessageItem;","import React from 'react'\nimport BigButton from '../../elements/BigButton'\nimport s from './../Dialogs.module.css'\nimport { InjectedFormProps, reduxForm } from 'redux-form'\nimport { createField, Textarea } from '../../elements/FormsControls'\n\ntype NewMessageFormValuesType = {\n    textMessage: string\n}\ntype PropsType = {}\n\ntype NewMessageFormValuesTypeKeys = keyof NewMessageFormValuesType\n\nconst MessageForm: React.FC<\n    InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType\n> = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit} className={s.messageAdd}>\n            {createField<NewMessageFormValuesTypeKeys>(\n                '',\n                'textMessage',\n                [],\n                Textarea\n            )}\n            <BigButton value=\"Sent\" />\n        </form>\n    )\n}\n\nconst MessageReduxForm = reduxForm<NewMessageFormValuesType, PropsType>({\n    form: 'DialogMessage',\n})(MessageForm)\n\ntype MapDispatchToProps = {\n    addMessage: (message: string) => void\n}\nconst MessageAdd: React.FC<MapDispatchToProps> = (props) => {\n    let onSubmit = (formData: NewMessageFormValuesType) => {\n        props.addMessage(formData.textMessage)\n    }\n    return (\n        <div>\n            <MessageReduxForm onSubmit={onSubmit} />\n        </div>\n    )\n}\n\nexport default MessageAdd\n","import { addMessage } from '../../../redux/DialogsReducer';\nimport MessageAdd from './MessageAdd';\nimport { connect } from 'react-redux';\nimport { AppStateType } from '../../../redux/ReduxStore';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tdialogsData: state.dialogsPage,\n\t}\n};\n\nconst MessageAddContainer = connect(mapStateToProps, { addMessage })(MessageAdd);\n\nexport default MessageAddContainer;","import React from 'react';\nimport s from './Dialogs.module.css'\nimport style from '../../Style.module.css'\nimport DialogItem from './DialogItem/DialogItem';\nimport MessageItem from './Message/MessageItem';\nimport MessageAddContainer from './Message/MessageAddContainer';\nimport { InitialStateType } from '../../redux/DialogsReducer';\n\n\ntype PropsType = InitialStateType\n\nconst Dialogs: React.FC<PropsType> = (props) => {\n\tlet dialogsElements = props.dialogsData.map(d => <DialogItem\n\t\tname={d.name}\n\t\tid={d.id}\n\t\tkey={d.id}\n\t\tavatar={d.avatar}\n\t/>);\n\tlet messagesElements = props.messages.map(m => <MessageItem\n\t\tmessage={m.message}\n\t\tfrom={m.from}\n\t\tkey={m.id}\n\t/>);\n\treturn (\n\t\t<div className={s.dialogs + ' ' + style.block}>\n\t\t\t<div className={s.dialogItems}>\n\t\t\t\t{dialogsElements}\n\t\t\t</div>\n\t\t\t<div className={s.messages}>\n\t\t\t\t{messagesElements}\n\t\t\t\t<MessageAddContainer />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Dialogs;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { getDialogsData, getMessages } from '../../redux/dialogsSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\nimport Dialogs from './Dialogs';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tdialogsData: getDialogsData(state),\n\t\tmessages: getMessages(state),\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, {}),\n\twithAuthRedirect\n)(Dialogs)"],"sourceRoot":""}