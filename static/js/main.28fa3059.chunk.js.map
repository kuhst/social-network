{"version":3,"sources":["components/elements/BigButton.tsx","assets/images/preloaderCircle.svg","components/elements/Preloader.jsx","Style.module.css","redux/DialogsReducer.ts","hoc/withAuthRedirect.tsx","api/usersAPI.ts","utils/objectsHelper.ts","redux/UsersReducer.ts","components/Navbar/Navbar.module.css","components/Sidebar/ProfileIntro/ProfileIntro.module.css","components/Profile/MyPosts/Post/Post.module.css","components/elements/Preloader.module.css","components/Header/Header.module.css","api/api.ts","redux/profileSelector.ts","redux/authSelector.ts","api/authAPI.ts","redux/AuthReducer.ts","reportWebVitals.js","redux/SidebarReducer.ts","redux/AppReducer.ts","redux/ReduxStore.ts","assets/images/user.jpg","assets/images/preloaderPoint.svg","components/Header/ProfileMenu/ProfileMenu.tsx","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Navbar/MenuItem.tsx","assets/images/sliders.svg","components/Navbar/Navbar.tsx","components/Navbar/NavbarContainer.tsx","components/Sidebar/FriendsBlock/FriendItem/FriendItem.jsx","components/Sidebar/FriendsBlock/FriendsBlock.jsx","components/Sidebar/FriendsBlock/FriendsBlockContainer.jsx","components/Sidebar/ProfileIntro/ProfileIntro.jsx","components/Sidebar/ProfileIntro/ProfileIntroContainer.jsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","hoc/withSuspense.tsx","App.tsx","index.tsx","api/profileAPI.ts","components/Header/ProfileMenu/ProfileMenu.module.css","redux/ProfileReducer.ts","components/elements/FormsControls.module.css","components/Sidebar/FriendsBlock/FriendsBlock.module.css","components/elements/FormsControls.tsx","components/Profile/MyPosts/MyPosts.module.css","components/elements/BigButton.module.css"],"names":["BigButton","value","click","disabled","className","s","button","cancel","onClick","Preloader","preloader","src","alt","module","exports","initialState","dialogsData","id","name","avatar","messages","message","from","actionsDialogReducer","type","addMessage","dispatch","a","dialogsReducer","state","action","length","mapStateToProps","isAuth","auth","withAuthRedirect","Component","connect","props","restProps","to","usersAPI","getUsers","usersCountOnPage","currentPage","filter","term","friend","instanceAxios","get","then","response","data","follow","post","unfollow","delete","objectsHelper","items","objPropName","newObjProps","map","u","users","usersCount","isFetching","followingInProgress","actionsUsersReducer","userId","pageNumber","isFollowing","responseUsers","totalCount","_followUnfollow","userID","apiMethod","actionCreator","resultCode","bind","usersReducer","followed","ResultCodeEnum","ResultCodeForCaptcha","axios","create","withCredentials","headers","baseURL","getUserProfile","profilePage","userProfile","getUserFriends","sidebar","friends","getPosts","posts","getUserName","fullName","getUserId","getUserStatus","userStatus","getUserSmallPhoto","photos","small","getMiProfileFetching","getIsAuth","getCaptchaURL","captchaURL","getMiId","getMiStatus","status","getMiProfile","profile","getMiFoolName","getMiPhotoSmall","getLoadingStatus","isLoading","authAPI","email","password","rememberMe","captcha","login","aboutMe","lookingForAJob","lookingForAJobDescription","large","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","actionsAuthReducer","setAuthUserData","setMiStatus","setMiProfile","setLoading","setUserPhotoSuccess","setCaptchaURL","getAuth","miData","profileAPI","userData","getStatus","setStatus","logIn","captchaCode","url","stopSubmit","_error","logOut","setUserPhoto","file","setPhoto","authReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","sidebarReducer","initialized","actionsAppReducer","appReducer","rootReducers","combineReducers","dialogsPage","profileReducer","usersPage","app","form","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ProfileMenu","React","memo","useState","useEffect","menu","style","block","menuContainer","menuName","menuList","menuLink","signOut","statusChange","onChange","e","currentTarget","autoFocus","placeholder","undefined","Header","preloaderImage","statusBlock","user","userPhoto","photo","controlBlock","miName","loading","header","container","logo","mainName","secondName","freeSpace","search","comingSoon","HeaderContainer","render","MenuItem","item","link","activeClassName","activeLink","toUpperCase","slice","Navbar","onPhotoChange","event","target","files","photoUrl","this","forInitialized","index","nav","wallpaper","menuLeft","userName","splice","Math","ceil","userBlock","menuRight","isMiProfile","photoUpload","iconSliders","menuPhoto","label","uploadFileText","uploadFileInput","NavbarContainer","miId","componentDidUpdate","miStatus","getUser","withRouter","FriendItem","FriendBlock","f","blockName","ProfileIntro","Object","entries","key","toLowerCase","startsWith","href","ProfileIntroContainer","Post","counts","NewPostReduxForm","reduxForm","onSubmit","handleSubmit","newPosteBlock","createField","Textarea","MyPosts","postsElement","p","likesCount","reverse","formData","addPost","postText","MyPostsContainer","actionsProfileReducer","Profile","content","ProfileContainer","refreshProfile","match","params","componentDidMount","prevProps","withSuspense","fallback","Login","lazy","ProfileInfoContainer","News","Settings","Music","DialogsContainer","UsersContainer","SuspendedDialogs","SuspendedUsers","SuspendedLogin","SuspendedProfileInfo","App","initializeApp","path","exact","FriendsBlockContainer","promise","Promise","all","ReactDOM","StrictMode","Store","document","getElementById","put","setProfileData","profileData","filePhoto","FormData","append","deletePost","postId","setUserStatus","setUserProfile","setFetching","fetching","getState","contactsError","Map","otherError","forEach","element","indexOf","includes","set","fromEntries","Element","meta","input","hasErr","touched","error","inputContainer","description","errorMessage","Input","validators","component","validate"],"mappings":"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","file":"static/js/main.28fa3059.chunk.js","sourcesContent":["import React from 'react';\nimport s from './BigButton.module.css';\n\ntype PropsType = {\n\tvalue: string\n\tdisabled?: boolean\n\n\tclick?: () => void\n}\n\nconst BigButton: React.FC<PropsType> = ({ value, click, disabled }) => {\n\treturn (\n\t\t<div >\n\t\t\t<button className={s.button + ' ' + (value === 'Cancel' ? s.cancel : '')} onClick={click} disabled={disabled}>{value}</button>\n\t\t</div >\n\t)\n}\n\nexport default BigButton;\n\n","export default __webpack_public_path__ + \"static/media/preloaderCircle.c32a7a57.svg\";","import React from 'react';\nimport preloader from '../../assets/images/preloaderCircle.svg';\nimport s from './Preloader.module.css'\n\nconst Preloader = () => {\n\treturn (\n\t\t<div className={s.preloader}>\n\t\t\t<img src={preloader} alt='Preloader' />\n\t\t</div>\n\t)\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Style_container__2zXzS\",\"block\":\"Style_block__2NKmM\",\"blockName\":\"Style_blockName__1y7Ic\",\"comingSoon\":\"Style_comingSoon__1sOMO\",\"errorSubmitForm\":\"Style_errorSubmitForm__1L_4y\"};","import { ThunkAction } from \"redux-thunk\";\nimport { AppStateType, InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tdialogsData: [\n\t\t{ id: 1, name: 'Perec', avatar: 'https://i0.wp.com/7youtube.ru/wp-content/uploads/2017/01/dmdmdmddsaaaa.jpg' },\n\t\t{ id: 2, name: 'Vasia', avatar: 'http://cs622426.vk.me/v622426834/409d/baLqspYwi84.jpg' },\n\t\t{ id: 3, name: 'Vova', avatar: 'https://ispolnu.ru/uploads/services/20180618/1529316303dbca.jpg' },\n\t\t{ id: 4, name: 'Anton', avatar: 'https://discordgid.ru/wp-content/uploads/2020/03/diskord-avatar.jpg' },\n\t] as Array<DialogType>,\n\tmessages: [\n\t\t{ id: 1, message: 'hi!', from: 'friend' },\n\t\t{ id: 2, message: 'How is your programing?', from: 'friend' },\n\t\t{ id: 3, message: 'Ok', from: 'mi' },\n\t\t{ id: 4, message: 'Cool!', from: 'friend' },\n\t\t{ id: 5, message: 'Some log message. skfjnvksv sdoiv csodifvjc skdjvn sdfcjvsfldkv dsfkv dfkjnvd kfjvnd', from: 'mi' },\n\t] as Array<MessageType>,\n}\n\nconst dialogsReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'ADD_MESSAGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmessages: [...state.messages, {\n\t\t\t\t\tid: ++state.messages.length,\n\t\t\t\t\tmessage: action.message,\n\t\t\t\t\tfrom: 'mi',\n\t\t\t\t}],\n\t\t\t}\n\t\tdefault: return state;\n\t};\n};\n\n\n\nexport const actionsDialogReducer = {\n\taddMessageAC: (message: string) => ({ type: 'ADD_MESSAGE', message })\n}\n\n\nexport const addMessage = (message: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsDialogReducer.addMessageAC(message));\n\t}\n}\n\nexport default dialogsReducer;\n\n\ntype DialogType = {\n\tid: number\n\tname: string\n\tavatar: string\n}\ntype MessageType = {\n\tid: number\n\tmessage: string\n\tfrom: 'mi' | 'friend'\n}\nexport type InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsDialogReducer>\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { AppStateType } from \"../redux/ReduxStore\";\n\ntype MapStatePropsType = {\n\tisAuth: boolean\n}\ntype MapDispatchPropsType = {\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: state.auth.isAuth,\n})\n\nexport function withAuthRedirect<WCP>(Component: React.ComponentType<WCP>) {\n\n\tconst RedirectComponent: React.FC<MapStatePropsType & MapStatePropsType> = (props) => {\n\t\tlet { isAuth, ...restProps } = props\n\t\tif (!isAuth) return <Redirect to='/login' />;\n\t\treturn <Component {...restProps as WCP} />\n\n\t}\n\n\t// const connectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\n\n\treturn connect<MapStatePropsType, MapDispatchPropsType, WCP, AppStateType>(mapStateToProps, {})(RedirectComponent);\n}","import { FilterType } from './../redux/UsersReducer';\nimport { PhotosType } from \"../type/type\";\nimport { instanceAxios, APIResponseType } from \"./api\";\n\ntype UserType = {\n\tname: string\n\tid: number\n\tphotos: PhotosType\n\tstatus: string | null\n\tfollowed: boolean\n}\ntype UsersResponseType = {\n\titems: Array<UserType>\n\ttotalCount: number\n\terror: string | null\n}\n\nexport const usersAPI = {\n\tgetUsers(usersCountOnPage = 9, currentPage = 1, filter: FilterType = {term: '', friend: ''}) {\n\t\treturn instanceAxios.get<UsersResponseType>(`/users?count=${usersCountOnPage}&page=${currentPage}&term=${filter.term}&friend=${filter.friend}`)\n\t\t\t.then(response => response.data)\n\t},\n\tfollow(id: number) {\n\t\treturn instanceAxios.post<APIResponseType>(`/follow/${id}`)\n\t\t\t.then(response => response.data)\n\t},\n\tunfollow(id: number) {\n\t\treturn instanceAxios.delete<APIResponseType>(`/follow/${id}`)\n\t\t\t.then(response => response.data)\n\t}\n};","export const objectsHelper = (items: any, action: any, objPropName: any, newObjProps: any) => {\n\treturn items.map((u: any) => (u[objPropName] === action) ? { ...u, ...newObjProps } : u)\n}","import { BaseThunkType, InferActionsTypes } from './ReduxStore';\nimport { Dispatch } from \"redux\";\nimport { usersAPI } from \"../api/usersAPI\";\nimport { UserType } from \"../type/type\";\nimport { objectsHelper } from \"../utils/objectsHelper\";\nimport { APIResponseType } from '../api/api';\n\nlet initialState = {\n\tusers: [] as Array<UserType>,\n\tusersCount: 0,\n\tusersCountOnPage: 12,\n\tcurrentPage: 1,\n\tisFetching: false,\n\tfollowingInProgress: [] as Array<number>,\n\tfilter: {\n\t\tterm: '',\n\t\tfriend: '' as '' | 'true' | 'false'\n\t}\n}\n\nconst usersReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'FOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: objectsHelper(state.users, action.userId, \"id\", { followed: true }),\n\t\t\t}\n\t\tcase 'UNFOLLOW':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: objectsHelper(state.users, action.userId, \"id\", { followed: false }),\n\t\t\t}\n\t\tcase 'SET_USERS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusers: action.users,\n\t\t\t}\n\t\tcase 'SET_PAGE_NUMBER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrentPage: action.pageNumber,\n\t\t\t}\n\t\tcase 'SET_USERS_COUNT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tusersCount: action.usersCount,\n\t\t\t}\n\t\tcase 'SET_FILTER':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilter: action.filter,\n\t\t\t}\n\t\tcase 'SET_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.isFetching,\n\t\t\t}\n\t\tcase 'TOGGLE_IS_FOLLOWING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfollowingInProgress: action.isFollowing\n\t\t\t\t\t? [...state.followingInProgress, action.userId]\n\t\t\t\t\t: state.followingInProgress.filter(id => id !== action.userId)\n\t\t\t}\n\t\tdefault: return state;\n\t};\n};\n\n\nexport const actionsUsersReducer = {\n\tfollowSuccess: (userId: number) => ({ type: 'FOLLOW', userId } as const),\n\tunfollowSuccess: (userId: number) => ({ type: 'UNFOLLOW', userId } as const),\n\tsetUsers: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\n\tsetFilter: (filter: FilterType) => ({ type: 'SET_FILTER', filter } as const),\n\tsetPageToCurrent: (pageNumber: number) => ({ type: 'SET_PAGE_NUMBER', pageNumber } as const),\n\tsetUsersCount: (usersCount: number) => ({ type: 'SET_USERS_COUNT', usersCount } as const),\n\tsetFetching: (isFetching: boolean) => ({ type: 'SET_FETCHING', isFetching } as const),\n\ttoggleIsFollowing: (isFollowing: boolean, userId: number) => ({ type: 'TOGGLE_IS_FOLLOWING', isFollowing, userId } as const),\n}\n\nexport const responseUsers = (usersCountOnPage: number, currentPage: number, filter: FilterType): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsUsersReducer.setFetching(true));\n\t\tdispatch(actionsUsersReducer.setPageToCurrent(currentPage));\n\t\tdispatch(actionsUsersReducer.setFilter(filter));\n\n\t\tconst response = await usersAPI.getUsers(usersCountOnPage, currentPage, filter);\n\n\t\tdispatch(actionsUsersReducer.setFetching(false));\n\t\tdispatch(actionsUsersReducer.setUsers(response.items));\n\t\tdispatch(actionsUsersReducer.setUsersCount(response.totalCount));\n\t}\n};\n\nconst _followUnfollow = async (userID: number, dispatch: DispatchType, apiMethod: (userId: number) => Promise<APIResponseType>,\n\tactionCreator: (userId: number) => ActionsType) => {\n\tdispatch(actionsUsersReducer.toggleIsFollowing(true, userID));\n\n\tconst response = await apiMethod(userID);\n\n\tif (response.resultCode === 0) {\n\t\tdispatch(actionCreator(userID))\n\t};\n\tdispatch(actionsUsersReducer.toggleIsFollowing(false, userID));\n}\n\nexport const unfollow = (userID: number): ThunkType => {\n\treturn async (dispatch) => {\n\t\tawait _followUnfollow(userID, dispatch, usersAPI.unfollow.bind(usersAPI), actionsUsersReducer.unfollowSuccess)\n\t}\n};\n\nexport const follow = (userID: number): ThunkType => {\n\treturn async (dispatch) => {\n\t\tawait _followUnfollow(userID, dispatch, usersAPI.follow.bind(usersAPI), actionsUsersReducer.followSuccess)\n\t}\n};\n\nexport default usersReducer;\n\n\nexport type InitialStateType = typeof initialState;\nexport type FilterType = typeof initialState.filter;\ntype ActionsType = InferActionsTypes<typeof actionsUsersReducer>\ntype DispatchType = Dispatch<ActionsType>\ntype ThunkType = BaseThunkType<ActionsType>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"wallpaper\":\"Navbar_wallpaper__1DlQr\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\",\"menu\":\"Navbar_menu__NKpxG\",\"menuLeft\":\"Navbar_menuLeft__1-CBC\",\"menuRight\":\"Navbar_menuRight__1hhAo\",\"userBlock\":\"Navbar_userBlock__yi49o\",\"userPhoto\":\"Navbar_userPhoto__2OkdO\",\"userName\":\"Navbar_userName__3NVEZ\",\"status\":\"Navbar_status__2Q0dS\",\"photoUpload\":\"Navbar_photoUpload__1tWKu\",\"menuPhoto\":\"Navbar_menuPhoto__3B8Vs\",\"container\":\"Navbar_container__1ESpZ\",\"label\":\"Navbar_label__2vojo\",\"uploadFileText\":\"Navbar_uploadFileText__iYdut\",\"uploadFileInput\":\"Navbar_uploadFileInput__1526y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ProfileIntro_container__1Nlan\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__SMTGm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"container\":\"Header_container__1VC87\",\"login\":\"Header_login__3V3Qa\",\"logo\":\"Header_logo__3_SJs\",\"mainName\":\"Header_mainName__1HPVb\",\"secondName\":\"Header_secondName__2K9lp\",\"search\":\"Header_search__ckDys\",\"freeSpace\":\"Header_freeSpace__2bhUy\",\"menuList\":\"Header_menuList__3jhVl\",\"menuLink\":\"Header_menuLink__ig-eX\",\"user\":\"Header_user__1QDl1\",\"arrow\":\"Header_arrow__1S-AG\",\"menu\":\"Header_menu__BQHSW\",\"userPhoto\":\"Header_userPhoto__3zN07\",\"controlBlock\":\"Header_controlBlock__14paH\",\"name\":\"Header_name__2-9cn\",\"status\":\"Header_status__2bL1G\"};","import axios from \"axios\";\n\nexport const instanceAxios = axios.create({\n\twithCredentials: true,\n\theaders: {\n\t\t'API-KEY': '65f23381-a001-469d-b8d8-33dccd7a4fd2'\n\t},\n\tbaseURL: 'https://social-network.samuraijs.com/api/1.0'\n})\n\nexport type APIResponseType<D = {}, RC = ResultCodeEnum> = {\n\tdata: D\n\tmessages: Array<string>\n\tresultCode: RC\n}\n\nexport enum ResultCodeEnum {\n\tSuccess = 0,\n\tError = 1\n}\n\nexport enum ResultCodeForCaptcha {\n\tCaptchaIsRequired = 10\n}","import { AppStateType } from \"./ReduxStore\";\n\nexport const getUserProfile = (state: AppStateType) => {\n\treturn state.profilePage.userProfile;\n}\n\nexport const getUserFriends = (state: AppStateType) => {\n\treturn state.sidebar.friends;\n}\n\nexport const getPosts = (state: AppStateType) => {\n\treturn state.profilePage.posts\n}\n\nexport const getUserName = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.fullName\n}\n\nexport const getUserId = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.userId\n}\n\nexport const getUserStatus = (state: AppStateType) => {\n\treturn state.profilePage.userStatus\n}\n\nexport const getUserSmallPhoto = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.photos.small\n}\n\nexport const getUserLargePhoto = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.photos.large\n}\n\nexport const getUserAboutMe = (state: AppStateType) => {\n\treturn state.profilePage.userProfile.aboutMe\n}\n\nexport const getMiProfileFetching = (state: AppStateType) => {\n\treturn state.profilePage.isFetching\n}","import { AppStateType } from \"./ReduxStore\";\n\nexport const getIsAuth = (state: AppStateType) => {\n\treturn state.auth.isAuth;\n}\n\nexport const getCaptchaURL = (state: AppStateType) => {\n\treturn state.auth.captchaURL;\n}\n\nexport const getMiId = (state: AppStateType) => {\n\treturn state.auth.userId;\n}\n\nexport const getMiLogin = (state: AppStateType) => {\n\treturn state.auth.login;\n}\n\nexport const getMiStatus = (state: AppStateType) => {\n\treturn state.auth.status;\n}\n\nexport const getMiProfile = (state: AppStateType) => {\n\treturn state.auth.profile;\n}\n\nexport const getMiFoolName = (state: AppStateType) => {\n\treturn state.auth.profile.fullName;\n}\n\nexport const getMiPhotoSmall = (state: AppStateType) => {\n\treturn state.auth.profile.photos.small;\n}\n\nexport const getMiPhotoLarge = (state: AppStateType) => {\n\treturn state.auth.profile.photos.large;\n}\n\nexport const getLoadingStatus = (state: AppStateType) => {\n\treturn state.auth.isLoading;\n}","import { instanceAxios, APIResponseType, ResultCodeEnum, ResultCodeForCaptcha } from './api';\n\ntype MiResponseType = {\n\tid: number\n\temail: string\n\tlogin: string\n}\ntype LoginResponseType = {\n\tuserId: number\n}\ntype CaptchaResponseType = {\n\turl: string\n}\n\nexport const authAPI = {\n\tgetAuth() {\n\t\treturn instanceAxios.get<APIResponseType<MiResponseType>>('/auth/me')\n\t\t\t.then(response => response.data)\n\t},\n\tlogIn(email: string, password: string, rememberMe = false, captcha: string | null = null) {\n\t\treturn instanceAxios.post<APIResponseType<LoginResponseType, ResultCodeEnum | ResultCodeForCaptcha>>\n\t\t\t('/auth/login', { email, password, rememberMe, captcha })\n\t\t\t.then(response => response.data)\n\t},\n\tlogOut() {\n\t\treturn instanceAxios.delete<APIResponseType>('/auth/login')\n\t\t\t.then(response => response.data)\n\t},\n\tgetCaptcha() {\n\t\treturn instanceAxios.get<CaptchaResponseType>('/security/get-captcha-url')\n\t\t\t.then(response => response.data)\n\t}\n};","import { stopSubmit } from \"redux-form\";\nimport { authAPI } from \"../api/authAPI\";\nimport { profileAPI } from \"../api/profileAPI\";\nimport { PhotosType, ProfileType } from \"../type/type\";\nimport { BaseThunkType, InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tuserId: null as number | null,\n\tlogin: null as string | null,\n\temail: null as string | null,\n\tcaptchaURL: null as string | null,\n\tisAuth: false,\n\tisLoading: false,\n\tstatus: null as string | null,\n\tprofile: {\n\t\taboutMe: null,\n\t\tlookingForAJob: null,\n\t\tlookingForAJobDescription: null,\n\t\tfullName: null,\n\t\tuserId: null,\n\t\tphotos: {\n\t\t\tsmall: null,\n\t\t\tlarge: null\n\t\t},\n\t\tcontacts: {\n\t\t\tfacebook: null,\n\t\t\twebsite: null,\n\t\t\tvk: null,\n\t\t\ttwitter: null,\n\t\t\tinstagram: null,\n\t\t\tyoutube: null,\n\t\t\tgithub: null,\n\t\t\tmainLink: null\n\t\t},\n\t} as ProfileType\n}\n\nconst authReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'USER_AUTH':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\t...action.data,\n\t\t\t}\n\t\tcase 'SET_CAPTCHA_URL':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcaptchaURL: action.captchaURL,\n\t\t\t}\n\t\tcase 'USER_PROFILE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: action.profile,\n\t\t\t}\n\t\tcase 'SET_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstatus: action.status,\n\t\t\t}\n\t\tcase 'SET_LOADING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisLoading: action.isLoading,\n\t\t\t}\n\t\tcase 'SET_USER_PHOTO_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tprofile: { ...state.profile, photos: action.photos },\n\t\t\t}\n\t\tdefault: return state;\n\t};\n};\n\n\nexport const actionsAuthReducer = {\n\tsetAuthUserData: (userId: number | null, login: string | null, email: string | null, isAuth: boolean) => ({\n\t\ttype: 'USER_AUTH', data: { userId, login, email, isAuth }\n\t} as const),\n\tsetMiStatus: (status: string) => ({ type: 'SET_STATUS', status } as const),\n\tsetMiProfile: (profile: ProfileType) => ({ type: 'USER_PROFILE', profile } as const),\n\tsetLoading: (isLoading: boolean) => ({ type: 'SET_LOADING', isLoading } as const),\n\tsetUserPhotoSuccess: (photos: PhotosType) => ({ type: 'SET_USER_PHOTO_SUCCESS', photos } as const),\n\tsetCaptchaURL: (captchaURL: string | null) => ({ type: 'SET_CAPTCHA_URL', captchaURL } as const),\n}\n\nexport const getAuth = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsAuthReducer.setCaptchaURL(null))\n\t\tconst miData = await authAPI.getAuth();\n\n\t\tif (miData.resultCode === 0) {\n\t\t\tlet { id, login, email } = miData.data;\n\t\t\tdispatch(actionsAuthReducer.setAuthUserData(id, login, email, true));\n\n\t\t\tconst userData = await profileAPI.getUserProfile(id);\n\n\t\t\tdispatch(actionsAuthReducer.setMiProfile(userData));\n\n\t\t\tconst userStatus = await profileAPI.getStatus(id);\n\n\t\t\tdispatch(actionsAuthReducer.setMiStatus(userStatus))\n\t\t}\n\n\t}\n}\n\nexport const setStatus = (status: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tdispatch(actionsAuthReducer.setLoading(true));\n\n\t\tconst response = await profileAPI.setStatus(status);\n\n\t\tdispatch(actionsAuthReducer.setLoading(false))\n\t\tif (response.resultCode !== 0) return;\n\t\tdispatch(actionsAuthReducer.setMiStatus(status))\n\t}\n}\n\nexport const logIn = (email: string, password: string, rememberMe: boolean, captchaCode: string): ThunkType => {\n\treturn async (dispatch) => {\n\t\tconst response = await authAPI.logIn(email, password, rememberMe, captchaCode)\n\n\t\tif (response.resultCode === 0) {\n\t\t\tdispatch(getAuth())\n\t\t} else {\n\t\t\tif (response.resultCode === 10) {\n\t\t\t\tconst captcha = await authAPI.getCaptcha()\n\t\t\t\tdispatch(actionsAuthReducer.setCaptchaURL(captcha.url))\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t\tdispatch(stopSubmit('login', { _error: response.messages }))\n\t\t}\n\t}\n}\n\nexport const logOut = (): ThunkType => {\n\treturn async (dispatch) => {\n\t\tconst response = await authAPI.logOut()\n\n\t\tif (response.resultCode !== 0) return;\n\t\tdispatch(actionsAuthReducer.setAuthUserData(null, null, null, false))\n\n\t}\n}\n\nexport const setUserPhoto = (file: File): ThunkType => {\n\treturn async (dispatch) => {\n\t\tconst response = await profileAPI.setPhoto(file);\n\n\t\tif (response.resultCode === 0) {\n\t\t\tdispatch(actionsAuthReducer.setUserPhotoSuccess(response.data.photos));\n\t\t}\n\n\t}\n}\n\n\nexport default authReducer;\n\n\ntype InitialStateType = typeof initialState;\ntype ActionsType = InferActionsTypes<typeof actionsAuthReducer>\ntype ThunkType = BaseThunkType<ActionsType>","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FriendType } from \"../type/type\";\n\n\nlet initialState = {\n\tfriends: [\n\t\t{ id: 1, name: 'Perec', avatar: 'https://i0.wp.com/7youtube.ru/wp-content/uploads/2017/01/dmdmdmddsaaaa.jpg' },\n\t\t{ id: 2, name: 'Vasia', avatar: 'http://cs622426.vk.me/v622426834/409d/baLqspYwi84.jpg' },\n\t\t{ id: 3, name: 'Vova', avatar: 'https://ispolnu.ru/uploads/services/20180618/1529316303dbca.jpg' },\n\t\t{ id: 4, name: 'Anton', avatar: 'https://discordgid.ru/wp-content/uploads/2020/03/diskord-avatar.jpg' },\n\t\t{ id: 5, name: 'Mary', avatar: 'https://omoro.ru/wp-content/uploads/2018/05/prikilnie-kartinki-na-avatarky-dlia-devyshek-9.jpg' },\n\t\t{ id: 6, name: 'Kolja', avatar: 'https://f1.upet.com/A_r2u6uZhnxA_x.jpg' },\n\t\t{ id: 7, name: 'Dron', avatar: 'https://pristor.ru/wp-content/uploads/2018/07/%D0%9E%D1%82%D0%BC%D0%B5%D0%BD%D0%BD%D1%8B%D0%B5-%D0%BA%D0%B0%D1%80%D1%82%D0%B8%D0%BD%D0%BA%D0%B8-%D0%B8-%D1%84%D0%BE%D1%82%D0%BE-%D0%BD%D0%B0-%D0%B0%D0%B2%D0%B0%D1%82%D0%B0%D1%80%D0%BA%D1%83-%D0%B4%D0%BB%D1%8F-%D0%BF%D0%B0%D1%80%D0%BD%D0%B5%D0%B9-%D0%B8-%D0%BC%D1%83%D0%B6%D1%87%D0%B8%D0%BD-%D1%81%D0%B1%D0%BE%D1%80%D0%BA%D0%B0-2018-17-726x1024.jpg' },\n\t] as Array<FriendType>,\n}\n\nconst sidebarReducer = (state = initialState, action: any): InitialStateType => {\n\treturn state;\n};\n\nexport default sidebarReducer;\n\ntype InitialStateType = typeof initialState;","import { getAuth } from \"./AuthReducer\";\nimport { InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tinitialized: false\n}\n\nconst appReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'INITIALIZED_SUCCESS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinitialized: true\n\t\t\t}\n\t\tdefault: return state;\n\t};\n};\n\nexport const actionsAppReducer = {\n\tinitializedSuccess: () => ({ type: 'INITIALIZED_SUCCESS' } as const)\n}\n\nexport const initializeApp = () => (dispatch: any) => {\n\tlet promise = dispatch(getAuth());\n\tPromise.all([promise])\n\t\t.then(() => {\n\t\t\tdispatch(actionsAppReducer.initializedSuccess());\n\t\t})\n}\n\nexport default appReducer;\n\n\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsAppReducer>","import { createStore, combineReducers, applyMiddleware, compose, Action } from \"redux\";\nimport authReducer from \"./AuthReducer\";\nimport dialogsReducer from \"./DialogsReducer\";\nimport profileReducer from \"./ProfileReducer\";\nimport sidebarReducer from \"./SidebarReducer\";\nimport usersReducer from \"./UsersReducer\";\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\";\nimport { reducer as formReducer } from 'redux-form'\nimport appReducer from \"./AppReducer\";\n\n\nlet rootReducers = combineReducers({\n\tdialogsPage: dialogsReducer,\n\tprofilePage: profileReducer,\n\tusersPage: usersReducer,\n\tsidebar: sidebarReducer,\n\tauth: authReducer,\n\tapp: appReducer,\n\tform: formReducer,\n})\n// @ts-ignore\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(rootReducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\n// @ts-ignore\nwindow.store = store;\n\nexport default store;\n\n\ntype RootStateType = typeof rootReducers;\nexport type AppStateType = ReturnType<RootStateType>\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\nexport type BaseThunkType<A extends Action, R = Promise<void>> = ThunkAction<R, AppStateType, unknown, A>","export default __webpack_public_path__ + \"static/media/user.d8e8e1fe.jpg\";","export default __webpack_public_path__ + \"static/media/preloaderPoint.7aaa1561.svg\";","import React, { ChangeEvent, useEffect, useState } from 'react';\nimport style from '../../../Style.module.css'\nimport s from './ProfileMenu.module.css'\nimport { NavLink } from 'react-router-dom';\n\ntype PropsType = {\n\tstatus: string | null\n\tlogOut: () => void\n\tsetStatus: (status: string) => void\n}\n\nconst ProfileMenu: React.FC<PropsType> = React.memo((props) => {\n\n\tconst [status, setStatus] = useState(props.status);\n\n\tuseEffect(() => {\n\t\tsetStatus(props.status)\n\t}, [props.status]);\n\n\tconst applyStatusChange = () => {\n\t\tprops.setStatus(status as string);\n\t};\n\n\tconst onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n\t\tsetStatus(e.currentTarget.value)\n\t}\n\n\treturn (\n\t\t<div className={s.menu}>\n\t\t\t<div className={style.block + ' ' + s.menuContainer}>\n\t\t\t\t<div className={s.menuName}>\n\t\t\t\t\tYOUR ACCOUNT\n\t\t\t\t</div>\n\t\t\t\t<ul className={s.menuList}>\n\t\t\t\t\t<NavLink to={'/profile/settings'}>\n\t\t\t\t\t\t<li className={s.menuLink}>\n\t\t\t\t\t\t\tProfile Settings\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</NavLink>\n\t\t\t\t\t<li onClick={props.logOut} className={s.menuLink + ' ' + s.signOut}>\n\t\t\t\t\t\t<span>Sign out</span>\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t\t<div className={s.menuName}>\n\t\t\t\t\tCHANGE STATUS\n\t\t\t\t</div>\n\t\t\t\t<div className={s.statusChange}>\n\t\t\t\t\t<input onChange={onStatusChange} autoFocus={true} placeholder=\"Type new post...\" value={status ? status : undefined} />\n\t\t\t\t\t<button onClick={applyStatusChange}>Sent</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n})\n\nexport default ProfileMenu","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport style from '../../Style.module.css';\nimport s from './Header.module.css';\nimport userPhoto from '../../assets/images/user.jpg';\nimport preloaderImage from '../../assets/images/preloaderPoint.svg';\nimport ProfileMenu from './ProfileMenu/ProfileMenu';\n\n\ntype PropsType = {\n\tstatus: string | null\n\tphoto: string | null\n\tmiName: string | null\n\tloading: boolean\n\tisAuth: boolean\n\tsetStatus: (status: string) => void\n\tlogOut: () => void\n}\n\nconst Header: React.FC<PropsType> = (props) => {\n\n\tlet preloader = (\n\t\t<div className={s.preloader}>\n\t\t\t<img src={preloaderImage} alt='Preloader' />\n\t\t</div>\n\t)\n\n\tlet statusBlock = (\n\t\t<span>{props.status || 'no status'}</span>\n\t)\n\n\tlet login = <NavLink to={'/login'} className={s.login}>Log In</NavLink>;\n\n\tlet user = <>\n\t\t<ul className={s.menuList}>\n\t\t\t<li className={s.menuLink}>\n\n\t\t\t\t<div className={s.user}>\n\t\t\t\t\t<div className={s.userPhoto}>\n\t\t\t\t\t\t<img src={props.photo ? props.photo : userPhoto} alt='mainImage'></img>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={s.controlBlock}>\n\t\t\t\t\t\t<div className={s.name}>\n\t\t\t\t\t\t\t{props.miName}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={s.status}>\n\t\t\t\t\t\t\t{props.loading ? preloader : statusBlock}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={s.menu}>\n\t\t\t\t\t\t<ProfileMenu status={props.status} setStatus={props.setStatus} logOut={props.logOut} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</li>\n\t\t</ul>\n\t</>\n\n\treturn (\n\t\t<header className={s.header} >\n\t\t\t<div className={`${style.container} ${s.container}`}>\n\t\t\t\t<div className={s.logo}>\n\t\t\t\t\t<span className={s.mainName}>SAMURAIS</span>\n\t\t\t\t\t<span className={s.secondName}>social network</span>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.freeSpace}></div>\n\t\t\t\t<input placeholder=\"Search here...\" className={s.search + ' ' + style.comingSoon} />\n\t\t\t\t{props.isAuth ? user : login}\n\t\t\t</div>\n\t\t</header >\n\t)\n}\n\nexport default Header;","import React from 'react';\nimport { connect } from 'react-redux';\nimport Header from './Header';\nimport { setStatus, logOut } from '../../redux/AuthReducer';\nimport { getIsAuth, getLoadingStatus, getMiFoolName, getMiId, getMiPhotoSmall, getMiStatus } from '../../redux/authSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchToPropsType = {\n\tsetStatus: (status: string) => void\n\tlogOut: () => void\n}\nclass HeaderContainer extends React.Component<MapStateToPropsType & MapDispatchToPropsType> {\n\trender = () => {\n\t\treturn (\n\t\t\t<Header miName={this.props.miName}\n\t\t\t\tstatus={this.props.status}\n\t\t\t\tlogOut={this.props.logOut}\n\t\t\t\tisAuth={this.props.isAuth}\n\t\t\t\tphoto={this.props.photo}\n\t\t\t\tloading={this.props.loading}\n\t\t\t\tsetStatus={this.props.setStatus} />\n\t\t)\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n\tisAuth: getIsAuth(state),\n\tuserId: getMiId(state),\n\tmiName: getMiFoolName(state),\n\tstatus: getMiStatus(state),\n\tphoto: getMiPhotoSmall(state),\n\tloading: getLoadingStatus(state),\n})\n\nexport default connect(mapStateToProps, { setStatus, logOut })(HeaderContainer);","import React from 'react';\nimport s from './Navbar.module.css';\nimport { NavLink } from 'react-router-dom';\n\ntype PropsType = {\n\tlink: string\n\tclassName: string\n}\n\nexport const MenuItem: React.FC<PropsType> = (props) => {\n\treturn (\n\t\t<div className={s.item}>\n\t\t\t<NavLink to={props.link} activeClassName={s.activeLink} className={props.className}>\n\t\t\t\t{props.link[1].toUpperCase() + props.link.slice(2)}\n\t\t\t</NavLink>\n\t\t</div>\n\t)\n}\n\nexport default MenuItem;","export default __webpack_public_path__ + \"static/media/sliders.957e732c.svg\";","import React, { ChangeEvent } from \"react\";\nimport s from \"./Navbar.module.css\";\nimport style from \"../../Style.module.css\";\nimport userPhoto from \"../../assets/images/user.jpg\";\nimport MenuItem from \"./MenuItem\";\nimport iconSliders from \"../../assets/images/sliders.svg\";\n\ntype PropsType = {\n  userPhoto: string | null;\n  status: string | null;\n  isMiProfile: boolean;\n  isAuth: boolean;\n  userName: string | null;\n  setUserPhoto: (file: File) => void;\n};\n\nclass Navbar extends React.Component<PropsType> {\n  onPhotoChange = (event: ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length) {\n      this.props.setUserPhoto(event.target.files[0]);\n    }\n  };\n\n  render() {\n    let photoUrl = !this.props.userPhoto ? userPhoto : this.props.userPhoto;\n    let status = !this.props.status ? (\n      \"\"\n    ) : (\n      <div className={s.status}>{this.props.status}</div>\n    );\n    let navItems = [\n      { link: \"/profile\", forInitialized: true, className: \"\" },\n      { link: \"/dialogs\", forInitialized: true, className: \"\" },\n      { link: \"/news\", forInitialized: false, className: style.comingSoon },\n      { link: \"/music\", forInitialized: false, className: style.comingSoon },\n      { link: \"/users\", forInitialized: false, className: \"\" },\n      { link: \"/settings\", forInitialized: false, className: style.comingSoon },\n    ];\n\n    let menu = navItems.map((item, index) =>\n      this.props.isAuth ? (\n        <MenuItem link={item.link} key={index} className={item.className} />\n      ) : !item.forInitialized ? (\n        <MenuItem link={item.link} key={index} className={item.className} />\n      ) : (\n        <></>\n      )\n    );\n\n    return (\n      <nav className={`${s.nav} ${style.block}`}>\n        <div className={s.wallpaper}>\n          <img\n            src='https://html.crumina.net/html-olympus/img/top-header1.webp'\n            alt='wallpaper'\n          ></img>\n        </div>\n        <div className={s.menu}>\n          <div className={s.menuLeft}>\n            {this.props.userName\n              ? menu.splice(0, Math.ceil(menu.length / 2))\n              : menu}\n          </div>\n          {this.props.userName && (\n            <>\n              <div className={s.userBlock}>\n                <div className={s.userPhoto}>\n                  <img src={photoUrl} alt='userPhoto'></img>\n                </div>\n                <div className={s.userName}>\n                  {this.props.userName}\n                  {status}\n                </div>\n              </div>\n              <div className={s.menuRight}>{menu}</div>\n            </>\n          )}\n        </div>\n        {this.props.isMiProfile && (\n          <>\n            <div className={s.photoUpload}>\n              <img src={iconSliders} alt='Controls' />\n              <div className={s.menuPhoto}>\n                <div className={style.block + \" \" + s.container}>\n                  <label className={s.label}>\n                    <span className={s.uploadFileText}>\n                      Upload profile photo\n                    </span>\n                    <input\n                      type='file'\n                      onChange={this.onPhotoChange}\n                      className={s.uploadFileInput}\n                    />\n                  </label>\n                  <label>\n                    <span className={s.uploadFileText + \" \" + style.comingSoon}>\n                      Upload header photo\n                    </span>\n                  </label>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Navbar from './Navbar';\nimport { getUser } from '../../redux/ProfileReducer';\nimport { setUserPhoto } from '../../redux/AuthReducer';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { getUserId, getUserName, getUserSmallPhoto, getUserStatus } from '../../redux/profileSelector';\nimport { getIsAuth, getMiId, getMiStatus } from '../../redux/authSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\n\ntype MapStateToProps = ReturnType<typeof mapStateToProps>\ntype MapDispatchToProps = {\n\tgetUser: (userId: number | null) => void\n\tsetUserPhoto: (file: File) => void\n}\n\n\nclass NavbarContainer extends React.Component<MapStateToProps & MapDispatchToProps> {\n\tisMiProfile = () => {\n\t\tif (this.props.userId === this.props.miId) return true;\n\t\treturn false;\n\t}\n\tcomponentDidUpdate = () => {\n\t\tif (this.isMiProfile()) {\n\t\t\tif (this.props.status !== this.props.miStatus) {\n\t\t\t\tthis.props.getUser(this.props.miId)\n\t\t\t}\n\t\t}\n\t}\n\trender = () => {\n\t\treturn <Navbar\n\t\t\tuserName={this.props.userName}\n\t\t\tuserPhoto={this.props.userPhoto}\n\t\t\tisAuth={this.props.isAuth}\n\t\t\tstatus={this.props.status}\n\t\t\tisMiProfile={this.isMiProfile()}\n\t\t\tsetUserPhoto={this.props.setUserPhoto} />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tuserName: getUserName(state),\n\t\tuserPhoto: getUserSmallPhoto(state),\n\t\tstatus: getUserStatus(state),\n\t\tisAuth: getIsAuth(state),\n\t\tuserId: getUserId(state),\n\t\tmiId: getMiId(state),\n\t\tmiStatus: getMiStatus(state)\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { getUser, setUserPhoto }),\n\twithRouter\n)(NavbarContainer)","import React from 'react';\nimport s from './../FriendsBlock.module.css'\n\n\nconst FriendItem = (props) => {\n\treturn (\n\t\t<div className={s.friend}>\n\t\t\t<img src={props.url} alt='avatar'></img>\n\t\t</div >\n\t)\n}\n\nexport default FriendItem;","import React from 'react';\nimport s from './FriendsBlock.module.css'\nimport style from '../../../Style.module.css'\nimport FriendItem from './FriendItem/FriendItem';\n\n\nconst FriendBlock = (props) => {\n\tlet friends = props.friends\n\t\t.map(f => <FriendItem url={f.avatar} name={f.name} key={f.id} />);\n\treturn (\n\t\t<div className={style.block}>\n\t\t\t<div className={style.blockName}>\n\t\t\t\t<span className={style.comingSoon}>\n\t\t\t\t\tFriends ({props.friends.length})\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div className={s.container}>\n\t\t\t\t{friends}\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport default FriendBlock;","import { connect } from 'react-redux';\nimport { getUserFriends } from '../../../redux/profileSelector';\nimport FriendBlock from './FriendsBlock';\n\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tfriends: getUserFriends(state),\n\t}\n}\n\nexport default connect(mapStateToProps, {})(FriendBlock);","import React from 'react';\nimport s from './ProfileIntro.module.css'\nimport style from '../../../Style.module.css'\n\n\nconst ProfileIntro = (props) => {\n\treturn (\n\t\t<div className={style.block}>\n\t\t\t<div className={style.blockName}>\n\t\t\t\tProfile Intro\n\t\t\t</div>\n\t\t\t<div className={s.container}>\n\t\t\t\t<h4 className=\"title\">About Me:</h4>\n\t\t\t\t<span className=\"text\">{props.userProfile.aboutMe}</span>\n\t\t\t\t<h4 className=\"title\">Looking for a job description:</h4>\n\t\t\t\t<span className=\"text\">{props.userProfile.lookingForAJobDescription}</span>\n\t\t\t\t<h4 className=\"title\">Contacts:</h4>\n\t\t\t\t<ul>\n\t\t\t\t\t{Object.entries(props.userProfile.contacts).map(([key, value]) => value\n\t\t\t\t\t\t? value.toLowerCase().startsWith(\"http\")\n\t\t\t\t\t\t\t? <li key={key}><a href={value}>{key}</a></li>\n\t\t\t\t\t\t\t: <li key={key}><a href={'https://' + value}>{key}</a></li>\n\t\t\t\t\t\t: ' ')}\n\t\t\t\t</ul>\n\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport default ProfileIntro;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserProfile } from '../../../redux/profileSelector';\nimport ProfileIntro from './ProfileIntro';\n\nclass ProfileIntroContainer extends React.Component {\n\trender = () => {\n\t\treturn <ProfileIntro userProfile={this.props.userProfile} />\n\t}\n}\n\nconst mapStateToProps = (state) => ({\n\tuserProfile: getUserProfile(state)\n})\n\nexport default connect(mapStateToProps, {})(ProfileIntroContainer);","import React from 'react';\nimport s from './Post.module.css'\nimport style from '../../../../Style.module.css'\n\ntype PropsType = {\n\tmessage: string\n\tcounts: number\n}\n\nconst Post: React.FC<PropsType> = ({ message, counts }) => {\n\treturn (\n\t\t<div className={`${s.item} ${style.block}`}>\n\t\t\t<img src='https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQcdS2G0_159FyiX7C5I-ed1aw2Nj_R3t1P9g&usqp=CAU' alt='mainImage'></img>\n\t\t\t{message}\n\t\t\t<div>\n\t\t\t\t<span>{counts} Likes </span>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Post;","import React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport style from '../../../Style.module.css';\nimport BigButton from '../../elements/BigButton';\nimport { InjectedFormProps, reduxForm } from 'redux-form';\nimport { createField, Textarea } from '../../elements/FormsControls';\nimport { PosteType } from '../../../redux/ProfileReducer';\n\ntype NewPostFormOunProps = {}\ntype NewPostFormValuesType = {\n\tpostText: string\n}\ntype NewPostFormValuesTypeKeys = keyof NewPostFormValuesType\n\nconst newPostForm: React.FC<InjectedFormProps<NewPostFormValuesType, NewPostFormOunProps>> & NewPostFormOunProps = (props) => {\n\treturn (\n\t\t<form onSubmit={props.handleSubmit} className={`${style.block} ${s.newPosteBlock}`}>\n\t\t\t<h3>Add post</h3>\n\t\t\t{createField<NewPostFormValuesTypeKeys>('Type new post...', 'postText', [], Textarea)}\n\t\t\t<BigButton value='Sent' />\n\t\t</form>\n\t)\n}\n\nconst NewPostReduxForm = reduxForm<NewPostFormValuesType, NewPostFormOunProps>({\n\tform: 'postMessage'\n})(newPostForm)\n\ntype MyPostsPropsType = {\n\tposts: Array<PosteType>\n\taddPost: (postText: string) => void\n}\nconst MyPosts: React.FC<MyPostsPropsType> = (props) => {\n\tlet postsElement = props.posts.map(p => <Post message={p.message} counts={p.likesCount} key={p.id} />).reverse();\n\tlet onSubmit = (formData: NewPostFormValuesType) => {\n\t\tprops.addPost(formData.postText)\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<NewPostReduxForm onSubmit={onSubmit} />\n\t\t\t<div className={s.posts}>\n\t\t\t\t{postsElement}\n\t\t\t</div>\n\t\t</div >\n\t)\n}\n\nexport default MyPosts;\n\n","import { actionsProfileReducer } from '../../../redux/ProfileReducer';\nimport MyPosts from './MyPosts';\nimport { connect } from 'react-redux';\nimport { getPosts } from '../../../redux/profileSelector';\nimport { AppStateType } from '../../../redux/ReduxStore';\n\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tposts: getPosts(state)\n\t}\n};\n\nconst MyPostsContainer = connect(mapStateToProps, { addPost: actionsProfileReducer.addPost })(MyPosts)\n\nexport default MyPostsContainer;","import React from 'react';\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\nimport s from './Profile.module.css'\n\n\nconst Profile = () => {\n\treturn (\n\t\t<div className={s.content}>\n\t\t\t<MyPostsContainer />\n\t\t</div>\n\t)\n}\n\nexport default Profile;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\nimport { getMiId } from '../../redux/authSelector';\nimport { getUser } from '../../redux/ProfileReducer';\nimport { getUserProfile } from '../../redux/profileSelector';\nimport { AppStateType } from '../../redux/ReduxStore';\nimport Profile from './Profile';\n\ntype MapStateToPropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchToProps = {\n\tgetUser: (userId: number) => void\n}\ntype PathParamsType = {\n\tuserId: string\n}\ntype PropsType = RouteComponentProps<PathParamsType> & MapStateToPropsType & MapDispatchToProps\n\nclass ProfileContainer extends React.Component<PropsType> {\n\trefreshProfile = () => {\n\t\tlet userId: number | null = +this.props.match.params.userId || this.props.miId;\n\t\tthis.props.getUser(userId as number);\n\t}\n\n\tcomponentDidMount = () => {\n\t\tthis.refreshProfile()\n\t}\n\n\tcomponentDidUpdate = (prevProps: PropsType) => {\n\t\tif (this.props.match.params.userId !== prevProps.match.params.userId)\n\t\t\tthis.refreshProfile()\n\t}\n\n\trender = () => {\n\t\treturn <Profile />\n\t}\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n\treturn {\n\t\tuserProfile: getUserProfile(state),\n\t\tmiId: getMiId(state)\n\t}\n}\n\nexport default compose<React.ComponentType>(\n\tconnect(mapStateToProps, { getUser }),\n\twithRouter,\n\twithAuthRedirect\n)(ProfileContainer)\n","import React from \"react\";\nimport { Suspense } from \"react\";\n\n\nfunction withSuspense<WSP>(Component: React.ComponentType<WSP>) {\n\treturn (props: WSP) => {\n\t\treturn (\n\t\t\t<Suspense fallback={<div>Loading...</div>}>\n\t\t\t\t<Component {...props} />\n\t\t\t</Suspense>\n\t\t)\n\t}\n}\n\nexport default withSuspense;","import React from 'react';\nimport { Redirect, Route, Router, Switch, withRouter } from 'react-router-dom';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport NavbarContainer from './components/Navbar/NavbarContainer';\nimport FriendsBlockContainer from './components/Sidebar/FriendsBlock/FriendsBlockContainer';\nimport ProfileIntroContainer from './components/Sidebar/ProfileIntro/ProfileIntroContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport { connect } from 'react-redux';\nimport { initializeApp } from './redux/AppReducer';\nimport Preloader from './components/elements/Preloader';\nimport { compose } from 'redux';\nimport withSuspense from './hoc/withSuspense';\nimport { AppStateType } from './redux/ReduxStore';\n\nconst Login = React.lazy(() => import('./components/Login/Login'));\nconst ProfileInfoContainer = React.lazy(() => import('./components/ProfileInfo/ProfileInfoContainer'));\nconst News = React.lazy(() => import('./components/News/News'));\nconst Settings = React.lazy(() => import('./components/Settings/Settings'));\nconst Music = React.lazy(() => import('./components/Music/Music'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\ntype MapStatePropsType = ReturnType<typeof mapStateToProps>\ntype MapDispatchPropsType = {\n  initializeApp: () => void\n}\n\nconst SuspendedDialogs = withSuspense(DialogsContainer)\nconst SuspendedUsers = withSuspense(UsersContainer)\nconst SuspendedLogin = withSuspense(Login)\nconst SuspendedProfileInfo = withSuspense(ProfileInfoContainer)\n\nclass App extends React.Component<MapStatePropsType & MapDispatchPropsType> {\n  componentDidMount = () => {\n    this.props.initializeApp()\n  }\n  render() {\n    if (!this.props.initialized) return <Preloader />\n\n    return (\n      <div>\n        <Route path='/login' render={() => <SuspendedLogin />} />\n        <div>\n          <HeaderContainer />\n          <div className='app-wrapper'>\n            <NavbarContainer />\n            <div className='app-wrapper-content'>\n              <Switch>\n                <Route exact path='/' render={() => <Redirect to='/profile' />} />\n                <Route path='/dialogs' render={() => <SuspendedDialogs />} />\n                <Route path='/profile/settings' render={() => <SuspendedProfileInfo />} />\n                <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n                <Route path='/news' render={withSuspense(News)} />\n                <Route path='/music' render={withSuspense(Music)} />\n                <Route path='/users' render={() => <SuspendedUsers />} />\n                <Route path='/settings' render={withSuspense(Settings)} />\n              </Switch>\n            </div>\n            <div className='app-wrapper-right'>\n              <ProfileIntroContainer />\n              <FriendsBlockContainer />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: AppStateType) => ({\n  initialized: state.app.initialized,\n})\n\nexport default compose<React.ComponentType>(\n  withRouter,\n  connect(mapStateToProps, { initializeApp })\n)(App);\n","import reportWebVitals from './reportWebVitals';\nimport Store from './redux/ReduxStore';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux'\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<HashRouter>\n\t\t\t{/* <BrowserRouter> */}\n\t\t\t<Provider store={Store}>\n\t\t\t\t<App />\n\t\t\t</Provider>\n\t\t\t{/* </BrowserRouter> */}\n\t\t</HashRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import { PhotosType, ProfileType } from \"../type/type\";\nimport { instanceAxios, APIResponseType } from \"./api\";\n\ntype SetPhotoResponseData = {\n\tphotos: PhotosType\n}\n\nexport const profileAPI = {\n\tgetUserProfile(userId: number) {\n\t\treturn instanceAxios.get<ProfileType>(`/profile/` + userId)\n\t\t\t.then(response => response.data)\n\t},\n\tgetStatus(userId: number) {\n\t\treturn instanceAxios.get<string>(`/profile/status/` + userId)\n\t\t\t.then(response => response.data)\n\t},\n\tsetStatus(status: string) {\n\t\treturn instanceAxios.put<APIResponseType>('/profile/status', { status })\n\t\t\t.then(response => response.data)\n\t},\n\tsetProfileData(profileData: ProfileType) {\n\t\treturn instanceAxios.put<APIResponseType>('/profile', profileData)\n\t\t\t.then(response => response.data)\n\t},\n\tsetPhoto(filePhoto: File) {\n\t\tconst formData = new FormData();\n\t\tformData.append(\"image\", filePhoto);\n\t\treturn instanceAxios.put<APIResponseType<SetPhotoResponseData>>('/profile/photo', formData, {\n\t\t\theaders: {\n\t\t\t\t\"content-type\": \"multipart/form-data\"\n\t\t\t}\n\t\t})\n\t\t\t.then(response => response.data)\n\t}\n};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"ProfileMenu_menu__15f_3\",\"menuContainer\":\"ProfileMenu_menuContainer__29BGD\",\"menuName\":\"ProfileMenu_menuName__2npTl\",\"menuList\":\"ProfileMenu_menuList__3gtY6\",\"menuLink\":\"ProfileMenu_menuLink__3tump\",\"signOut\":\"ProfileMenu_signOut__1xqKi\",\"statusChange\":\"ProfileMenu_statusChange__iQCE8\"};","import { stopSubmit } from \"redux-form\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { profileAPI } from \"../api/profileAPI\";\nimport { ProfileType } from \"../type/type\";\nimport { actionsAuthReducer } from \"./AuthReducer\";\nimport { AppStateType, InferActionsTypes } from \"./ReduxStore\";\n\n\nlet initialState = {\n\tposts: [\n\t\t{ id: 1, message: 'Hi! It\\'s my first post in my social network', likesCount: 1 },\n\t\t{ id: 2, message: 'All work', likesCount: 2 },\n\t\t{ id: 3, message: 'Some post here', likesCount: 5 },\n\t\t{ id: 4, message: 'Short post', likesCount: 0 },\n\t] as Array<PosteType>,\n\tuserProfile: {\n\t\tuserId: null,\n\t\tfullName: null,\n\t\taboutMe: null,\n\t\tlookingForAJob: false,\n\t\tlookingForAJobDescription: null,\n\t\tphotos: {\n\t\t\tsmall: null,\n\t\t\tlarge: null\n\t\t},\n\t\tcontacts: {\n\t\t\tfacebook: null,\n\t\t\twebsite: null,\n\t\t\tvk: null,\n\t\t\ttwitter: null,\n\t\t\tinstagram: null,\n\t\t\tyoutube: null,\n\t\t\tgithub: null,\n\t\t\tmainLink: null\n\t\t},\n\t} as ProfileType,\n\tuserStatus: null as string | null,\n\tisFetching: false\n}\n\nconst profileReducer = (state = initialState, action: ActionsType): InitialStateType => {\n\tswitch (action.type) {\n\t\tcase 'ADD_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: [...state.posts, {\n\t\t\t\t\tid: ++state.posts.length,\n\t\t\t\t\tmessage: action.postText,\n\t\t\t\t\tlikesCount: 0,\n\t\t\t\t}]\n\t\t\t};\n\t\tcase 'DELETE_POST':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tposts: state.posts.filter(p => p.id !== action.postId)\n\t\t\t};\n\t\tcase 'SET_USER_PROFILE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserProfile: action.userProfile,\n\t\t\t};\n\t\tcase 'SET_FETCHING':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisFetching: action.fetching,\n\t\t\t};\n\t\tcase 'SET_USER_STATUS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tuserStatus: action.status\n\t\t\t};\n\t\tdefault: return state;\n\t};\n};\n\n\nexport const actionsProfileReducer = {\n\taddPost: (postText: string) => ({ type: 'ADD_POST', postText } as const),\n\tdeletePost: (postId: number) => ({ type: 'DELETE_POST', postId } as const),\n\tsetUserStatus: (status: string) => ({ type: 'SET_USER_STATUS', status } as const),\n\tsetUserProfile: (userProfile: ProfileType) => ({ type: 'SET_USER_PROFILE', userProfile } as const),\n\tsetFetching: (fetching: boolean) => ({ type: 'SET_FETCHING', fetching } as const)\n}\n\n\nexport const getUser = (userId: number): ThunkType => {\n\treturn async (dispatch: any) => {\n\t\tconst userProfile = await profileAPI.getUserProfile(userId);\n\t\tdispatch(actionsProfileReducer.setUserProfile(userProfile));\n\n\t\tconst userStatus = await profileAPI.getStatus(userId);\n\t\tdispatch(actionsProfileReducer.setUserStatus(userStatus))\n\t}\n}\n\nexport const setProfileData = (profileData: ProfileType): ThunkType => {\n\treturn async (dispatch: any, getState: any) => {\n\t\tconst userId = getState().auth.userId;\n\t\tdispatch(actionsProfileReducer.setFetching(true))\n\t\tconst response = await profileAPI.setProfileData(profileData);\n\t\tif (response.resultCode === 0) {\n\t\t\tconst miData = await profileAPI.getUserProfile(userId)\n\t\t\tdispatch(actionsAuthReducer.setMiProfile(miData))\n\t\t} else {\n\t\t\tlet contactsError = new Map();\n\t\t\tlet otherError = new Map();\n\t\t\tresponse.messages.forEach((element: string) => {\n\t\t\t\tlet key = element.slice((element.indexOf('Contacts->') + 10), (element.length - 1)).toLowerCase();\n\t\t\t\tlet value = element.slice(0, (element.indexOf('(Contacts->') - 1));\n\t\t\t\tif (element.includes('Contacts->')) {\n\t\t\t\t\tcontactsError.set(key, value);\n\t\t\t\t} else {\n\t\t\t\t\totherError.set('_error', element);\n\t\t\t\t}\n\t\t\t});\n\t\t\tdispatch(stopSubmit('ProfileInfo', { ...Object.fromEntries(otherError), 'contacts': Object.fromEntries(contactsError) }))\n\t\t}\n\t\tdispatch(actionsProfileReducer.setFetching(false))\n\t}\n}\n\n\nexport default profileReducer;\n\n\nexport type PosteType = {\n\tid: number\n\tmessage: string\n\tlikesCount: number\n}\ntype InitialStateType = typeof initialState\ntype ActionsType = InferActionsTypes<typeof actionsProfileReducer>\ntype ThunkType = ThunkAction<Promise<void>, AppStateType, unknown, ActionsType>","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputContainer\":\"FormsControls_inputContainer__2Ovpx\",\"input\":\"FormsControls_input__1i9a4\",\"error\":\"FormsControls_error__3oS1U\",\"errorMessage\":\"FormsControls_errorMessage__1xBnB\",\"description\":\"FormsControls_description__2znvV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FriendsBlock_container__1pzrw\",\"friend\":\"FriendsBlock_friend__1X8nA\"};","import React from 'react';\nimport { Field, WrappedFieldMetaProps } from 'redux-form';\nimport { FieldValidatorsType } from '../../utils/validators';\nimport s from './FormsControls.module.css';\n\ntype FormControlPropsType = {\n\tmeta: WrappedFieldMetaProps\n\tdescription?: string\n\tinput: any\n\tchildren?: React.ReactNode\n\n}\n\nconst Element = (Element: string): React.FC<FormControlPropsType> => ({ meta, input, ...props }) => {\n\tconst hasErr = meta.touched && meta.error;\n\treturn (\n\t\t<div className={s.inputContainer + ' ' + (hasErr ? s.error : '')}>\n\t\t\t<Element {...input} {...props} className={s.input} />\n\t\t\t{props.description ? <span className={s.description}>{props.description}</span> : ''}\n\t\t\t{hasErr && <div className={s.errorMessage}>{meta.error}</div>}\n\t\t</div>\n\t)\n}\n\nexport const Input = Element('input');\n\nexport const Textarea = Element('textarea');\n\n\n\nexport function createField<FormKeysType extends string>(placeholder: string | undefined,\n\tname: FormKeysType,\n\tvalidators: Array<FieldValidatorsType>,\n\tcomponent: React.FC<FormControlPropsType>,\n\tdescription = '', props = {}) {\n\treturn (\n\t\t<div>\n\t\t\t<Field placeholder={placeholder} name={name} validate={validators} component={component} {...props} description={description} />\n\t\t</div>\n\t)\n}\n\nexport default Element;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPosteBlock\":\"MyPosts_newPosteBlock__1S_bJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"BigButton_button__17-al\",\"cancel\":\"BigButton_cancel__1eqgI\"};"],"sourceRoot":""}